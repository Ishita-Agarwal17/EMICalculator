{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { Renderer2, Directive, ElementRef, HostBinding, ChangeDetectorRef, Component, ViewChild, HostListener, Input, EventEmitter, Output, ContentChild, forwardRef, NgZone, NgModule } from '@angular/core';\nimport { throttleTime, tap, distinctUntilChanged, filter } from 'rxjs/operators';\nimport detectPassiveEvents from 'detect-passive-events';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/** @enum {number} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nconst _c0 = [\"tooltipTemplate\"];\nconst _c1 = [\"leftOuterSelectionBar\"];\nconst _c2 = [\"rightOuterSelectionBar\"];\nconst _c3 = [\"fullBar\"];\nconst _c4 = [\"selectionBar\"];\nconst _c5 = [\"minHandle\"];\nconst _c6 = [\"maxHandle\"];\nconst _c7 = [\"floorLabel\"];\nconst _c8 = [\"ceilLabel\"];\nconst _c9 = [\"minHandleLabel\"];\nconst _c10 = [\"maxHandleLabel\"];\nconst _c11 = [\"combinedLabel\"];\nconst _c12 = [\"ticksElement\"];\n\nfunction SliderComponent_span_28_ng5_slider_tooltip_wrapper_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ng5-slider-tooltip-wrapper\", 31);\n  }\n\n  if (rf & 2) {\n    const t_r13 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r14 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"template\", ctx_r14.tooltipTemplate)(\"tooltip\", t_r13.valueTooltip)(\"placement\", t_r13.valueTooltipPlacement)(\"content\", t_r13.value);\n  }\n}\n\nfunction SliderComponent_span_28_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 32);\n  }\n\n  if (rf & 2) {\n    const t_r13 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"innerHTML\", t_r13.legend, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nconst _c13 = function (a0) {\n  return {\n    \"ng5-slider-selected\": a0\n  };\n};\n\nfunction SliderComponent_span_28_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 27);\n    ɵngcc0.ɵɵelement(1, \"ng5-slider-tooltip-wrapper\", 28);\n    ɵngcc0.ɵɵtemplate(2, SliderComponent_span_28_ng5_slider_tooltip_wrapper_2_Template, 1, 4, \"ng5-slider-tooltip-wrapper\", 29);\n    ɵngcc0.ɵɵtemplate(3, SliderComponent_span_28_span_3_Template, 1, 1, \"span\", 30);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const t_r13 = ctx.$implicit;\n    const ctx_r12 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(7, _c13, t_r13.selected))(\"ngStyle\", t_r13.style);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"template\", ctx_r12.tooltipTemplate)(\"tooltip\", t_r13.tooltip)(\"placement\", t_r13.tooltipPlacement);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", t_r13.value != null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", t_r13.legend != null);\n  }\n}\n\nfunction TooltipWrapperComponent_ng_container_0_1_ng_template_0_Template(rf, ctx) {}\n\nfunction TooltipWrapperComponent_ng_container_0_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TooltipWrapperComponent_ng_container_0_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\n\nconst _c14 = function (a0, a1, a2) {\n  return {\n    tooltip: a0,\n    placement: a1,\n    content: a2\n  };\n};\n\nfunction TooltipWrapperComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TooltipWrapperComponent_ng_container_0_1_Template, 1, 0, null, 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.template)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(2, _c14, ctx_r0.tooltip, ctx_r0.placement, ctx_r0.content));\n  }\n}\n\nfunction TooltipWrapperComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"title\", ctx_r1.tooltip)(\"data-tooltip-placement\", ctx_r1.placement);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.content, \" \");\n  }\n}\n\nconst PointerType = {\n  /** Low pointer */\n  Min: 0,\n\n  /** High pointer */\n  Max: 1\n};\nPointerType[PointerType.Min] = \"Min\";\nPointerType[PointerType.Max] = \"Max\";\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/** @enum {number} */\n\nconst LabelType = {\n  /** Label above low pointer */\n  Low: 0,\n\n  /** Label above high pointer */\n  High: 1,\n\n  /** Label for minimum slider value */\n  Floor: 2,\n\n  /** Label for maximum slider value */\n  Ceil: 3,\n\n  /** Label below legend tick */\n  TickValue: 4\n};\nLabelType[LabelType.Low] = \"Low\";\nLabelType[LabelType.High] = \"High\";\nLabelType[LabelType.Floor] = \"Floor\";\nLabelType[LabelType.Ceil] = \"Ceil\";\nLabelType[LabelType.TickValue] = \"TickValue\";\n/**\n * Custom step definition\n *\n * This can be used to specify custom values and legend values for slider ticks\n * @record\n */\n\n/**\n * Slider options\n */\n\nclass Options {\n  constructor() {\n    /**\n     * Minimum value for a slider.\n     * Not applicable when using stepsArray.\n     */\n    this.floor = 0;\n    /**\n     * Maximum value for a slider.\n     * Not applicable when using stepsArray.\n     */\n\n    this.ceil = null;\n    /**\n     * Step between each value.\n     * Not applicable when using stepsArray.\n     */\n\n    this.step = 1;\n    /**\n     * The minimum range authorized on the slider.\n     * Applies to range slider only.\n     * When using stepsArray, expressed as index into stepsArray.\n     */\n\n    this.minRange = null;\n    /**\n     * The maximum range authorized on the slider.\n     * Applies to range slider only.\n     * When using stepsArray, expressed as index into stepsArray.\n     */\n\n    this.maxRange = null;\n    /**\n     * Set to true to have a push behavior. When the min handle goes above the max,\n     * the max is moved as well (and vice-versa). The range between min and max is\n     * defined by the step option (defaults to 1) and can also be overriden by\n     * the minRange option. Applies to range slider only.\n     */\n\n    this.pushRange = false;\n    /**\n     * The minimum value authorized on the slider.\n     * When using stepsArray, expressed as index into stepsArray.\n     */\n\n    this.minLimit = null;\n    /**\n     * The maximum value authorized on the slider.\n     * When using stepsArray, expressed as index into stepsArray.\n     */\n\n    this.maxLimit = null;\n    /**\n     * Custom translate function. Use this if you want to translate values displayed\n     * on the slider.\n     */\n\n    this.translate = null;\n    /**\n     * Custom function for combining overlapping labels in range slider.\n     * It takes the min and max values (already translated with translate fuction)\n     * and should return how these two values should be combined.\n     * If not provided, the default function will join the two values with\n     * ' - ' as separator.\n     */\n\n    this.combineLabels = null;\n    /**\n     * Use to display legend under ticks (thus, it needs to be used along with\n     * showTicks or showTicksValues). The function will be called with each tick\n     * value and returned content will be displayed under the tick as a legend.\n     * If the returned value is null, then no legend is displayed under\n     * the corresponding tick.You can also directly provide the legend values\n     * in the stepsArray option.\n     */\n\n    this.getLegend = null;\n    /**\n     * If you want to display a slider with non linear/number steps.\n     * Just pass an array with each slider value and that's it; the floor, ceil and step settings\n     * of the slider will be computed automatically.\n     * By default, the value model and valueHigh model values will be the value of the selected item\n     * in the stepsArray.\n     * They can also be bound to the index of the selected item by setting the bindIndexForStepsArray\n     * option to true.\n     */\n\n    this.stepsArray = null;\n    /**\n     * Set to true to bind the index of the selected item to value model and valueHigh model.\n     */\n\n    this.bindIndexForStepsArray = false;\n    /**\n     * When set to true and using a range slider, the range can be dragged by the selection bar.\n     * Applies to range slider only.\n     */\n\n    this.draggableRange = false;\n    /**\n     * Same as draggableRange but the slider range can't be changed.\n     * Applies to range slider only.\n     */\n\n    this.draggableRangeOnly = false;\n    /**\n     * Set to true to always show the selection bar before the slider handle.\n     */\n\n    this.showSelectionBar = false;\n    /**\n     * Set to true to always show the selection bar after the slider handle.\n     */\n\n    this.showSelectionBarEnd = false;\n    /**\n     * Set a number to draw the selection bar between this value and the slider handle.\n     * When using stepsArray, expressed as index into stepsArray.\n     */\n\n    this.showSelectionBarFromValue = null;\n    /**\n     * Only for range slider. Set to true to visualize in different colour the areas\n     * on the left/right (top/bottom for vertical range slider) of selection bar between the handles.\n     */\n\n    this.showOuterSelectionBars = false;\n    /**\n     * Set to true to hide pointer labels\n     */\n\n    this.hidePointerLabels = false;\n    /**\n     * Set to true to hide min / max labels\n     */\n\n    this.hideLimitLabels = false;\n    /**\n     * Set to false to disable the auto-hiding behavior of the limit labels.\n     */\n\n    this.autoHideLimitLabels = true;\n    /**\n     * Set to true to make the slider read-only.\n     */\n\n    this.readOnly = false;\n    /**\n     * Set to true to disable the slider.\n     */\n\n    this.disabled = false;\n    /**\n     * Throttle interval for mouse events in milliseconds.\n     * This is provided to avoid a flood of events when moving the slider with mouse.\n     */\n\n    this.mouseEventsInterval = 50;\n    /**\n     * Throttle interval for touch events in milliseconds.\n     * This is provided to avoid a flood of events when moving the slider with touch gesture.\n     */\n\n    this.touchEventsInterval = 50;\n    /**\n     * Throttle interval for input changes (changes to bindings or reactive form inputs)\n     * This is provided to avoid a flood of events on frequent input binding changes affecting performance.\n     */\n\n    this.inputEventsInterval = 100;\n    /**\n     * Throttle interval for output changes (signalling changes to output bindings and user callbacks)\n     * This is provided to avoid a flood of outgoing events affecting Angular app performance.\n     */\n\n    this.outputEventsInterval = 100;\n    /**\n     * Set to true to display a tick for each step of the slider.\n     */\n\n    this.showTicks = false;\n    /**\n     * Set to true to display a tick and the step value for each step of the slider..\n     */\n\n    this.showTicksValues = false;\n    /* The step between each tick to display. If not set, the step value is used.\n        Not used when ticksArray is specified. */\n\n    this.tickStep = null;\n    /* The step between displaying each tick step value. */\n\n    this.tickValueStep = 1;\n    /**\n     * Use to display ticks at specific positions.\n     * The array contains the index of the ticks that should be displayed.\n     * For example, [0, 1, 5] will display a tick for the first, second and sixth values.\n     */\n\n    this.ticksArray = null;\n    /**\n     * Used to display a tooltip when a tick is hovered.\n     * Set to a function that returns the tooltip content for a given value.\n     */\n\n    this.ticksTooltip = null;\n    /**\n     * Same as ticksTooltip but for ticks values.\n     */\n\n    this.ticksValuesTooltip = null;\n    /**\n     * Set to true to display the slider vertically.\n     * The slider will take the full height of its parent.\n     * Changing this value at runtime is not currently supported.\n     */\n\n    this.vertical = false;\n    /**\n     * Function that returns the current color of the selection bar.\n     * If your color won't change, don't use this option but set it through CSS.\n     * If the returned color depends on a model value (either value or valueHigh),\n     * you should use the argument passed to the function.\n     * Indeed, when the function is called, there is no certainty that the model\n     * has already been updated.\n     */\n\n    this.getSelectionBarColor = null;\n    /**\n     * Function that returns the color of a tick. showTicks must be enabled.\n     */\n\n    this.getTickColor = null;\n    /**\n     * Function that returns the current color of a pointer.\n     * If your color won't change, don't use this option but set it through CSS.\n     * If the returned color depends on a model value (either value or valueHigh),\n     * you should use the argument passed to the function.\n     * Indeed, when the function is called, there is no certainty that the model has already been updated.\n     * To handle range slider pointers independently, you should evaluate pointerType within the given\n     * function where \"min\" stands for value model and \"max\" for valueHigh model values.\n     */\n\n    this.getPointerColor = null;\n    /**\n     * Handles are focusable (on click or with tab) and can be modified using the following keyboard controls:\n     * Left/bottom arrows: -1\n     * Right/top arrows: +1\n     * Page-down: -10%\n     * Page-up: +10%\n     * Home: minimum value\n     * End: maximum value\n     */\n\n    this.keyboardSupport = true;\n    /**\n     * If you display the slider in an element that uses transform: scale(0.5), set the scale value to 2\n     * so that the slider is rendered properly and the events are handled correctly.\n     */\n\n    this.scale = 1;\n    /**\n     * Set to true to force the value to be rounded to the step, even when modified from the outside.\n     * When set to false, if the model values are modified from outside the slider, they are not rounded\n     * and can be between two steps.\n     */\n\n    this.enforceStep = true;\n    /**\n     * Set to true to force the value to be normalised to allowed range (floor to ceil), even when modified from the outside.\n     * When set to false, if the model values are modified from outside the slider, and they are outside allowed range,\n     * the slider may be rendered incorrectly. However, setting this to false may be useful if you want to perform custom normalisation.\n     */\n\n    this.enforceRange = true;\n    /**\n     * Set to true to prevent to user from switching the min and max handles. Applies to range slider only.\n     */\n\n    this.noSwitching = false;\n    /**\n     * Set to true to only bind events on slider handles.\n     */\n\n    this.onlyBindHandles = false;\n    /**\n     * Set to true to show graphs right to left.\n     * If vertical is true it will be from top to bottom and left / right arrow functions reversed.\n     */\n\n    this.rightToLeft = false;\n    /**\n     * Set to true to reverse keyboard navigation:\n     * Right/top arrows: -1\n     * Left/bottom arrows: +1\n     * Page-up: -10%\n     * Page-down: +10%\n     * End: minimum value\n     * Home: maximum value\n     */\n\n    this.reversedControls = false;\n    /**\n     * Set to true to keep the slider labels inside the slider bounds.\n     */\n\n    this.boundPointerLabels = true;\n    /**\n     * Set to true to use a logarithmic scale to display the slider.\n     */\n\n    this.logScale = false;\n    /**\n     * Function that returns the position on the slider for a given value.\n     * The position must be a percentage between 0 and 1.\n     * The function should be monotonically increasing or decreasing; otherwise the slider may behave incorrectly.\n     */\n\n    this.customValueToPosition = null;\n    /**\n     * Function that returns the value for a given position on the slider.\n     * The position is a percentage between 0 and 1.\n     * The function should be monotonically increasing or decreasing; otherwise the slider may behave incorrectly.\n     */\n\n    this.customPositionToValue = null;\n    /**\n     * Precision limit for calculated values.\n     * Values used in calculations will be rounded to this number of significant digits\n     * to prevent accumulating small floating-point errors.\n     */\n\n    this.precisionLimit = 12;\n    /**\n     * Use to display the selection bar as a gradient.\n     * The given object must contain from and to properties which are colors.\n     */\n\n    this.selectionBarGradient = null;\n    /**\n     * Use to add a label directly to the slider for accessibility. Adds the aria-label attribute.\n     */\n\n    this.ariaLabel = null;\n    /**\n     * Use instead of ariaLabel to reference the id of an element which will be used to label the slider.\n     * Adds the aria-labelledby attribute.\n     */\n\n    this.ariaLabelledBy = null;\n    /**\n     * Use to add a label directly to the slider range for accessibility. Adds the aria-label attribute.\n     */\n\n    this.ariaLabelHigh = null;\n    /**\n     * Use instead of ariaLabelHigh to reference the id of an element which will be used to label the slider range.\n     * Adds the aria-labelledby attribute.\n     */\n\n    this.ariaLabelledByHigh = null;\n    /**\n     * Use to increase rendering performance. If the value is not provided, the slider calculates the with/height of the handle\n     */\n\n    this.handleDimension = null;\n    /**\n     * Use to increase rendering performance. If the value is not provided, the slider calculates the with/height of the bar\n     */\n\n    this.barDimension = null;\n    /**\n     * Enable/disable CSS animations\n     */\n\n    this.animate = true;\n  }\n\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nclass ChangeContext {}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n *  Collection of functions to handle conversions/lookups of values\n */\n\n\nclass ValueHelper {\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  static isNullOrUndefined(value) {\n    return value === undefined || value === null;\n  }\n  /**\n   * @param {?} val\n   * @param {?} minVal\n   * @param {?} maxVal\n   * @return {?}\n   */\n\n\n  static linearValueToPosition(val, minVal, maxVal) {\n    const\n    /** @type {?} */\n    range = maxVal - minVal;\n    return (val - minVal) / range;\n  }\n  /**\n   * @param {?} val\n   * @param {?} minVal\n   * @param {?} maxVal\n   * @return {?}\n   */\n\n\n  static logValueToPosition(val, minVal, maxVal) {\n    val = Math.log(val);\n    minVal = Math.log(minVal);\n    maxVal = Math.log(maxVal);\n    const\n    /** @type {?} */\n    range = maxVal - minVal;\n    return (val - minVal) / range;\n  }\n  /**\n   * @param {?} percent\n   * @param {?} minVal\n   * @param {?} maxVal\n   * @return {?}\n   */\n\n\n  static linearPositionToValue(percent, minVal, maxVal) {\n    return percent * (maxVal - minVal) + minVal;\n  }\n  /**\n   * @param {?} percent\n   * @param {?} minVal\n   * @param {?} maxVal\n   * @return {?}\n   */\n\n\n  static logPositionToValue(percent, minVal, maxVal) {\n    minVal = Math.log(minVal);\n    maxVal = Math.log(maxVal);\n    const\n    /** @type {?} */\n    value = percent * (maxVal - minVal) + minVal;\n    return Math.exp(value);\n  }\n  /**\n   * @param {?} modelValue\n   * @param {?} stepsArray\n   * @return {?}\n   */\n\n\n  static findStepIndex(modelValue, stepsArray) {\n    const\n    /** @type {?} */\n    differences = stepsArray.map(step => Math.abs(modelValue - step.value));\n    let\n    /** @type {?} */\n    minDifferenceIndex = 0;\n\n    for (let\n    /** @type {?} */\n    index = 0; index < stepsArray.length; index++) {\n      if (differences[index] !== differences[minDifferenceIndex] && differences[index] < differences[minDifferenceIndex]) {\n        minDifferenceIndex = index;\n      }\n    }\n\n    return minDifferenceIndex;\n  }\n\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Helper with compatibility functions to support different browsers\n */\n\n\nclass CompatibilityHelper {\n  /**\n   * Workaround for TouchEvent constructor sadly not being available on all browsers (e.g. Firefox, Safari)\n   * @param {?} event\n   * @return {?}\n   */\n  static isTouchEvent(event) {\n    if (\n    /** @type {?} */\n    window.TouchEvent !== undefined) {\n      return event instanceof TouchEvent;\n    }\n\n    return event.touches !== undefined;\n  }\n  /**\n   * Detect presence of ResizeObserver API\n   * @return {?}\n   */\n\n\n  static isResizeObserverAvailable() {\n    return (\n      /** @type {?} */\n      window.ResizeObserver !== undefined\n    );\n  }\n\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Helper with mathematical functions\n */\n\n\nclass MathHelper {\n  /**\n   * @param {?} value\n   * @param {?} precisionLimit\n   * @return {?}\n   */\n  static roundToPrecisionLimit(value, precisionLimit) {\n    return +value.toPrecision(precisionLimit);\n  }\n  /**\n   * @param {?} value\n   * @param {?} floor\n   * @param {?} ceil\n   * @return {?}\n   */\n\n\n  static clampToRange(value, floor, ceil) {\n    return Math.min(Math.max(value, floor), ceil);\n  }\n\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nclass EventListener {\n  constructor() {\n    this.eventName = null;\n    this.events = null;\n    this.eventsSubscription = null;\n    this.teardownCallback = null;\n  }\n\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Helper class to attach event listeners to DOM elements with debounce support using rxjs\n */\n\n\nclass EventListenerHelper {\n  /**\n   * @param {?} renderer\n   */\n  constructor(renderer) {\n    this.renderer = renderer;\n  }\n  /**\n   * @param {?} nativeElement\n   * @param {?} eventName\n   * @param {?} callback\n   * @param {?=} throttleInterval\n   * @return {?}\n   */\n\n\n  attachPassiveEventListener(nativeElement, eventName, callback, throttleInterval) {\n    // Only use passive event listeners if the browser supports it\n    if (detectPassiveEvents.hasSupport !== true) {\n      return this.attachEventListener(nativeElement, eventName, callback, throttleInterval);\n    } // Angular doesn't support passive event handlers (yet), so we need to roll our own code using native functions\n\n\n    const\n    /** @type {?} */\n    listener = new EventListener();\n    listener.eventName = eventName;\n    listener.events = new Subject();\n\n    const\n    /** @type {?} */\n    observerCallback = event => {\n      listener.events.next(event);\n    };\n\n    nativeElement.addEventListener(eventName, observerCallback, {\n      passive: true,\n      capture: false\n    });\n\n    listener.teardownCallback = () => {\n      nativeElement.removeEventListener(eventName, observerCallback, {\n        passive: true,\n        capture: false\n      });\n    };\n\n    listener.eventsSubscription = listener.events.pipe(!ValueHelper.isNullOrUndefined(throttleInterval) ? throttleTime(throttleInterval, undefined, {\n      leading: true,\n      trailing: true\n    }) : tap(() => {}) // no-op\n    ).subscribe(event => {\n      callback(event);\n    });\n    return listener;\n  }\n  /**\n   * @param {?} eventListener\n   * @return {?}\n   */\n\n\n  detachEventListener(eventListener) {\n    if (!ValueHelper.isNullOrUndefined(eventListener.eventsSubscription)) {\n      eventListener.eventsSubscription.unsubscribe();\n      eventListener.eventsSubscription = null;\n    }\n\n    if (!ValueHelper.isNullOrUndefined(eventListener.events)) {\n      eventListener.events.complete();\n      eventListener.events = null;\n    }\n\n    if (!ValueHelper.isNullOrUndefined(eventListener.teardownCallback)) {\n      eventListener.teardownCallback();\n      eventListener.teardownCallback = null;\n    }\n  }\n  /**\n   * @param {?} nativeElement\n   * @param {?} eventName\n   * @param {?} callback\n   * @param {?=} throttleInterval\n   * @return {?}\n   */\n\n\n  attachEventListener(nativeElement, eventName, callback, throttleInterval) {\n    const\n    /** @type {?} */\n    listener = new EventListener();\n    listener.eventName = eventName;\n    listener.events = new Subject();\n\n    const\n    /** @type {?} */\n    observerCallback = event => {\n      listener.events.next(event);\n    };\n\n    listener.teardownCallback = this.renderer.listen(nativeElement, eventName, observerCallback);\n    listener.eventsSubscription = listener.events.pipe(!ValueHelper.isNullOrUndefined(throttleInterval) ? throttleTime(throttleInterval, undefined, {\n      leading: true,\n      trailing: true\n    }) : tap(() => {}) // no-op\n    ).subscribe(event => {\n      callback(event);\n    });\n    return listener;\n  }\n\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nclass SliderElementDirective {\n  /**\n   * @param {?} elemRef\n   * @param {?} renderer\n   * @param {?} changeDetectionRef\n   */\n  constructor(elemRef, renderer, changeDetectionRef) {\n    this.elemRef = elemRef;\n    this.renderer = renderer;\n    this.changeDetectionRef = changeDetectionRef;\n    this._position = 0;\n    this._dimension = 0;\n    this._alwaysHide = false;\n    this._vertical = false;\n    this._scale = 1;\n    this.opacity = 1;\n    this.visibility = 'visible';\n    this.left = '';\n    this.bottom = '';\n    this.height = '';\n    this.width = '';\n    this.eventListeners = [];\n    this.eventListenerHelper = new EventListenerHelper(this.renderer);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get position() {\n    return this._position;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get dimension() {\n    return this._dimension;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get alwaysHide() {\n    return this._alwaysHide;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get vertical() {\n    return this._vertical;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get scale() {\n    return this._scale;\n  }\n  /**\n   * @param {?} hide\n   * @return {?}\n   */\n\n\n  setAlwaysHide(hide) {\n    this._alwaysHide = hide;\n\n    if (hide) {\n      this.visibility = 'hidden';\n    } else {\n      this.visibility = 'visible';\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  hide() {\n    this.opacity = 0;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  show() {\n    if (this.alwaysHide) {\n      return;\n    }\n\n    this.opacity = 1;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  isVisible() {\n    if (this.alwaysHide) {\n      return false;\n    }\n\n    return this.opacity !== 0;\n  }\n  /**\n   * @param {?} vertical\n   * @return {?}\n   */\n\n\n  setVertical(vertical) {\n    this._vertical = vertical;\n\n    if (this._vertical) {\n      this.left = '';\n      this.width = '';\n    } else {\n      this.bottom = '';\n      this.height = '';\n    }\n  }\n  /**\n   * @param {?} scale\n   * @return {?}\n   */\n\n\n  setScale(scale) {\n    this._scale = scale;\n  }\n  /**\n   * @param {?} pos\n   * @return {?}\n   */\n\n\n  setPosition(pos) {\n    if (this._position !== pos && !this.isRefDestroyed()) {\n      this.changeDetectionRef.markForCheck();\n    }\n\n    this._position = pos;\n\n    if (this._vertical) {\n      this.bottom = Math.round(pos) + 'px';\n    } else {\n      this.left = Math.round(pos) + 'px';\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  calculateDimension() {\n    const\n    /** @type {?} */\n    val = this.getBoundingClientRect();\n\n    if (this.vertical) {\n      this._dimension = (val.bottom - val.top) * this.scale;\n    } else {\n      this._dimension = (val.right - val.left) * this.scale;\n    }\n  }\n  /**\n   * @param {?} dim\n   * @return {?}\n   */\n\n\n  setDimension(dim) {\n    if (this._dimension !== dim && !this.isRefDestroyed()) {\n      this.changeDetectionRef.markForCheck();\n    }\n\n    this._dimension = dim;\n\n    if (this._vertical) {\n      this.height = Math.round(dim) + 'px';\n    } else {\n      this.width = Math.round(dim) + 'px';\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  getBoundingClientRect() {\n    return this.elemRef.nativeElement.getBoundingClientRect();\n  }\n  /**\n   * @param {?} eventName\n   * @param {?} callback\n   * @param {?=} debounceInterval\n   * @return {?}\n   */\n\n\n  on(eventName, callback, debounceInterval) {\n    const\n    /** @type {?} */\n    listener = this.eventListenerHelper.attachEventListener(this.elemRef.nativeElement, eventName, callback, debounceInterval);\n    this.eventListeners.push(listener);\n  }\n  /**\n   * @param {?} eventName\n   * @param {?} callback\n   * @param {?=} debounceInterval\n   * @return {?}\n   */\n\n\n  onPassive(eventName, callback, debounceInterval) {\n    const\n    /** @type {?} */\n    listener = this.eventListenerHelper.attachPassiveEventListener(this.elemRef.nativeElement, eventName, callback, debounceInterval);\n    this.eventListeners.push(listener);\n  }\n  /**\n   * @param {?=} eventName\n   * @return {?}\n   */\n\n\n  off(eventName) {\n    let\n    /** @type {?} */\n    listenersToKeep;\n    let\n    /** @type {?} */\n    listenersToRemove;\n\n    if (!ValueHelper.isNullOrUndefined(eventName)) {\n      listenersToKeep = this.eventListeners.filter(event => event.eventName !== eventName);\n      listenersToRemove = this.eventListeners.filter(event => event.eventName === eventName);\n    } else {\n      listenersToKeep = [];\n      listenersToRemove = this.eventListeners;\n    }\n\n    for (const\n    /** @type {?} */\n    listener of listenersToRemove) {\n      this.eventListenerHelper.detachEventListener(listener);\n    }\n\n    this.eventListeners = listenersToKeep;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  isRefDestroyed() {\n    return ValueHelper.isNullOrUndefined(this.changeDetectionRef) || this.changeDetectionRef['destroyed'];\n  }\n\n}\n\nSliderElementDirective.ɵfac = function SliderElementDirective_Factory(t) {\n  return new (t || SliderElementDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nSliderElementDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: SliderElementDirective,\n  selectors: [[\"\", \"ng5SliderElement\", \"\"]],\n  hostVars: 12,\n  hostBindings: function SliderElementDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"opacity\", ctx.opacity)(\"visibility\", ctx.visibility)(\"left\", ctx.left)(\"bottom\", ctx.bottom)(\"height\", ctx.height)(\"width\", ctx.width);\n    }\n  }\n});\n/** @nocollapse */\n\nSliderElementDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Renderer2\n}, {\n  type: ChangeDetectorRef\n}];\n\nSliderElementDirective.propDecorators = {\n  \"opacity\": [{\n    type: HostBinding,\n    args: ['style.opacity']\n  }],\n  \"visibility\": [{\n    type: HostBinding,\n    args: ['style.visibility']\n  }],\n  \"left\": [{\n    type: HostBinding,\n    args: ['style.left']\n  }],\n  \"bottom\": [{\n    type: HostBinding,\n    args: ['style.bottom']\n  }],\n  \"height\": [{\n    type: HostBinding,\n    args: ['style.height']\n  }],\n  \"width\": [{\n    type: HostBinding,\n    args: ['style.width']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderElementDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ng5SliderElement]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    opacity: [{\n      type: HostBinding,\n      args: ['style.opacity']\n    }],\n    visibility: [{\n      type: HostBinding,\n      args: ['style.visibility']\n    }],\n    left: [{\n      type: HostBinding,\n      args: ['style.left']\n    }],\n    bottom: [{\n      type: HostBinding,\n      args: ['style.bottom']\n    }],\n    height: [{\n      type: HostBinding,\n      args: ['style.height']\n    }],\n    width: [{\n      type: HostBinding,\n      args: ['style.width']\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nclass SliderHandleDirective extends SliderElementDirective {\n  /**\n   * @param {?} elemRef\n   * @param {?} renderer\n   * @param {?} changeDetectionRef\n   */\n  constructor(elemRef, renderer, changeDetectionRef) {\n    super(elemRef, renderer, changeDetectionRef);\n    this.active = false;\n    this.role = '';\n    this.tabindex = '';\n    this.ariaOrientation = '';\n    this.ariaLabel = '';\n    this.ariaLabelledBy = '';\n    this.ariaValueNow = '';\n    this.ariaValueText = '';\n    this.ariaValueMin = '';\n    this.ariaValueMax = '';\n  }\n  /**\n   * @return {?}\n   */\n\n\n  focus() {\n    this.elemRef.nativeElement.focus();\n  }\n\n}\n\nSliderHandleDirective.ɵfac = function SliderHandleDirective_Factory(t) {\n  return new (t || SliderHandleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nSliderHandleDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: SliderHandleDirective,\n  selectors: [[\"\", \"ng5SliderHandle\", \"\"]],\n  hostVars: 11,\n  hostBindings: function SliderHandleDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx.tabindex)(\"aria-orientation\", ctx.ariaOrientation)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-valuenow\", ctx.ariaValueNow)(\"aria-valuetext\", ctx.ariaValueText)(\"aria-valuemin\", ctx.ariaValueMin)(\"aria-valuemax\", ctx.ariaValueMax);\n      ɵngcc0.ɵɵclassProp(\"ng5-slider-active\", ctx.active);\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nSliderHandleDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Renderer2\n}, {\n  type: ChangeDetectorRef\n}];\n\nSliderHandleDirective.propDecorators = {\n  \"active\": [{\n    type: HostBinding,\n    args: ['class.ng5-slider-active']\n  }],\n  \"role\": [{\n    type: HostBinding,\n    args: ['attr.role']\n  }],\n  \"tabindex\": [{\n    type: HostBinding,\n    args: ['attr.tabindex']\n  }],\n  \"ariaOrientation\": [{\n    type: HostBinding,\n    args: ['attr.aria-orientation']\n  }],\n  \"ariaLabel\": [{\n    type: HostBinding,\n    args: ['attr.aria-label']\n  }],\n  \"ariaLabelledBy\": [{\n    type: HostBinding,\n    args: ['attr.aria-labelledby']\n  }],\n  \"ariaValueNow\": [{\n    type: HostBinding,\n    args: ['attr.aria-valuenow']\n  }],\n  \"ariaValueText\": [{\n    type: HostBinding,\n    args: ['attr.aria-valuetext']\n  }],\n  \"ariaValueMin\": [{\n    type: HostBinding,\n    args: ['attr.aria-valuemin']\n  }],\n  \"ariaValueMax\": [{\n    type: HostBinding,\n    args: ['attr.aria-valuemax']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderHandleDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ng5SliderHandle]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    active: [{\n      type: HostBinding,\n      args: ['class.ng5-slider-active']\n    }],\n    role: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    tabindex: [{\n      type: HostBinding,\n      args: ['attr.tabindex']\n    }],\n    ariaOrientation: [{\n      type: HostBinding,\n      args: ['attr.aria-orientation']\n    }],\n    ariaLabel: [{\n      type: HostBinding,\n      args: ['attr.aria-label']\n    }],\n    ariaLabelledBy: [{\n      type: HostBinding,\n      args: ['attr.aria-labelledby']\n    }],\n    ariaValueNow: [{\n      type: HostBinding,\n      args: ['attr.aria-valuenow']\n    }],\n    ariaValueText: [{\n      type: HostBinding,\n      args: ['attr.aria-valuetext']\n    }],\n    ariaValueMin: [{\n      type: HostBinding,\n      args: ['attr.aria-valuemin']\n    }],\n    ariaValueMax: [{\n      type: HostBinding,\n      args: ['attr.aria-valuemax']\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nclass SliderLabelDirective extends SliderElementDirective {\n  /**\n   * @param {?} elemRef\n   * @param {?} renderer\n   * @param {?} changeDetectionRef\n   */\n  constructor(elemRef, renderer, changeDetectionRef) {\n    super(elemRef, renderer, changeDetectionRef);\n    this._value = null;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get value() {\n    return this._value;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  setValue(value) {\n    let\n    /** @type {?} */\n    recalculateDimension = false;\n\n    if (!this.alwaysHide && (ValueHelper.isNullOrUndefined(this.value) || this.value.length !== value.length || this.value.length > 0 && this.dimension === 0)) {\n      recalculateDimension = true;\n    }\n\n    this._value = value;\n    this.elemRef.nativeElement.innerHTML = value; // Update dimension only when length of the label have changed\n\n    if (recalculateDimension) {\n      this.calculateDimension();\n    }\n  }\n\n}\n\nSliderLabelDirective.ɵfac = function SliderLabelDirective_Factory(t) {\n  return new (t || SliderLabelDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nSliderLabelDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: SliderLabelDirective,\n  selectors: [[\"\", \"ng5SliderLabel\", \"\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nSliderLabelDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Renderer2\n}, {\n  type: ChangeDetectorRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderLabelDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ng5SliderLabel]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nclass Tick {\n  constructor() {\n    this.selected = false;\n    this.style = {};\n    this.tooltip = null;\n    this.tooltipPlacement = null;\n    this.value = null;\n    this.valueTooltip = null;\n    this.valueTooltipPlacement = null;\n    this.legend = null;\n  }\n\n}\n\nclass Dragging {\n  constructor() {\n    this.active = false;\n    this.value = 0;\n    this.difference = 0;\n    this.position = 0;\n    this.lowLimit = 0;\n    this.highLimit = 0;\n  }\n\n}\n\nclass ModelValues {\n  /**\n   * @param {?=} x\n   * @param {?=} y\n   * @return {?}\n   */\n  static compare(x, y) {\n    if (ValueHelper.isNullOrUndefined(x) && ValueHelper.isNullOrUndefined(y)) {\n      return false;\n    }\n\n    if (ValueHelper.isNullOrUndefined(x) !== ValueHelper.isNullOrUndefined(y)) {\n      return false;\n    }\n\n    return x.value === y.value && x.highValue === y.highValue;\n  }\n\n}\n\nclass ModelChange extends ModelValues {\n  /**\n   * @param {?=} x\n   * @param {?=} y\n   * @return {?}\n   */\n  static compare(x, y) {\n    if (ValueHelper.isNullOrUndefined(x) && ValueHelper.isNullOrUndefined(y)) {\n      return false;\n    }\n\n    if (ValueHelper.isNullOrUndefined(x) !== ValueHelper.isNullOrUndefined(y)) {\n      return false;\n    }\n\n    return x.value === y.value && x.highValue === y.highValue && x.forceChange === y.forceChange;\n  }\n\n}\n\nconst NG5_SLIDER_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => SliderComponent),\n  multi: true\n};\n\nclass SliderComponent {\n  /**\n   * @param {?} renderer\n   * @param {?} elementRef\n   * @param {?} changeDetectionRef\n   * @param {?} zone\n   */\n  constructor(renderer, elementRef, changeDetectionRef, zone) {\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    this.changeDetectionRef = changeDetectionRef;\n    this.zone = zone; // Model for low value of slider. For simple slider, this is the only input. For range slider, this is the low value.\n\n    this.value = null; // Output for low value slider to support two-way bindings\n\n    this.valueChange = new EventEmitter(); // Model for high value of slider. Not used in simple slider. For range slider, this is the high value.\n\n    this.highValue = null; // Output for high value slider to support two-way bindings\n\n    this.highValueChange = new EventEmitter(); // An object with all the other options of the slider.\n    // Each option can be updated at runtime and the slider will automatically be re-rendered.\n\n    this.options = new Options(); // Event emitted when user starts interaction with the slider\n\n    this.userChangeStart = new EventEmitter(); // Event emitted on each change coming from user interaction\n\n    this.userChange = new EventEmitter(); // Event emitted when user finishes interaction with the slider\n\n    this.userChangeEnd = new EventEmitter();\n    this.initHasRun = false;\n    this.inputModelChangeSubject = new Subject();\n    this.inputModelChangeSubscription = null;\n    this.outputModelChangeSubject = new Subject();\n    this.outputModelChangeSubscription = null;\n    this.viewLowValue = null;\n    this.viewHighValue = null;\n    this.viewOptions = new Options();\n    this.handleHalfDimension = 0;\n    this.maxHandlePosition = 0;\n    this.currentTrackingPointer = null;\n    this.currentFocusPointer = null;\n    this.firstKeyDown = false;\n    this.touchId = null;\n    this.dragging = new Dragging(); // Host element class bindings\n\n    this.sliderElementVerticalClass = false;\n    this.sliderElementAnimateClass = false;\n    this.sliderElementDisabledAttr = null;\n    this.barStyle = {};\n    this.minPointerStyle = {};\n    this.maxPointerStyle = {};\n    this.fullBarTransparentClass = false;\n    this.selectionBarDraggableClass = false;\n    this.ticksUnderValuesClass = false;\n    this.intermediateTicks = false;\n    this.ticks = [];\n    this.eventListenerHelper = null;\n    this.onMoveEventListener = null;\n    this.onEndEventListener = null;\n    this.resizeObserver = null;\n    this.onTouchedCallback = null;\n    this.onChangeCallback = null;\n    this.eventListenerHelper = new EventListenerHelper(this.renderer);\n  }\n  /**\n   * @param {?} manualRefresh\n   * @return {?}\n   */\n\n\n  set manualRefresh(manualRefresh) {\n    this.unsubscribeManualRefresh();\n    this.manualRefreshSubscription = manualRefresh.subscribe(() => {\n      setTimeout(() => this.calculateViewDimensionsAndDetectChanges());\n    });\n  }\n  /**\n   * @param {?} triggerFocus\n   * @return {?}\n   */\n\n\n  set triggerFocus(triggerFocus) {\n    this.unsubscribeTriggerFocus();\n    this.triggerFocusSubscription = triggerFocus.subscribe(pointerType => {\n      this.focusPointer(pointerType);\n    });\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get range() {\n    return !ValueHelper.isNullOrUndefined(this.value) && !ValueHelper.isNullOrUndefined(this.highValue);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get showTicks() {\n    return this.viewOptions.showTicks;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnInit() {\n    this.viewOptions = new Options();\n    Object.assign(this.viewOptions, this.options); // We need to run these two things first, before the rest of the init in ngAfterViewInit(),\n    // because these two settings are set through @HostBinding and Angular change detection\n    // mechanism doesn't like them changing in ngAfterViewInit()\n\n    this.updateDisabledState();\n    this.updateVerticalState();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngAfterViewInit() {\n    this.applyOptions();\n    this.subscribeInputModelChangeSubject(this.viewOptions.inputEventsInterval);\n    this.subscribeOutputModelChangeSubject(this.viewOptions.outputEventsInterval); // Once we apply options, we need to normalise model values for the first time\n\n    this.renormaliseModelValues();\n    this.viewLowValue = this.modelValueToViewValue(this.value);\n\n    if (this.range) {\n      this.viewHighValue = this.modelValueToViewValue(this.highValue);\n    } else {\n      this.viewHighValue = null;\n    }\n\n    this.updateVerticalState(); // need to run this again to cover changes to slider elements\n\n    this.manageElementsStyle();\n    this.updateDisabledState();\n    this.calculateViewDimensions();\n    this.addAccessibility();\n    this.updateCeilLabel();\n    this.updateFloorLabel();\n    this.initHandles();\n    this.manageEventsBindings();\n    this.subscribeResizeObserver();\n    this.initHasRun = true; // Run change detection manually to resolve some issues when init procedure changes values used in the view\n\n    if (!this.isRefDestroyed()) {\n      this.changeDetectionRef.detectChanges();\n    }\n  }\n  /**\n   * @param {?} changes\n   * @return {?}\n   */\n\n\n  ngOnChanges(changes) {\n    // Always apply options first\n    if (!ValueHelper.isNullOrUndefined(changes[\"options\"])) {\n      this.onChangeOptions();\n    } // Then value changes\n\n\n    if (!ValueHelper.isNullOrUndefined(changes[\"value\"]) || !ValueHelper.isNullOrUndefined(changes[\"highValue\"])) {\n      this.inputModelChangeSubject.next({\n        value: this.value,\n        highValue: this.highValue,\n        forceChange: false,\n        internalChange: false\n      });\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this.unbindEvents();\n    this.unsubscribeResizeObserver();\n    this.unsubscribeInputModelChangeSubject();\n    this.unsubscribeOutputModelChangeSubject();\n    this.unsubscribeManualRefresh();\n    this.unsubscribeTriggerFocus();\n  }\n  /**\n   * @param {?} obj\n   * @return {?}\n   */\n\n\n  writeValue(obj) {\n    if (obj instanceof Array) {\n      this.value = obj[0];\n      this.highValue = obj[1];\n    } else {\n      this.value = obj;\n    } // ngOnChanges() is not called in this instance, so we need to communicate the change manually\n\n\n    this.inputModelChangeSubject.next({\n      value: this.value,\n      highValue: this.highValue,\n      forceChange: false,\n      internalChange: false\n    });\n  }\n  /**\n   * @param {?} onChangeCallback\n   * @return {?}\n   */\n\n\n  registerOnChange(onChangeCallback) {\n    this.onChangeCallback = onChangeCallback;\n  }\n  /**\n   * @param {?} onTouchedCallback\n   * @return {?}\n   */\n\n\n  registerOnTouched(onTouchedCallback) {\n    this.onTouchedCallback = onTouchedCallback;\n  }\n  /**\n   * @param {?} isDisabled\n   * @return {?}\n   */\n\n\n  setDisabledState(isDisabled) {\n    this.viewOptions.disabled = isDisabled;\n    this.updateDisabledState();\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  onResize(event) {\n    this.calculateViewDimensionsAndDetectChanges();\n  }\n  /**\n   * @param {?=} interval\n   * @return {?}\n   */\n\n\n  subscribeInputModelChangeSubject(interval) {\n    this.inputModelChangeSubscription = this.inputModelChangeSubject.pipe(distinctUntilChanged(ModelChange.compare), // Hack to reset the status of the distinctUntilChanged() - if a \"fake\" event comes through with forceChange=true,\n    // we forcefully by-pass distinctUntilChanged(), but otherwise drop the event\n    filter(modelChange => !modelChange.forceChange && !modelChange.internalChange), !ValueHelper.isNullOrUndefined(interval) ? throttleTime(interval, undefined, {\n      leading: true,\n      trailing: true\n    }) : tap(() => {}) // no-op\n    ).subscribe(modelChange => this.applyInputModelChange(modelChange));\n  }\n  /**\n   * @param {?=} interval\n   * @return {?}\n   */\n\n\n  subscribeOutputModelChangeSubject(interval) {\n    this.outputModelChangeSubscription = this.outputModelChangeSubject.pipe(distinctUntilChanged(ModelChange.compare), !ValueHelper.isNullOrUndefined(interval) ? throttleTime(interval, undefined, {\n      leading: true,\n      trailing: true\n    }) : tap(() => {}) // no-op\n    ).subscribe(modelChange => this.publishOutputModelChange(modelChange));\n  }\n  /**\n   * @return {?}\n   */\n\n\n  subscribeResizeObserver() {\n    if (CompatibilityHelper.isResizeObserverAvailable()) {\n      this.resizeObserver = new ResizeObserver(() => this.calculateViewDimensionsAndDetectChanges());\n      this.resizeObserver.observe(this.elementRef.nativeElement);\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  unsubscribeResizeObserver() {\n    if (CompatibilityHelper.isResizeObserverAvailable() && this.resizeObserver !== null) {\n      this.resizeObserver.disconnect();\n      this.resizeObserver = null;\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  unsubscribeOnMove() {\n    if (!ValueHelper.isNullOrUndefined(this.onMoveEventListener)) {\n      this.eventListenerHelper.detachEventListener(this.onMoveEventListener);\n      this.onMoveEventListener = null;\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  unsubscribeOnEnd() {\n    if (!ValueHelper.isNullOrUndefined(this.onEndEventListener)) {\n      this.eventListenerHelper.detachEventListener(this.onEndEventListener);\n      this.onEndEventListener = null;\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  unsubscribeInputModelChangeSubject() {\n    if (!ValueHelper.isNullOrUndefined(this.inputModelChangeSubscription)) {\n      this.inputModelChangeSubscription.unsubscribe();\n      this.inputModelChangeSubscription = null;\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  unsubscribeOutputModelChangeSubject() {\n    if (!ValueHelper.isNullOrUndefined(this.outputModelChangeSubscription)) {\n      this.outputModelChangeSubscription.unsubscribe();\n      this.outputModelChangeSubscription = null;\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  unsubscribeManualRefresh() {\n    if (!ValueHelper.isNullOrUndefined(this.manualRefreshSubscription)) {\n      this.manualRefreshSubscription.unsubscribe();\n      this.manualRefreshSubscription = null;\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  unsubscribeTriggerFocus() {\n    if (!ValueHelper.isNullOrUndefined(this.triggerFocusSubscription)) {\n      this.triggerFocusSubscription.unsubscribe();\n      this.triggerFocusSubscription = null;\n    }\n  }\n  /**\n   * @param {?} pointerType\n   * @return {?}\n   */\n\n\n  getPointerElement(pointerType) {\n    if (pointerType === PointerType.Min) {\n      return this.minHandleElement;\n    } else if (pointerType === PointerType.Max) {\n      return this.maxHandleElement;\n    }\n\n    return null;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  getCurrentTrackingValue() {\n    if (this.currentTrackingPointer === PointerType.Min) {\n      return this.viewLowValue;\n    } else if (this.currentTrackingPointer === PointerType.Max) {\n      return this.viewHighValue;\n    }\n\n    return null;\n  }\n  /**\n   * @param {?} modelValue\n   * @return {?}\n   */\n\n\n  modelValueToViewValue(modelValue) {\n    if (ValueHelper.isNullOrUndefined(modelValue)) {\n      return NaN;\n    }\n\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n      return ValueHelper.findStepIndex(+modelValue, this.viewOptions.stepsArray);\n    }\n\n    return +modelValue;\n  }\n  /**\n   * @param {?} viewValue\n   * @return {?}\n   */\n\n\n  viewValueToModelValue(viewValue) {\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n      return this.getStepValue(viewValue);\n    }\n\n    return viewValue;\n  }\n  /**\n   * @param {?} sliderValue\n   * @return {?}\n   */\n\n\n  getStepValue(sliderValue) {\n    const\n    /** @type {?} */\n    step = this.viewOptions.stepsArray[sliderValue];\n    return !ValueHelper.isNullOrUndefined(step) ? step.value : NaN;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  applyViewChange() {\n    this.value = this.viewValueToModelValue(this.viewLowValue);\n\n    if (this.range) {\n      this.highValue = this.viewValueToModelValue(this.viewHighValue);\n    }\n\n    this.outputModelChangeSubject.next({\n      value: this.value,\n      highValue: this.highValue,\n      userEventInitiated: true,\n      forceChange: false\n    }); // At this point all changes are applied and outputs are emitted, so we should be done.\n    // However, input changes are communicated in different stream and we need to be ready to\n    // act on the next input change even if it is exactly the same as last input change.\n    // Therefore, we send a special event to reset the stream.\n\n    this.inputModelChangeSubject.next({\n      value: this.value,\n      highValue: this.highValue,\n      forceChange: false,\n      internalChange: true\n    });\n  }\n  /**\n   * @param {?} modelChange\n   * @return {?}\n   */\n\n\n  applyInputModelChange(modelChange) {\n    const\n    /** @type {?} */\n    normalisedModelChange = this.normaliseModelValues(modelChange); // If normalised model change is different, apply the change to the model values\n\n    const\n    /** @type {?} */\n    normalisationChange = !ModelValues.compare(modelChange, normalisedModelChange);\n\n    if (normalisationChange) {\n      this.value = normalisedModelChange.value;\n      this.highValue = normalisedModelChange.highValue;\n    }\n\n    this.viewLowValue = this.modelValueToViewValue(normalisedModelChange.value);\n\n    if (this.range) {\n      this.viewHighValue = this.modelValueToViewValue(normalisedModelChange.highValue);\n    } else {\n      this.viewHighValue = null;\n    }\n\n    this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n\n    if (this.range) {\n      this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n    }\n\n    this.updateSelectionBar();\n    this.updateTicksScale();\n    this.updateAriaAttributes();\n\n    if (this.range) {\n      this.updateCombinedLabel();\n    } // At the end, we need to communicate the model change to the outputs as well\n    // Normalisation changes are also always forced out to ensure that subscribers always end up in correct state\n\n\n    this.outputModelChangeSubject.next({\n      value: normalisedModelChange.value,\n      highValue: normalisedModelChange.highValue,\n      forceChange: normalisationChange,\n      userEventInitiated: false\n    });\n  }\n  /**\n   * @param {?} modelChange\n   * @return {?}\n   */\n\n\n  publishOutputModelChange(modelChange) {\n    const\n    /** @type {?} */\n    emitOutputs = () => {\n      this.valueChange.emit(modelChange.value);\n\n      if (this.range) {\n        this.highValueChange.emit(modelChange.highValue);\n      }\n\n      if (!ValueHelper.isNullOrUndefined(this.onChangeCallback)) {\n        if (this.range) {\n          this.onChangeCallback([modelChange.value, modelChange.highValue]);\n        } else {\n          this.onChangeCallback(modelChange.value);\n        }\n      }\n\n      if (!ValueHelper.isNullOrUndefined(this.onTouchedCallback)) {\n        if (this.range) {\n          this.onTouchedCallback([modelChange.value, modelChange.highValue]);\n        } else {\n          this.onTouchedCallback(modelChange.value);\n        }\n      }\n    };\n\n    if (modelChange.userEventInitiated) {\n      // If this change was initiated by a user event, we can emit outputs in the same tick\n      emitOutputs();\n      this.userChange.emit(this.getChangeContext());\n    } else {\n      // But, if the change was initated by something else like a change in input bindings,\n      // we need to wait until next tick to emit the outputs to keep Angular change detection happy\n      setTimeout(() => {\n        emitOutputs();\n      });\n    }\n  }\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n\n\n  normaliseModelValues(input) {\n    const\n    /** @type {?} */\n    normalisedInput = new ModelValues();\n    normalisedInput.value = input.value;\n    normalisedInput.highValue = input.highValue;\n\n    if (this.viewOptions.enforceStep) {\n      normalisedInput.value = this.roundStep(normalisedInput.value);\n\n      if (this.range) {\n        normalisedInput.highValue = this.roundStep(normalisedInput.highValue);\n      }\n    } // Don't attempt to normalise further when using steps array (steps may be out of order and that is perfectly fine)\n\n\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) || !this.viewOptions.enforceRange) {\n      return normalisedInput;\n    }\n\n    normalisedInput.value = MathHelper.clampToRange(normalisedInput.value, this.viewOptions.floor, this.viewOptions.ceil);\n\n    if (this.range) {\n      normalisedInput.highValue = MathHelper.clampToRange(normalisedInput.highValue, this.viewOptions.floor, this.viewOptions.ceil);\n    } // Make sure that range slider invariant (value <= highValue) is always satisfied\n\n\n    if (this.range && input.value > input.highValue) {\n      // We know that both values are now clamped correctly, they may just be in the wrong order\n      // So the easy solution is to swap them... except swapping is sometimes disabled in options, so we make the two values the same\n      if (this.viewOptions.noSwitching) {\n        normalisedInput.value = normalisedInput.highValue;\n      } else {\n        const\n        /** @type {?} */\n        tempValue = input.value;\n        normalisedInput.value = input.highValue;\n        normalisedInput.highValue = tempValue;\n      }\n    }\n\n    return normalisedInput;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  renormaliseModelValues() {\n    const\n    /** @type {?} */\n    previousModelValues = {\n      value: this.value,\n      highValue: this.highValue\n    };\n    const\n    /** @type {?} */\n    normalisedModelValues = this.normaliseModelValues(previousModelValues);\n\n    if (!ModelValues.compare(normalisedModelValues, previousModelValues)) {\n      this.value = normalisedModelValues.value;\n      this.highValue = normalisedModelValues.highValue;\n      this.outputModelChangeSubject.next({\n        value: this.value,\n        highValue: this.highValue,\n        forceChange: true,\n        userEventInitiated: false\n      });\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  onChangeOptions() {\n    if (!this.initHasRun) {\n      return;\n    }\n\n    const\n    /** @type {?} */\n    previousInputEventsInterval = this.viewOptions.inputEventsInterval;\n    const\n    /** @type {?} */\n    previousOutputEventsInterval = this.viewOptions.outputEventsInterval;\n    this.applyOptions();\n\n    if (previousInputEventsInterval !== this.viewOptions.inputEventsInterval) {\n      this.unsubscribeInputModelChangeSubject();\n      this.subscribeInputModelChangeSubject(this.viewOptions.inputEventsInterval);\n    }\n\n    if (previousOutputEventsInterval !== this.viewOptions.outputEventsInterval) {\n      this.unsubscribeInputModelChangeSubject();\n      this.subscribeInputModelChangeSubject(this.viewOptions.outputEventsInterval);\n    } // With new options, we need to re-normalise model values if necessary\n\n\n    this.renormaliseModelValues();\n    this.viewLowValue = this.modelValueToViewValue(this.value);\n\n    if (this.range) {\n      this.viewHighValue = this.modelValueToViewValue(this.highValue);\n    } else {\n      this.viewHighValue = null;\n    }\n\n    this.resetSlider();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  applyOptions() {\n    this.viewOptions = new Options();\n    Object.assign(this.viewOptions, this.options);\n    this.viewOptions.draggableRange = this.range && this.viewOptions.draggableRange;\n    this.viewOptions.draggableRangeOnly = this.range && this.viewOptions.draggableRangeOnly;\n\n    if (this.viewOptions.draggableRangeOnly) {\n      this.viewOptions.draggableRange = true;\n    }\n\n    this.viewOptions.showTicks = this.viewOptions.showTicks || this.viewOptions.showTicksValues || !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray);\n\n    if (this.viewOptions.showTicks && (!ValueHelper.isNullOrUndefined(this.viewOptions.tickStep) || !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray))) {\n      this.intermediateTicks = true;\n    }\n\n    this.viewOptions.showSelectionBar = this.viewOptions.showSelectionBar || this.viewOptions.showSelectionBarEnd || !ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue);\n\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray)) {\n      this.applyStepsArrayOptions();\n    } else {\n      this.applyFloorCeilOptions();\n    }\n\n    if (ValueHelper.isNullOrUndefined(this.viewOptions.combineLabels)) {\n      this.viewOptions.combineLabels = (minValue, maxValue) => {\n        return minValue + ' - ' + maxValue;\n      };\n    }\n\n    if (this.viewOptions.logScale && this.viewOptions.floor === 0) {\n      throw Error('Can\\'t use floor=0 with logarithmic scale');\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  applyStepsArrayOptions() {\n    this.viewOptions.floor = 0;\n    this.viewOptions.ceil = this.viewOptions.stepsArray.length - 1;\n    this.viewOptions.step = 1;\n\n    if (ValueHelper.isNullOrUndefined(this.viewOptions.translate)) {\n      this.viewOptions.translate = modelValue => {\n        if (this.viewOptions.bindIndexForStepsArray) {\n          return String(this.getStepValue(modelValue));\n        }\n\n        return String(modelValue);\n      };\n    }\n\n    this.viewOptions.getLegend = index => {\n      const\n      /** @type {?} */\n      step = this.viewOptions.stepsArray[index];\n      return step.legend;\n    };\n  }\n  /**\n   * @return {?}\n   */\n\n\n  applyFloorCeilOptions() {\n    if (ValueHelper.isNullOrUndefined(this.viewOptions.step)) {\n      this.viewOptions.step = 1;\n    } else {\n      this.viewOptions.step = +this.viewOptions.step;\n\n      if (this.viewOptions.step <= 0) {\n        this.viewOptions.step = 1;\n      }\n    }\n\n    if (ValueHelper.isNullOrUndefined(this.viewOptions.ceil) || ValueHelper.isNullOrUndefined(this.viewOptions.floor)) {\n      throw Error('floor and ceil options must be supplied');\n    }\n\n    this.viewOptions.ceil = +this.viewOptions.ceil;\n    this.viewOptions.floor = +this.viewOptions.floor;\n\n    if (ValueHelper.isNullOrUndefined(this.viewOptions.translate)) {\n      this.viewOptions.translate = value => String(value);\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  resetSlider() {\n    this.manageElementsStyle();\n    this.addAccessibility();\n    this.updateCeilLabel();\n    this.updateFloorLabel();\n    this.unbindEvents();\n    this.manageEventsBindings();\n    this.updateDisabledState();\n    this.calculateViewDimensions();\n    this.refocusPointerIfNeeded();\n  }\n  /**\n   * @param {?} pointerType\n   * @return {?}\n   */\n\n\n  focusPointer(pointerType) {\n    // If not supplied, use min pointer as default\n    if (pointerType !== PointerType.Min && pointerType !== PointerType.Max) {\n      pointerType = PointerType.Min;\n    }\n\n    if (pointerType === PointerType.Min) {\n      this.minHandleElement.focus();\n    } else if (this.range && pointerType === PointerType.Max) {\n      this.maxHandleElement.focus();\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  refocusPointerIfNeeded() {\n    if (!ValueHelper.isNullOrUndefined(this.currentFocusPointer)) {\n      this.onPointerFocus(this.currentFocusPointer);\n      const\n      /** @type {?} */\n      element = this.getPointerElement(this.currentFocusPointer);\n      element.focus();\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  manageElementsStyle() {\n    this.updateScale();\n    this.floorLabelElement.setAlwaysHide(this.viewOptions.showTicksValues || this.viewOptions.hideLimitLabels);\n    this.ceilLabelElement.setAlwaysHide(this.viewOptions.showTicksValues || this.viewOptions.hideLimitLabels);\n    const\n    /** @type {?} */\n    hideLabelsForTicks = this.viewOptions.showTicksValues && !this.intermediateTicks;\n    this.minHandleLabelElement.setAlwaysHide(hideLabelsForTicks || this.viewOptions.hidePointerLabels);\n    this.maxHandleLabelElement.setAlwaysHide(hideLabelsForTicks || !this.range || this.viewOptions.hidePointerLabels);\n    this.combinedLabelElement.setAlwaysHide(hideLabelsForTicks || !this.range || this.viewOptions.hidePointerLabels);\n    this.selectionBarElement.setAlwaysHide(!this.range && !this.viewOptions.showSelectionBar);\n    this.leftOuterSelectionBarElement.setAlwaysHide(!this.range || !this.viewOptions.showOuterSelectionBars);\n    this.rightOuterSelectionBarElement.setAlwaysHide(!this.range || !this.viewOptions.showOuterSelectionBars);\n    this.fullBarTransparentClass = this.range && this.viewOptions.showOuterSelectionBars;\n    this.selectionBarDraggableClass = this.viewOptions.draggableRange && !this.viewOptions.onlyBindHandles;\n    this.ticksUnderValuesClass = this.intermediateTicks && this.options.showTicksValues;\n\n    if (this.sliderElementVerticalClass !== this.viewOptions.vertical) {\n      this.updateVerticalState(); // The above change in host component class will not be applied until the end of this cycle\n      // However, functions calculating the slider position expect the slider to be already styled as vertical\n      // So as a workaround, we need to reset the slider once again to compute the correct values\n\n      setTimeout(() => {\n        this.resetSlider();\n      });\n    } // Changing animate class may interfere with slider reset/initialisation, so we should set it separately,\n    // after all is properly set up\n\n\n    if (this.sliderElementAnimateClass !== this.viewOptions.animate) {\n      setTimeout(() => {\n        this.sliderElementAnimateClass = this.viewOptions.animate;\n      });\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  manageEventsBindings() {\n    if (this.viewOptions.disabled || this.viewOptions.readOnly) {\n      this.unbindEvents();\n    } else {\n      this.bindEvents();\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  updateDisabledState() {\n    this.sliderElementDisabledAttr = this.viewOptions.disabled ? 'disabled' : null;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  updateVerticalState() {\n    this.sliderElementVerticalClass = this.viewOptions.vertical;\n\n    for (const\n    /** @type {?} */\n    element of this.getAllSliderElements()) {\n      // This is also called before ngAfterInit, so need to check that view child bindings work\n      if (!ValueHelper.isNullOrUndefined(element)) {\n        element.setVertical(this.viewOptions.vertical);\n      }\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  updateScale() {\n    for (const\n    /** @type {?} */\n    element of this.getAllSliderElements()) {\n      element.setScale(this.viewOptions.scale);\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  getAllSliderElements() {\n    return [this.leftOuterSelectionBarElement, this.rightOuterSelectionBarElement, this.fullBarElement, this.selectionBarElement, this.minHandleElement, this.maxHandleElement, this.floorLabelElement, this.ceilLabelElement, this.minHandleLabelElement, this.maxHandleLabelElement, this.combinedLabelElement, this.ticksElement];\n  }\n  /**\n   * @return {?}\n   */\n\n\n  initHandles() {\n    this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n    /*\n       the order here is important since the selection bar should be\n       updated after the high handle but before the combined label\n       */\n\n    if (this.range) {\n      this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n    }\n\n    this.updateSelectionBar();\n\n    if (this.range) {\n      this.updateCombinedLabel();\n    }\n\n    this.updateTicksScale();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  addAccessibility() {\n    this.updateAriaAttributes();\n    this.minHandleElement.role = 'slider';\n\n    if (this.viewOptions.keyboardSupport && !(this.viewOptions.readOnly || this.viewOptions.disabled)) {\n      this.minHandleElement.tabindex = '0';\n    } else {\n      this.minHandleElement.tabindex = '';\n    }\n\n    if (this.viewOptions.vertical) {\n      this.minHandleElement.ariaOrientation = 'vertical';\n    }\n\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabel)) {\n      this.minHandleElement.ariaLabel = this.viewOptions.ariaLabel;\n    } else if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelledBy)) {\n      this.minHandleElement.ariaLabelledBy = this.viewOptions.ariaLabelledBy;\n    }\n\n    if (this.range) {\n      this.maxHandleElement.role = 'slider';\n\n      if (this.viewOptions.keyboardSupport && !(this.viewOptions.readOnly || this.viewOptions.disabled)) {\n        this.maxHandleElement.tabindex = '0';\n      } else {\n        this.maxHandleElement.tabindex = '';\n      }\n\n      this.maxHandleElement.ariaOrientation = this.viewOptions.vertical ? 'vertical' : 'horizontal';\n\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelHigh)) {\n        this.maxHandleElement.ariaLabel = this.viewOptions.ariaLabelHigh;\n      } else if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelledByHigh)) {\n        this.maxHandleElement.ariaLabelledBy = this.viewOptions.ariaLabelledByHigh;\n      }\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  updateAriaAttributes() {\n    this.minHandleElement.ariaValueNow = (+this.value).toString();\n    this.minHandleElement.ariaValueText = this.viewOptions.translate(+this.value, LabelType.Low);\n    this.minHandleElement.ariaValueMin = this.viewOptions.floor.toString();\n    this.minHandleElement.ariaValueMax = this.viewOptions.ceil.toString();\n\n    if (this.range) {\n      this.maxHandleElement.ariaValueNow = (+this.highValue).toString();\n      this.maxHandleElement.ariaValueText = this.viewOptions.translate(+this.highValue, LabelType.High);\n      this.maxHandleElement.ariaValueMin = this.viewOptions.floor.toString();\n      this.maxHandleElement.ariaValueMax = this.viewOptions.ceil.toString();\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  calculateViewDimensions() {\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.handleDimension)) {\n      this.minHandleElement.setDimension(this.viewOptions.handleDimension);\n    } else {\n      this.minHandleElement.calculateDimension();\n    }\n\n    const\n    /** @type {?} */\n    handleWidth = this.minHandleElement.dimension;\n    this.handleHalfDimension = handleWidth / 2;\n\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.barDimension)) {\n      this.fullBarElement.setDimension(this.viewOptions.barDimension);\n    } else {\n      this.fullBarElement.calculateDimension();\n    }\n\n    this.maxHandlePosition = this.fullBarElement.dimension - handleWidth;\n\n    if (this.initHasRun) {\n      this.updateFloorLabel();\n      this.updateCeilLabel();\n      this.initHandles();\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  calculateViewDimensionsAndDetectChanges() {\n    this.calculateViewDimensions();\n\n    if (!this.isRefDestroyed()) {\n      this.changeDetectionRef.detectChanges();\n    }\n  }\n  /**\n   * If the slider reference is already destroyed\n   * @return {?} boolean - true if ref is destroyed\n   */\n\n\n  isRefDestroyed() {\n    return this.changeDetectionRef['destroyed'];\n  }\n  /**\n   * @return {?}\n   */\n\n\n  updateTicksScale() {\n    if (!this.viewOptions.showTicks) {\n      return;\n    }\n\n    const\n    /** @type {?} */\n    ticksArray = !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray) ? this.viewOptions.ticksArray : this.getTicksArray();\n    const\n    /** @type {?} */\n    translate = this.viewOptions.vertical ? 'translateY' : 'translateX';\n\n    if (this.viewOptions.rightToLeft) {\n      ticksArray.reverse();\n    }\n\n    const\n    /** @type {?} */\n    newTicks = ticksArray.map(value => {\n      let\n      /** @type {?} */\n      position = this.valueToPosition(value);\n\n      if (this.viewOptions.vertical) {\n        position = this.maxHandlePosition - position;\n      }\n\n      const\n      /** @type {?} */\n      translation = translate + '(' + Math.round(position) + 'px)';\n      const\n      /** @type {?} */\n      tick = new Tick();\n      tick.selected = this.isTickSelected(value);\n      tick.style = {\n        '-webkit-transform': translation,\n        '-moz-transform': translation,\n        '-o-transform': translation,\n        '-ms-transform': translation,\n        transform: translation\n      };\n\n      if (tick.selected && !ValueHelper.isNullOrUndefined(this.viewOptions.getSelectionBarColor)) {\n        tick.style['background-color'] = this.getSelectionBarColor();\n      }\n\n      if (!tick.selected && !ValueHelper.isNullOrUndefined(this.viewOptions.getTickColor)) {\n        tick.style['background-color'] = this.getTickColor(value);\n      }\n\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.ticksTooltip)) {\n        tick.tooltip = this.viewOptions.ticksTooltip(value);\n        tick.tooltipPlacement = this.viewOptions.vertical ? 'right' : 'top';\n      }\n\n      if (this.viewOptions.showTicksValues && value % this.viewOptions.tickValueStep === 0) {\n        tick.value = this.getDisplayValue(value, LabelType.TickValue);\n\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.ticksValuesTooltip)) {\n          tick.valueTooltip = this.viewOptions.ticksValuesTooltip(value);\n          tick.valueTooltipPlacement = this.viewOptions.vertical ? 'right' : 'top';\n        }\n      }\n\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.getLegend)) {\n        const\n        /** @type {?} */\n        legend = this.viewOptions.getLegend(value);\n\n        if (!ValueHelper.isNullOrUndefined(legend)) {\n          tick.legend = legend;\n        }\n      }\n\n      return tick;\n    }); // We should avoid re-creating the ticks array if possible\n    // This both improves performance and makes CSS animations work correctly\n\n    if (!ValueHelper.isNullOrUndefined(this.ticks) && this.ticks.length === newTicks.length) {\n      for (let\n      /** @type {?} */\n      i = 0; i < newTicks.length; ++i) {\n        Object.assign(this.ticks[i], newTicks[i]);\n      }\n    } else {\n      this.ticks = newTicks;\n    }\n\n    if (!this.isRefDestroyed()) {\n      this.changeDetectionRef.detectChanges();\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  getTicksArray() {\n    const\n    /** @type {?} */\n    step = !ValueHelper.isNullOrUndefined(this.viewOptions.tickStep) ? this.viewOptions.tickStep : this.viewOptions.step;\n    const\n    /** @type {?} */\n    ticksArray = [];\n\n    for (let\n    /** @type {?} */\n    value = this.viewOptions.floor; value <= this.viewOptions.ceil; value += step) {\n      ticksArray.push(value);\n    }\n\n    return ticksArray;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  isTickSelected(value) {\n    if (!this.range) {\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue)) {\n        const\n        /** @type {?} */\n        center = this.viewOptions.showSelectionBarFromValue;\n\n        if (this.viewLowValue > center && value >= center && value <= this.viewLowValue) {\n          return true;\n        } else if (this.viewLowValue < center && value <= center && value >= this.viewLowValue) {\n          return true;\n        }\n      } else if (this.viewOptions.showSelectionBarEnd) {\n        if (value >= this.viewLowValue) {\n          return true;\n        }\n      } else if (this.viewOptions.showSelectionBar && value <= this.viewLowValue) {\n        return true;\n      }\n    }\n\n    if (this.range && value >= this.viewLowValue && value <= this.viewHighValue) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  updateFloorLabel() {\n    if (!this.floorLabelElement.alwaysHide) {\n      this.floorLabelElement.setValue(this.getDisplayValue(this.viewOptions.floor, LabelType.Floor));\n      this.floorLabelElement.calculateDimension();\n      const\n      /** @type {?} */\n      position = this.viewOptions.rightToLeft ? this.fullBarElement.dimension - this.floorLabelElement.dimension : 0;\n      this.floorLabelElement.setPosition(position);\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  updateCeilLabel() {\n    if (!this.ceilLabelElement.alwaysHide) {\n      this.ceilLabelElement.setValue(this.getDisplayValue(this.viewOptions.ceil, LabelType.Ceil));\n      this.ceilLabelElement.calculateDimension();\n      const\n      /** @type {?} */\n      position = this.viewOptions.rightToLeft ? 0 : this.fullBarElement.dimension - this.ceilLabelElement.dimension;\n      this.ceilLabelElement.setPosition(position);\n    }\n  }\n  /**\n   * @param {?} which\n   * @param {?} newPos\n   * @return {?}\n   */\n\n\n  updateHandles(which, newPos) {\n    if (which === PointerType.Min) {\n      this.updateLowHandle(newPos);\n    } else if (which === PointerType.Max) {\n      this.updateHighHandle(newPos);\n    }\n\n    this.updateSelectionBar();\n    this.updateTicksScale();\n\n    if (this.range) {\n      this.updateCombinedLabel();\n    }\n  }\n  /**\n   * @param {?} labelType\n   * @param {?} newPos\n   * @return {?}\n   */\n\n\n  getHandleLabelPos(labelType, newPos) {\n    const\n    /** @type {?} */\n    labelDimension = labelType === PointerType.Min ? this.minHandleLabelElement.dimension : this.maxHandleLabelElement.dimension;\n    const\n    /** @type {?} */\n    nearHandlePos = newPos - labelDimension / 2 + this.handleHalfDimension;\n    const\n    /** @type {?} */\n    endOfBarPos = this.fullBarElement.dimension - labelDimension;\n\n    if (!this.viewOptions.boundPointerLabels) {\n      return nearHandlePos;\n    }\n\n    if (this.viewOptions.rightToLeft && labelType === PointerType.Min || !this.viewOptions.rightToLeft && labelType === PointerType.Max) {\n      return Math.min(nearHandlePos, endOfBarPos);\n    } else {\n      return Math.min(Math.max(nearHandlePos, 0), endOfBarPos);\n    }\n  }\n  /**\n   * @param {?} newPos\n   * @return {?}\n   */\n\n\n  updateLowHandle(newPos) {\n    this.minHandleElement.setPosition(newPos);\n    this.minHandleLabelElement.setValue(this.getDisplayValue(this.viewLowValue, LabelType.Low));\n    this.minHandleLabelElement.setPosition(this.getHandleLabelPos(PointerType.Min, newPos));\n\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.getPointerColor)) {\n      this.minPointerStyle = {\n        backgroundColor: this.getPointerColor(PointerType.Min)\n      };\n    }\n\n    if (this.viewOptions.autoHideLimitLabels) {\n      this.updateFloorAndCeilLabelsVisibility();\n    }\n  }\n  /**\n   * @param {?} newPos\n   * @return {?}\n   */\n\n\n  updateHighHandle(newPos) {\n    this.maxHandleElement.setPosition(newPos);\n    this.maxHandleLabelElement.setValue(this.getDisplayValue(this.viewHighValue, LabelType.High));\n    this.maxHandleLabelElement.setPosition(this.getHandleLabelPos(PointerType.Max, newPos));\n\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.getPointerColor)) {\n      this.maxPointerStyle = {\n        backgroundColor: this.getPointerColor(PointerType.Max)\n      };\n    }\n\n    if (this.viewOptions.autoHideLimitLabels) {\n      this.updateFloorAndCeilLabelsVisibility();\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  updateFloorAndCeilLabelsVisibility() {\n    // Show based only on hideLimitLabels if pointer labels are hidden\n    if (this.viewOptions.hidePointerLabels) {\n      return;\n    }\n\n    let\n    /** @type {?} */\n    floorLabelHidden = false;\n    let\n    /** @type {?} */\n    ceilLabelHidden = false;\n    const\n    /** @type {?} */\n    isMinLabelAtFloor = this.isLabelBelowFloorLabel(this.minHandleLabelElement);\n    const\n    /** @type {?} */\n    isMinLabelAtCeil = this.isLabelAboveCeilLabel(this.minHandleLabelElement);\n    const\n    /** @type {?} */\n    isMaxLabelAtCeil = this.isLabelAboveCeilLabel(this.maxHandleLabelElement);\n    const\n    /** @type {?} */\n    isCombinedLabelAtFloor = this.isLabelBelowFloorLabel(this.combinedLabelElement);\n    const\n    /** @type {?} */\n    isCombinedLabelAtCeil = this.isLabelAboveCeilLabel(this.combinedLabelElement);\n\n    if (isMinLabelAtFloor) {\n      floorLabelHidden = true;\n      this.floorLabelElement.hide();\n    } else {\n      floorLabelHidden = false;\n      this.floorLabelElement.show();\n    }\n\n    if (isMinLabelAtCeil) {\n      ceilLabelHidden = true;\n      this.ceilLabelElement.hide();\n    } else {\n      ceilLabelHidden = false;\n      this.ceilLabelElement.show();\n    }\n\n    if (this.range) {\n      const\n      /** @type {?} */\n      hideCeil = this.combinedLabelElement.isVisible() ? isCombinedLabelAtCeil : isMaxLabelAtCeil;\n      const\n      /** @type {?} */\n      hideFloor = this.combinedLabelElement.isVisible() ? isCombinedLabelAtFloor : isMinLabelAtFloor;\n\n      if (hideCeil) {\n        this.ceilLabelElement.hide();\n      } else if (!ceilLabelHidden) {\n        this.ceilLabelElement.show();\n      } // Hide or show floor label\n\n\n      if (hideFloor) {\n        this.floorLabelElement.hide();\n      } else if (!floorLabelHidden) {\n        this.floorLabelElement.show();\n      }\n    }\n  }\n  /**\n   * @param {?} label\n   * @return {?}\n   */\n\n\n  isLabelBelowFloorLabel(label) {\n    const\n    /** @type {?} */\n    pos = label.position;\n    const\n    /** @type {?} */\n    dim = label.dimension;\n    const\n    /** @type {?} */\n    floorPos = this.floorLabelElement.position;\n    const\n    /** @type {?} */\n    floorDim = this.floorLabelElement.dimension;\n    return this.viewOptions.rightToLeft ? pos + dim >= floorPos - 2 : pos <= floorPos + floorDim + 2;\n  }\n  /**\n   * @param {?} label\n   * @return {?}\n   */\n\n\n  isLabelAboveCeilLabel(label) {\n    const\n    /** @type {?} */\n    pos = label.position;\n    const\n    /** @type {?} */\n    dim = label.dimension;\n    const\n    /** @type {?} */\n    ceilPos = this.ceilLabelElement.position;\n    const\n    /** @type {?} */\n    ceilDim = this.ceilLabelElement.dimension;\n    return this.viewOptions.rightToLeft ? pos <= ceilPos + ceilDim + 2 : pos + dim >= ceilPos - 2;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  updateSelectionBar() {\n    let\n    /** @type {?} */\n    position = 0;\n    let\n    /** @type {?} */\n    dimension = 0;\n    const\n    /** @type {?} */\n    isSelectionBarFromRight = this.viewOptions.rightToLeft ? !this.viewOptions.showSelectionBarEnd : this.viewOptions.showSelectionBarEnd;\n    const\n    /** @type {?} */\n    positionForRange = this.viewOptions.rightToLeft ? this.maxHandleElement.position + this.handleHalfDimension : this.minHandleElement.position + this.handleHalfDimension;\n\n    if (this.range) {\n      dimension = Math.abs(this.maxHandleElement.position - this.minHandleElement.position);\n      position = positionForRange;\n    } else {\n      if (!ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue)) {\n        const\n        /** @type {?} */\n        center = this.viewOptions.showSelectionBarFromValue;\n        const\n        /** @type {?} */\n        centerPosition = this.valueToPosition(center);\n        const\n        /** @type {?} */\n        isModelGreaterThanCenter = this.viewOptions.rightToLeft ? this.viewLowValue <= center : this.viewLowValue > center;\n\n        if (isModelGreaterThanCenter) {\n          dimension = this.minHandleElement.position - centerPosition;\n          position = centerPosition + this.handleHalfDimension;\n        } else {\n          dimension = centerPosition - this.minHandleElement.position;\n          position = this.minHandleElement.position + this.handleHalfDimension;\n        }\n      } else if (isSelectionBarFromRight) {\n        dimension = Math.ceil(Math.abs(this.maxHandlePosition - this.minHandleElement.position) + this.handleHalfDimension);\n        position = Math.floor(this.minHandleElement.position + this.handleHalfDimension);\n      } else {\n        dimension = this.minHandleElement.position + this.handleHalfDimension;\n        position = 0;\n      }\n    }\n\n    this.selectionBarElement.setDimension(dimension);\n    this.selectionBarElement.setPosition(position);\n\n    if (this.range && this.viewOptions.showOuterSelectionBars) {\n      if (this.viewOptions.rightToLeft) {\n        this.rightOuterSelectionBarElement.setDimension(position);\n        this.rightOuterSelectionBarElement.setPosition(0);\n        this.fullBarElement.calculateDimension();\n        this.leftOuterSelectionBarElement.setDimension(this.fullBarElement.dimension - (position + dimension));\n        this.leftOuterSelectionBarElement.setPosition(position + dimension);\n      } else {\n        this.leftOuterSelectionBarElement.setDimension(position);\n        this.leftOuterSelectionBarElement.setPosition(0);\n        this.fullBarElement.calculateDimension();\n        this.rightOuterSelectionBarElement.setDimension(this.fullBarElement.dimension - (position + dimension));\n        this.rightOuterSelectionBarElement.setPosition(position + dimension);\n      }\n    }\n\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.getSelectionBarColor)) {\n      const\n      /** @type {?} */\n      color = this.getSelectionBarColor();\n      this.barStyle = {\n        backgroundColor: color\n      };\n    } else if (!ValueHelper.isNullOrUndefined(this.viewOptions.selectionBarGradient)) {\n      const\n      /** @type {?} */\n      offset = !ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue) ? this.valueToPosition(this.viewOptions.showSelectionBarFromValue) : 0;\n      const\n      /** @type {?} */\n      reversed = offset - position > 0 && !isSelectionBarFromRight || offset - position <= 0 && isSelectionBarFromRight;\n      const\n      /** @type {?} */\n      direction = this.viewOptions.vertical ? reversed ? 'bottom' : 'top' : reversed ? 'left' : 'right';\n      this.barStyle = {\n        backgroundImage: 'linear-gradient(to ' + direction + ', ' + this.viewOptions.selectionBarGradient.from + ' 0%,' + this.viewOptions.selectionBarGradient.to + ' 100%)'\n      };\n\n      if (this.viewOptions.vertical) {\n        this.barStyle.backgroundPosition = 'center ' + (offset + dimension + position + (reversed ? -this.handleHalfDimension : 0)) + 'px';\n        this.barStyle.backgroundSize = '100% ' + (this.fullBarElement.dimension - this.handleHalfDimension) + 'px';\n      } else {\n        this.barStyle.backgroundPosition = offset - position + (reversed ? this.handleHalfDimension : 0) + 'px center';\n        this.barStyle.backgroundSize = this.fullBarElement.dimension - this.handleHalfDimension + 'px 100%';\n      }\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  getSelectionBarColor() {\n    if (this.range) {\n      return this.viewOptions.getSelectionBarColor(this.value, this.highValue);\n    }\n\n    return this.viewOptions.getSelectionBarColor(this.value);\n  }\n  /**\n   * @param {?} pointerType\n   * @return {?}\n   */\n\n\n  getPointerColor(pointerType) {\n    if (pointerType === PointerType.Max) {\n      return this.viewOptions.getPointerColor(this.highValue, pointerType);\n    }\n\n    return this.viewOptions.getPointerColor(this.value, pointerType);\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  getTickColor(value) {\n    return this.viewOptions.getTickColor(value);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  updateCombinedLabel() {\n    let\n    /** @type {?} */\n    isLabelOverlap = null;\n\n    if (this.viewOptions.rightToLeft) {\n      isLabelOverlap = this.minHandleLabelElement.position - this.minHandleLabelElement.dimension - 10 <= this.maxHandleLabelElement.position;\n    } else {\n      isLabelOverlap = this.minHandleLabelElement.position + this.minHandleLabelElement.dimension + 10 >= this.maxHandleLabelElement.position;\n    }\n\n    if (isLabelOverlap) {\n      const\n      /** @type {?} */\n      lowDisplayValue = this.getDisplayValue(this.viewLowValue, LabelType.Low);\n      const\n      /** @type {?} */\n      highDisplayValue = this.getDisplayValue(this.viewHighValue, LabelType.High);\n      const\n      /** @type {?} */\n      combinedLabelValue = this.viewOptions.rightToLeft ? this.viewOptions.combineLabels(highDisplayValue, lowDisplayValue) : this.viewOptions.combineLabels(lowDisplayValue, highDisplayValue);\n      this.combinedLabelElement.setValue(combinedLabelValue);\n      const\n      /** @type {?} */\n      pos = this.viewOptions.boundPointerLabels ? Math.min(Math.max(this.selectionBarElement.position + this.selectionBarElement.dimension / 2 - this.combinedLabelElement.dimension / 2, 0), this.fullBarElement.dimension - this.combinedLabelElement.dimension) : this.selectionBarElement.position + this.selectionBarElement.dimension / 2 - this.combinedLabelElement.dimension / 2;\n      this.combinedLabelElement.setPosition(pos);\n      this.minHandleLabelElement.hide();\n      this.maxHandleLabelElement.hide();\n      this.combinedLabelElement.show();\n    } else {\n      this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n      this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n      this.maxHandleLabelElement.show();\n      this.minHandleLabelElement.show();\n      this.combinedLabelElement.hide();\n    }\n\n    if (this.viewOptions.autoHideLimitLabels) {\n      this.updateFloorAndCeilLabelsVisibility();\n    }\n  }\n  /**\n   * @param {?} value\n   * @param {?} which\n   * @return {?}\n   */\n\n\n  getDisplayValue(value, which) {\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n      value = this.getStepValue(value);\n    }\n\n    return this.viewOptions.translate(value, which);\n  }\n  /**\n   * @param {?} value\n   * @param {?=} customStep\n   * @return {?}\n   */\n\n\n  roundStep(value, customStep) {\n    const\n    /** @type {?} */\n    step = !ValueHelper.isNullOrUndefined(customStep) ? customStep : this.viewOptions.step;\n    let\n    /** @type {?} */\n    steppedDifference = MathHelper.roundToPrecisionLimit((value - this.viewOptions.floor) / step, this.viewOptions.precisionLimit);\n    steppedDifference = Math.round(steppedDifference) * step;\n    return MathHelper.roundToPrecisionLimit(this.viewOptions.floor + steppedDifference, this.viewOptions.precisionLimit);\n  }\n  /**\n   * @param {?} val\n   * @return {?}\n   */\n\n\n  valueToPosition(val) {\n    let\n    /** @type {?} */\n    fn = ValueHelper.linearValueToPosition;\n\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.customValueToPosition)) {\n      fn = this.viewOptions.customValueToPosition;\n    } else if (this.viewOptions.logScale) {\n      fn = ValueHelper.logValueToPosition;\n    }\n\n    val = MathHelper.clampToRange(val, this.viewOptions.floor, this.viewOptions.ceil);\n    let\n    /** @type {?} */\n    percent = fn(val, this.viewOptions.floor, this.viewOptions.ceil);\n\n    if (ValueHelper.isNullOrUndefined(percent)) {\n      percent = 0;\n    }\n\n    if (this.viewOptions.rightToLeft) {\n      percent = 1 - percent;\n    }\n\n    return percent * this.maxHandlePosition;\n  }\n  /**\n   * @param {?} position\n   * @return {?}\n   */\n\n\n  positionToValue(position) {\n    let\n    /** @type {?} */\n    percent = position / this.maxHandlePosition;\n\n    if (this.viewOptions.rightToLeft) {\n      percent = 1 - percent;\n    }\n\n    let\n    /** @type {?} */\n    fn = ValueHelper.linearPositionToValue;\n\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.customPositionToValue)) {\n      fn = this.viewOptions.customPositionToValue;\n    } else if (this.viewOptions.logScale) {\n      fn = ValueHelper.logPositionToValue;\n    }\n\n    const\n    /** @type {?} */\n    value = fn(percent, this.viewOptions.floor, this.viewOptions.ceil);\n    return !ValueHelper.isNullOrUndefined(value) ? value : 0;\n  }\n  /**\n   * @param {?} event\n   * @param {?=} targetTouchId\n   * @return {?}\n   */\n\n\n  getEventXY(event, targetTouchId) {\n    if (event instanceof MouseEvent) {\n      return this.viewOptions.vertical ? event.clientY : event.clientX;\n    }\n\n    let\n    /** @type {?} */\n    touchIndex = 0;\n    const\n    /** @type {?} */\n    touches = event.touches;\n\n    if (!ValueHelper.isNullOrUndefined(targetTouchId)) {\n      for (let\n      /** @type {?} */\n      i = 0; i < touches.length; i++) {\n        if (touches[i].identifier === targetTouchId) {\n          touchIndex = i;\n          break;\n        }\n      }\n    } // Return the target touch or if the target touch was not found in the event\n    // returns the coordinates of the first touch\n\n\n    return this.viewOptions.vertical ? touches[touchIndex].clientY : touches[touchIndex].clientX;\n  }\n  /**\n   * @param {?} event\n   * @param {?=} targetTouchId\n   * @return {?}\n   */\n\n\n  getEventPosition(event, targetTouchId) {\n    const\n    /** @type {?} */\n    sliderElementBoundingRect = this.elementRef.nativeElement.getBoundingClientRect();\n    const\n    /** @type {?} */\n    sliderPos = this.viewOptions.vertical ? sliderElementBoundingRect.bottom : sliderElementBoundingRect.left;\n    let\n    /** @type {?} */\n    eventPos = 0;\n\n    if (this.viewOptions.vertical) {\n      eventPos = -this.getEventXY(event, targetTouchId) + sliderPos;\n    } else {\n      eventPos = this.getEventXY(event, targetTouchId) - sliderPos;\n    }\n\n    return eventPos * this.viewOptions.scale - this.handleHalfDimension;\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  getNearestHandle(event) {\n    if (!this.range) {\n      return PointerType.Min;\n    }\n\n    const\n    /** @type {?} */\n    position = this.getEventPosition(event);\n    const\n    /** @type {?} */\n    distanceMin = Math.abs(position - this.minHandleElement.position);\n    const\n    /** @type {?} */\n    distanceMax = Math.abs(position - this.maxHandleElement.position);\n\n    if (distanceMin < distanceMax) {\n      return PointerType.Min;\n    } else if (distanceMin > distanceMax) {\n      return PointerType.Max;\n    } else if (!this.viewOptions.rightToLeft) {\n      // if event is at the same distance from min/max then if it's at left of minH, we return minH else maxH\n      return position < this.minHandleElement.position ? PointerType.Min : PointerType.Max;\n    } // reverse in rtl\n\n\n    return position > this.minHandleElement.position ? PointerType.Min : PointerType.Max;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  bindEvents() {\n    const\n    /** @type {?} */\n    draggableRange = this.viewOptions.draggableRange;\n\n    if (!this.viewOptions.onlyBindHandles) {\n      this.selectionBarElement.on('mousedown', event => this.onBarStart(null, draggableRange, event, true, true, true));\n    }\n\n    if (this.viewOptions.draggableRangeOnly) {\n      this.minHandleElement.on('mousedown', event => this.onBarStart(PointerType.Min, draggableRange, event, true, true));\n      this.maxHandleElement.on('mousedown', event => this.onBarStart(PointerType.Max, draggableRange, event, true, true));\n    } else {\n      this.minHandleElement.on('mousedown', event => this.onStart(PointerType.Min, event, true, true));\n\n      if (this.range) {\n        this.maxHandleElement.on('mousedown', event => this.onStart(PointerType.Max, event, true, true));\n      }\n\n      if (!this.viewOptions.onlyBindHandles) {\n        this.fullBarElement.on('mousedown', event => this.onStart(null, event, true, true, true));\n        this.ticksElement.on('mousedown', event => this.onStart(null, event, true, true, true, true));\n      }\n    }\n\n    if (!this.viewOptions.onlyBindHandles) {\n      this.selectionBarElement.onPassive('touchstart', event => this.onBarStart(null, draggableRange, event, true, true, true));\n    }\n\n    if (this.viewOptions.draggableRangeOnly) {\n      this.minHandleElement.onPassive('touchstart', event => this.onBarStart(PointerType.Min, draggableRange, event, true, true));\n      this.maxHandleElement.onPassive('touchstart', event => this.onBarStart(PointerType.Max, draggableRange, event, true, true));\n    } else {\n      this.minHandleElement.onPassive('touchstart', event => this.onStart(PointerType.Min, event, true, true));\n\n      if (this.range) {\n        this.maxHandleElement.onPassive('touchstart', event => this.onStart(PointerType.Max, event, true, true));\n      }\n\n      if (!this.viewOptions.onlyBindHandles) {\n        this.fullBarElement.onPassive('touchstart', event => this.onStart(null, event, true, true, true));\n        this.ticksElement.onPassive('touchstart', event => this.onStart(null, event, false, false, true, true));\n      }\n    }\n\n    if (this.viewOptions.keyboardSupport) {\n      this.minHandleElement.on('focus', () => this.onPointerFocus(PointerType.Min));\n\n      if (this.range) {\n        this.maxHandleElement.on('focus', () => this.onPointerFocus(PointerType.Max));\n      }\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  unbindEvents() {\n    this.unsubscribeOnMove();\n    this.unsubscribeOnEnd();\n\n    for (const\n    /** @type {?} */\n    element of this.getAllSliderElements()) {\n      if (!ValueHelper.isNullOrUndefined(element)) {\n        element.off();\n      }\n    }\n  }\n  /**\n   * @param {?} pointerType\n   * @param {?} draggableRange\n   * @param {?} event\n   * @param {?} bindMove\n   * @param {?} bindEnd\n   * @param {?=} simulateImmediateMove\n   * @param {?=} simulateImmediateEnd\n   * @return {?}\n   */\n\n\n  onBarStart(pointerType, draggableRange, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd) {\n    if (draggableRange) {\n      this.onDragStart(pointerType, event, bindMove, bindEnd);\n    } else {\n      this.onStart(pointerType, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd);\n    }\n  }\n  /**\n   * @param {?} pointerType\n   * @param {?} event\n   * @param {?} bindMove\n   * @param {?} bindEnd\n   * @param {?=} simulateImmediateMove\n   * @param {?=} simulateImmediateEnd\n   * @return {?}\n   */\n\n\n  onStart(pointerType, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd) {\n    event.stopPropagation(); // Only call preventDefault() when handling non-passive events (passive events don't need it)\n\n    if (!CompatibilityHelper.isTouchEvent(event) || !detectPassiveEvents.hasSupport) {\n      event.preventDefault();\n    } // We have to do this in case the HTML where the sliders are on\n    // have been animated into view.\n\n\n    this.calculateViewDimensions();\n\n    if (ValueHelper.isNullOrUndefined(pointerType)) {\n      pointerType = this.getNearestHandle(event);\n    }\n\n    this.currentTrackingPointer = pointerType;\n    const\n    /** @type {?} */\n    pointerElement = this.getPointerElement(pointerType);\n    pointerElement.active = true;\n\n    if (this.viewOptions.keyboardSupport) {\n      pointerElement.focus();\n    }\n\n    if (bindMove) {\n      this.unsubscribeOnMove();\n\n      const\n      /** @type {?} */\n      onMoveCallback = e => this.dragging.active ? this.onDragMove(e) : this.onMove(e);\n\n      if (CompatibilityHelper.isTouchEvent(event)) {\n        this.onMoveEventListener = this.eventListenerHelper.attachPassiveEventListener(document, 'touchmove', onMoveCallback, this.viewOptions.touchEventsInterval);\n      } else {\n        this.onMoveEventListener = this.eventListenerHelper.attachEventListener(document, 'mousemove', onMoveCallback, this.viewOptions.mouseEventsInterval);\n      }\n    }\n\n    if (bindEnd) {\n      this.unsubscribeOnEnd();\n\n      const\n      /** @type {?} */\n      onEndCallback = e => this.onEnd(e);\n\n      if (CompatibilityHelper.isTouchEvent(event)) {\n        this.onEndEventListener = this.eventListenerHelper.attachPassiveEventListener(document, 'touchend', onEndCallback);\n      } else {\n        this.onEndEventListener = this.eventListenerHelper.attachEventListener(document, 'mouseup', onEndCallback);\n      }\n    }\n\n    this.userChangeStart.emit(this.getChangeContext());\n\n    if (CompatibilityHelper.isTouchEvent(event) && !ValueHelper.isNullOrUndefined(\n    /** @type {?} */\n    event.changedTouches)) {\n      // Store the touch identifier\n      if (ValueHelper.isNullOrUndefined(this.touchId)) {\n        this.touchId =\n        /** @type {?} */\n        event.changedTouches[0].identifier;\n      }\n    } // Click events, either with mouse or touch gesture are weird. Sometimes they result in full\n    // start, move, end sequence, and sometimes, they don't - they only invoke mousedown\n    // As a workaround, we simulate the first move event and the end event if it's necessary\n\n\n    if (simulateImmediateMove) {\n      this.onMove(event, true);\n    }\n\n    if (simulateImmediateEnd) {\n      this.onEnd(event);\n    }\n  }\n  /**\n   * @param {?} event\n   * @param {?=} fromTick\n   * @return {?}\n   */\n\n\n  onMove(event, fromTick) {\n    let\n    /** @type {?} */\n    touchForThisSlider = null;\n\n    if (CompatibilityHelper.isTouchEvent(event)) {\n      const\n      /** @type {?} */\n      changedTouches =\n      /** @type {?} */\n      event.changedTouches;\n\n      for (let\n      /** @type {?} */\n      i = 0; i < changedTouches.length; i++) {\n        if (changedTouches[i].identifier === this.touchId) {\n          touchForThisSlider = changedTouches[i];\n          break;\n        }\n      }\n\n      if (ValueHelper.isNullOrUndefined(touchForThisSlider)) {\n        return;\n      }\n    }\n\n    const\n    /** @type {?} */\n    newPos = !ValueHelper.isNullOrUndefined(touchForThisSlider) ? this.getEventPosition(event, touchForThisSlider.identifier) : this.getEventPosition(event);\n    let\n    /** @type {?} */\n    newValue;\n    const\n    /** @type {?} */\n    ceilValue = this.viewOptions.rightToLeft ? this.viewOptions.floor : this.viewOptions.ceil;\n    const\n    /** @type {?} */\n    floorValue = this.viewOptions.rightToLeft ? this.viewOptions.ceil : this.viewOptions.floor;\n\n    if (newPos <= 0) {\n      newValue = floorValue;\n    } else if (newPos >= this.maxHandlePosition) {\n      newValue = ceilValue;\n    } else {\n      newValue = this.positionToValue(newPos);\n\n      if (fromTick && !ValueHelper.isNullOrUndefined(this.viewOptions.tickStep)) {\n        newValue = this.roundStep(newValue, this.viewOptions.tickStep);\n      } else {\n        newValue = this.roundStep(newValue);\n      }\n    }\n\n    this.positionTrackingHandle(newValue);\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  onEnd(event) {\n    if (CompatibilityHelper.isTouchEvent(event)) {\n      const\n      /** @type {?} */\n      changedTouches =\n      /** @type {?} */\n      event.changedTouches;\n\n      if (changedTouches[0].identifier !== this.touchId) {\n        return;\n      }\n    }\n\n    this.touchId = null;\n\n    if (!this.viewOptions.keyboardSupport) {\n      this.minHandleElement.active = false;\n      this.maxHandleElement.active = false;\n      this.currentTrackingPointer = null;\n    }\n\n    this.dragging.active = false;\n    this.unsubscribeOnMove();\n    this.unsubscribeOnEnd();\n    this.userChangeEnd.emit(this.getChangeContext());\n  }\n  /**\n   * @param {?} pointerType\n   * @return {?}\n   */\n\n\n  onPointerFocus(pointerType) {\n    const\n    /** @type {?} */\n    pointerElement = this.getPointerElement(pointerType);\n    pointerElement.on('blur', () => this.onPointerBlur(pointerElement));\n    pointerElement.on('keydown', event => this.onKeyboardEvent(event));\n    pointerElement.on('keyup', () => this.onKeyUp());\n    pointerElement.active = true;\n    this.currentTrackingPointer = pointerType;\n    this.currentFocusPointer = pointerType;\n    this.firstKeyDown = true;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  onKeyUp() {\n    this.firstKeyDown = true;\n    this.userChangeEnd.emit(this.getChangeContext());\n  }\n  /**\n   * @param {?} pointer\n   * @return {?}\n   */\n\n\n  onPointerBlur(pointer) {\n    pointer.off('blur');\n    pointer.off('keydown');\n    pointer.off('keyup');\n    pointer.active = false;\n\n    if (ValueHelper.isNullOrUndefined(this.touchId)) {\n      this.currentTrackingPointer = null;\n      this.currentFocusPointer = null;\n    }\n  }\n  /**\n   * @param {?} currentValue\n   * @return {?}\n   */\n\n\n  getKeyActions(currentValue) {\n    const\n    /** @type {?} */\n    valueRange = this.viewOptions.ceil - this.viewOptions.floor;\n    let\n    /** @type {?} */\n    increaseStep = currentValue + this.viewOptions.step;\n    let\n    /** @type {?} */\n    decreaseStep = currentValue - this.viewOptions.step;\n    let\n    /** @type {?} */\n    increasePage = currentValue + valueRange / 10;\n    let\n    /** @type {?} */\n    decreasePage = currentValue - valueRange / 10;\n\n    if (this.viewOptions.reversedControls) {\n      increaseStep = currentValue - this.viewOptions.step;\n      decreaseStep = currentValue + this.viewOptions.step;\n      increasePage = currentValue - valueRange / 10;\n      decreasePage = currentValue + valueRange / 10;\n    } // Left to right default actions\n\n\n    const\n    /** @type {?} */\n    actions = {\n      UP: increaseStep,\n      DOWN: decreaseStep,\n      LEFT: decreaseStep,\n      RIGHT: increaseStep,\n      PAGEUP: increasePage,\n      PAGEDOWN: decreasePage,\n      HOME: this.viewOptions.reversedControls ? this.viewOptions.ceil : this.viewOptions.floor,\n      END: this.viewOptions.reversedControls ? this.viewOptions.floor : this.viewOptions.ceil\n    }; // right to left means swapping right and left arrows\n\n    if (this.viewOptions.rightToLeft) {\n      actions[\"LEFT\"] = increaseStep;\n      actions[\"RIGHT\"] = decreaseStep; // right to left and vertical means we also swap up and down\n\n      if (this.viewOptions.vertical) {\n        actions[\"UP\"] = decreaseStep;\n        actions[\"DOWN\"] = increaseStep;\n      }\n    }\n\n    return actions;\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  onKeyboardEvent(event) {\n    const\n    /** @type {?} */\n    currentValue = this.getCurrentTrackingValue();\n    const\n    /** @type {?} */\n    keyCode = !ValueHelper.isNullOrUndefined(event.keyCode) ? event.keyCode : event.which;\n    const\n    /** @type {?} */\n    keys = {\n      38: 'UP',\n      40: 'DOWN',\n      37: 'LEFT',\n      39: 'RIGHT',\n      33: 'PAGEUP',\n      34: 'PAGEDOWN',\n      36: 'HOME',\n      35: 'END'\n    };\n    const\n    /** @type {?} */\n    actions = this.getKeyActions(currentValue);\n    const\n    /** @type {?} */\n    key = keys[keyCode];\n    const\n    /** @type {?} */\n    action = actions[key];\n\n    if (ValueHelper.isNullOrUndefined(action) || ValueHelper.isNullOrUndefined(this.currentTrackingPointer)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (this.firstKeyDown) {\n      this.firstKeyDown = false;\n      this.userChangeStart.emit(this.getChangeContext());\n    }\n\n    const\n    /** @type {?} */\n    actionValue = MathHelper.clampToRange(action, this.viewOptions.floor, this.viewOptions.ceil);\n    const\n    /** @type {?} */\n    newValue = this.roundStep(actionValue);\n\n    if (!this.viewOptions.draggableRangeOnly) {\n      this.positionTrackingHandle(newValue);\n    } else {\n      const\n      /** @type {?} */\n      difference = this.viewHighValue - this.viewLowValue;\n      let\n      /** @type {?} */\n      newMinValue;\n      let\n      /** @type {?} */\n      newMaxValue;\n\n      if (this.currentTrackingPointer === PointerType.Min) {\n        newMinValue = newValue;\n        newMaxValue = newValue + difference;\n\n        if (newMaxValue > this.viewOptions.ceil) {\n          newMaxValue = this.viewOptions.ceil;\n          newMinValue = newMaxValue - difference;\n        }\n      } else if (this.currentTrackingPointer === PointerType.Max) {\n        newMaxValue = newValue;\n        newMinValue = newValue - difference;\n\n        if (newMinValue < this.viewOptions.floor) {\n          newMinValue = this.viewOptions.floor;\n          newMaxValue = newMinValue + difference;\n        }\n      }\n\n      this.positionTrackingBar(newMinValue, newMaxValue);\n    }\n  }\n  /**\n   * @param {?} pointerType\n   * @param {?} event\n   * @param {?} bindMove\n   * @param {?} bindEnd\n   * @return {?}\n   */\n\n\n  onDragStart(pointerType, event, bindMove, bindEnd) {\n    const\n    /** @type {?} */\n    position = this.getEventPosition(event);\n    this.dragging = new Dragging();\n    this.dragging.active = true;\n    this.dragging.value = this.positionToValue(position);\n    this.dragging.difference = this.viewHighValue - this.viewLowValue;\n    this.dragging.lowLimit = this.viewOptions.rightToLeft ? this.minHandleElement.position - position : position - this.minHandleElement.position;\n    this.dragging.highLimit = this.viewOptions.rightToLeft ? position - this.maxHandleElement.position : this.maxHandleElement.position - position;\n    this.onStart(pointerType, event, bindMove, bindEnd);\n  }\n  /**\n   * Get min value depending on whether the newPos is outOfBounds above or below the bar and rightToLeft\n   * @param {?} newPos\n   * @param {?} outOfBounds\n   * @param {?} isAbove\n   * @return {?}\n   */\n\n\n  getMinValue(newPos, outOfBounds, isAbove) {\n    const\n    /** @type {?} */\n    isRTL = this.viewOptions.rightToLeft;\n    let\n    /** @type {?} */\n    value = null;\n\n    if (outOfBounds) {\n      if (isAbove) {\n        value = isRTL ? this.viewOptions.floor : this.viewOptions.ceil - this.dragging.difference;\n      } else {\n        value = isRTL ? this.viewOptions.ceil - this.dragging.difference : this.viewOptions.floor;\n      }\n    } else {\n      value = isRTL ? this.positionToValue(newPos + this.dragging.lowLimit) : this.positionToValue(newPos - this.dragging.lowLimit);\n    }\n\n    return this.roundStep(value);\n  }\n  /**\n   * Get max value depending on whether the newPos is outOfBounds above or below the bar and rightToLeft\n   * @param {?} newPos\n   * @param {?} outOfBounds\n   * @param {?} isAbove\n   * @return {?}\n   */\n\n\n  getMaxValue(newPos, outOfBounds, isAbove) {\n    const\n    /** @type {?} */\n    isRTL = this.viewOptions.rightToLeft;\n    let\n    /** @type {?} */\n    value = null;\n\n    if (outOfBounds) {\n      if (isAbove) {\n        value = isRTL ? this.viewOptions.floor + this.dragging.difference : this.viewOptions.ceil;\n      } else {\n        value = isRTL ? this.viewOptions.ceil : this.viewOptions.floor + this.dragging.difference;\n      }\n    } else {\n      if (isRTL) {\n        value = this.positionToValue(newPos + this.dragging.lowLimit) + this.dragging.difference;\n      } else {\n        value = this.positionToValue(newPos - this.dragging.lowLimit) + this.dragging.difference;\n      }\n    }\n\n    return this.roundStep(value);\n  }\n  /**\n   * @param {?=} event\n   * @return {?}\n   */\n\n\n  onDragMove(event) {\n    const\n    /** @type {?} */\n    newPos = this.getEventPosition(event);\n    let\n    /** @type {?} */\n    ceilLimit,\n    /** @type {?} */\n    floorLimit,\n    /** @type {?} */\n    floorHandleElement,\n    /** @type {?} */\n    ceilHandleElement;\n\n    if (this.viewOptions.rightToLeft) {\n      ceilLimit = this.dragging.lowLimit;\n      floorLimit = this.dragging.highLimit;\n      floorHandleElement = this.maxHandleElement;\n      ceilHandleElement = this.minHandleElement;\n    } else {\n      ceilLimit = this.dragging.highLimit;\n      floorLimit = this.dragging.lowLimit;\n      floorHandleElement = this.minHandleElement;\n      ceilHandleElement = this.maxHandleElement;\n    }\n\n    const\n    /** @type {?} */\n    isUnderFloorLimit = newPos <= floorLimit;\n    const\n    /** @type {?} */\n    isOverCeilLimit = newPos >= this.maxHandlePosition - ceilLimit;\n    let\n    /** @type {?} */\n    newMinValue;\n    let\n    /** @type {?} */\n    newMaxValue;\n\n    if (isUnderFloorLimit) {\n      if (floorHandleElement.position === 0) {\n        return;\n      }\n\n      newMinValue = this.getMinValue(newPos, true, false);\n      newMaxValue = this.getMaxValue(newPos, true, false);\n    } else if (isOverCeilLimit) {\n      if (ceilHandleElement.position === this.maxHandlePosition) {\n        return;\n      }\n\n      newMaxValue = this.getMaxValue(newPos, true, true);\n      newMinValue = this.getMinValue(newPos, true, true);\n    } else {\n      newMinValue = this.getMinValue(newPos, false, false);\n      newMaxValue = this.getMaxValue(newPos, false, false);\n    }\n\n    this.positionTrackingBar(newMinValue, newMaxValue);\n  }\n  /**\n   * @param {?} newMinValue\n   * @param {?} newMaxValue\n   * @return {?}\n   */\n\n\n  positionTrackingBar(newMinValue, newMaxValue) {\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.minLimit) && newMinValue < this.viewOptions.minLimit) {\n      newMinValue = this.viewOptions.minLimit;\n      newMaxValue = MathHelper.roundToPrecisionLimit(newMinValue + this.dragging.difference, this.viewOptions.precisionLimit);\n    }\n\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxLimit) && newMaxValue > this.viewOptions.maxLimit) {\n      newMaxValue = this.viewOptions.maxLimit;\n      newMinValue = MathHelper.roundToPrecisionLimit(newMaxValue - this.dragging.difference, this.viewOptions.precisionLimit);\n    }\n\n    this.viewLowValue = newMinValue;\n    this.viewHighValue = newMaxValue;\n    this.applyViewChange();\n    this.updateHandles(PointerType.Min, this.valueToPosition(newMinValue));\n    this.updateHandles(PointerType.Max, this.valueToPosition(newMaxValue));\n  }\n  /**\n   * @param {?} newValue\n   * @return {?}\n   */\n\n\n  positionTrackingHandle(newValue) {\n    newValue = this.applyMinMaxLimit(newValue);\n\n    if (this.range) {\n      if (this.viewOptions.pushRange) {\n        newValue = this.applyPushRange(newValue);\n      } else {\n        if (this.viewOptions.noSwitching) {\n          if (this.currentTrackingPointer === PointerType.Min && newValue > this.viewHighValue) {\n            newValue = this.applyMinMaxRange(this.viewHighValue);\n          } else if (this.currentTrackingPointer === PointerType.Max && newValue < this.viewLowValue) {\n            newValue = this.applyMinMaxRange(this.viewLowValue);\n          }\n        }\n\n        newValue = this.applyMinMaxRange(newValue);\n        /* This is to check if we need to switch the min and max handles */\n\n        if (this.currentTrackingPointer === PointerType.Min && newValue > this.viewHighValue) {\n          this.viewLowValue = this.viewHighValue;\n          this.applyViewChange();\n          this.updateHandles(PointerType.Min, this.maxHandleElement.position);\n          this.updateAriaAttributes();\n          this.currentTrackingPointer = PointerType.Max;\n          this.minHandleElement.active = false;\n          this.maxHandleElement.active = true;\n\n          if (this.viewOptions.keyboardSupport) {\n            this.maxHandleElement.focus();\n          }\n        } else if (this.currentTrackingPointer === PointerType.Max && newValue < this.viewLowValue) {\n          this.viewHighValue = this.viewLowValue;\n          this.applyViewChange();\n          this.updateHandles(PointerType.Max, this.minHandleElement.position);\n          this.updateAriaAttributes();\n          this.currentTrackingPointer = PointerType.Min;\n          this.maxHandleElement.active = false;\n          this.minHandleElement.active = true;\n\n          if (this.viewOptions.keyboardSupport) {\n            this.minHandleElement.focus();\n          }\n        }\n      }\n    }\n\n    if (this.getCurrentTrackingValue() !== newValue) {\n      if (this.currentTrackingPointer === PointerType.Min) {\n        this.viewLowValue = newValue;\n        this.applyViewChange();\n      } else if (this.currentTrackingPointer === PointerType.Max) {\n        this.viewHighValue = newValue;\n        this.applyViewChange();\n      }\n\n      this.updateHandles(this.currentTrackingPointer, this.valueToPosition(newValue));\n      this.updateAriaAttributes();\n    }\n  }\n  /**\n   * @param {?} newValue\n   * @return {?}\n   */\n\n\n  applyMinMaxLimit(newValue) {\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.minLimit) && newValue < this.viewOptions.minLimit) {\n      return this.viewOptions.minLimit;\n    }\n\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxLimit) && newValue > this.viewOptions.maxLimit) {\n      return this.viewOptions.maxLimit;\n    }\n\n    return newValue;\n  }\n  /**\n   * @param {?} newValue\n   * @return {?}\n   */\n\n\n  applyMinMaxRange(newValue) {\n    const\n    /** @type {?} */\n    oppositeValue = this.currentTrackingPointer === PointerType.Min ? this.viewHighValue : this.viewLowValue;\n    const\n    /** @type {?} */\n    difference = Math.abs(newValue - oppositeValue);\n\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.minRange)) {\n      if (difference < this.viewOptions.minRange) {\n        if (this.currentTrackingPointer === PointerType.Min) {\n          return MathHelper.roundToPrecisionLimit(this.viewHighValue - this.viewOptions.minRange, this.viewOptions.precisionLimit);\n        } else if (this.currentTrackingPointer === PointerType.Max) {\n          return MathHelper.roundToPrecisionLimit(this.viewLowValue + this.viewOptions.minRange, this.viewOptions.precisionLimit);\n        }\n      }\n    }\n\n    if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxRange)) {\n      if (difference > this.viewOptions.maxRange) {\n        if (this.currentTrackingPointer === PointerType.Min) {\n          return MathHelper.roundToPrecisionLimit(this.viewHighValue - this.viewOptions.maxRange, this.viewOptions.precisionLimit);\n        } else if (this.currentTrackingPointer === PointerType.Max) {\n          return MathHelper.roundToPrecisionLimit(this.viewLowValue + this.viewOptions.maxRange, this.viewOptions.precisionLimit);\n        }\n      }\n    }\n\n    return newValue;\n  }\n  /**\n   * @param {?} newValue\n   * @return {?}\n   */\n\n\n  applyPushRange(newValue) {\n    const\n    /** @type {?} */\n    difference = this.currentTrackingPointer === PointerType.Min ? this.viewHighValue - newValue : newValue - this.viewLowValue;\n    const\n    /** @type {?} */\n    minRange = !ValueHelper.isNullOrUndefined(this.viewOptions.minRange) ? this.viewOptions.minRange : this.viewOptions.step;\n    const\n    /** @type {?} */\n    maxRange = this.viewOptions.maxRange; // if smaller than minRange\n\n    if (difference < minRange) {\n      if (this.currentTrackingPointer === PointerType.Min) {\n        this.viewHighValue = MathHelper.roundToPrecisionLimit(Math.min(newValue + minRange, this.viewOptions.ceil), this.viewOptions.precisionLimit);\n        newValue = MathHelper.roundToPrecisionLimit(this.viewHighValue - minRange, this.viewOptions.precisionLimit);\n        this.applyViewChange();\n        this.updateHandles(PointerType.Max, this.valueToPosition(this.viewHighValue));\n      } else if (this.currentTrackingPointer === PointerType.Max) {\n        this.viewLowValue = MathHelper.roundToPrecisionLimit(Math.max(newValue - minRange, this.viewOptions.floor), this.viewOptions.precisionLimit);\n        newValue = MathHelper.roundToPrecisionLimit(this.viewLowValue + minRange, this.viewOptions.precisionLimit);\n        this.applyViewChange();\n        this.updateHandles(PointerType.Min, this.valueToPosition(this.viewLowValue));\n      }\n\n      this.updateAriaAttributes();\n    } else if (!ValueHelper.isNullOrUndefined(maxRange) && difference > maxRange) {\n      // if greater than maxRange\n      if (this.currentTrackingPointer === PointerType.Min) {\n        this.viewHighValue = MathHelper.roundToPrecisionLimit(newValue + maxRange, this.viewOptions.precisionLimit);\n        this.applyViewChange();\n        this.updateHandles(PointerType.Max, this.valueToPosition(this.viewHighValue));\n      } else if (this.currentTrackingPointer === PointerType.Max) {\n        this.viewLowValue = MathHelper.roundToPrecisionLimit(newValue - maxRange, this.viewOptions.precisionLimit);\n        this.applyViewChange();\n        this.updateHandles(PointerType.Min, this.valueToPosition(this.viewLowValue));\n      }\n\n      this.updateAriaAttributes();\n    }\n\n    return newValue;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  getChangeContext() {\n    const\n    /** @type {?} */\n    changeContext = new ChangeContext();\n    changeContext.pointerType = this.currentTrackingPointer;\n    changeContext.value = +this.value;\n\n    if (this.range) {\n      changeContext.highValue = +this.highValue;\n    }\n\n    return changeContext;\n  }\n\n}\n\nSliderComponent.ɵfac = function SliderComponent_Factory(t) {\n  return new (t || SliderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nSliderComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: SliderComponent,\n  selectors: [[\"ng5-slider\"]],\n  contentQueries: function SliderComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, _c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    }\n  },\n  viewQuery: function SliderComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c1, 5, SliderElementDirective);\n      ɵngcc0.ɵɵviewQuery(_c2, 5, SliderElementDirective);\n      ɵngcc0.ɵɵviewQuery(_c3, 5, SliderElementDirective);\n      ɵngcc0.ɵɵviewQuery(_c4, 5, SliderElementDirective);\n      ɵngcc0.ɵɵviewQuery(_c5, 5, SliderHandleDirective);\n      ɵngcc0.ɵɵviewQuery(_c6, 5, SliderHandleDirective);\n      ɵngcc0.ɵɵviewQuery(_c7, 5, SliderLabelDirective);\n      ɵngcc0.ɵɵviewQuery(_c8, 5, SliderLabelDirective);\n      ɵngcc0.ɵɵviewQuery(_c9, 5, SliderLabelDirective);\n      ɵngcc0.ɵɵviewQuery(_c10, 5, SliderLabelDirective);\n      ɵngcc0.ɵɵviewQuery(_c11, 5, SliderLabelDirective);\n      ɵngcc0.ɵɵviewQuery(_c12, 5, SliderElementDirective);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.leftOuterSelectionBarElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.rightOuterSelectionBarElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fullBarElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.selectionBarElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.minHandleElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.maxHandleElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.floorLabelElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ceilLabelElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.minHandleLabelElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.maxHandleLabelElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.combinedLabelElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ticksElement = _t.first);\n    }\n  },\n  hostAttrs: [1, \"ng5-slider\"],\n  hostVars: 5,\n  hostBindings: function SliderComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"resize\", function SliderComponent_resize_HostBindingHandler($event) {\n        return ctx.onResize($event);\n      }, false, ɵngcc0.ɵɵresolveWindow);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"disabled\", ctx.sliderElementDisabledAttr);\n      ɵngcc0.ɵɵclassProp(\"vertical\", ctx.sliderElementVerticalClass)(\"animate\", ctx.sliderElementAnimateClass);\n    }\n  },\n  inputs: {\n    value: \"value\",\n    highValue: \"highValue\",\n    options: \"options\",\n    manualRefresh: \"manualRefresh\",\n    triggerFocus: \"triggerFocus\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    highValueChange: \"highValueChange\",\n    userChangeStart: \"userChangeStart\",\n    userChange: \"userChange\",\n    userChangeEnd: \"userChangeEnd\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([NG5_SLIDER_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 29,\n  vars: 13,\n  consts: [[\"ng5SliderElement\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bar-wrapper\", \"ng5-slider-left-out-selection\"], [\"leftOuterSelectionBar\", \"\"], [1, \"ng5-slider-span\", \"ng5-slider-bar\"], [\"ng5SliderElement\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bar-wrapper\", \"ng5-slider-right-out-selection\"], [\"rightOuterSelectionBar\", \"\"], [\"ng5SliderElement\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bar-wrapper\", \"ng5-slider-full-bar\"], [\"fullBar\", \"\"], [\"ng5SliderElement\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bar-wrapper\", \"ng5-slider-selection-bar\"], [\"selectionBar\", \"\"], [1, \"ng5-slider-span\", \"ng5-slider-bar\", \"ng5-slider-selection\", 3, \"ngStyle\"], [\"ng5SliderHandle\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-pointer\", \"ng5-slider-pointer-min\", 3, \"ngStyle\"], [\"minHandle\", \"\"], [\"ng5SliderHandle\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-pointer\", \"ng5-slider-pointer-max\", 3, \"ngStyle\"], [\"maxHandle\", \"\"], [\"ng5SliderLabel\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bubble\", \"ng5-slider-limit\", \"ng5-slider-floor\"], [\"floorLabel\", \"\"], [\"ng5SliderLabel\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bubble\", \"ng5-slider-limit\", \"ng5-slider-ceil\"], [\"ceilLabel\", \"\"], [\"ng5SliderLabel\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bubble\", \"ng5-slider-model-value\"], [\"minHandleLabel\", \"\"], [\"ng5SliderLabel\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bubble\", \"ng5-slider-model-high\"], [\"maxHandleLabel\", \"\"], [\"ng5SliderLabel\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bubble\", \"ng5-slider-combined\"], [\"combinedLabel\", \"\"], [\"ng5SliderElement\", \"\", 1, \"ng5-slider-ticks\", 3, \"hidden\"], [\"ticksElement\", \"\"], [\"class\", \"ng5-slider-tick\", 3, \"ngClass\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [1, \"ng5-slider-tick\", 3, \"ngClass\", \"ngStyle\"], [3, \"template\", \"tooltip\", \"placement\"], [\"class\", \"ng5-slider-span ng5-slider-tick-value\", 3, \"template\", \"tooltip\", \"placement\", \"content\", 4, \"ngIf\"], [\"class\", \"ng5-slider-span ng5-slider-tick-legend\", 3, \"innerHTML\", 4, \"ngIf\"], [1, \"ng5-slider-span\", \"ng5-slider-tick-value\", 3, \"template\", \"tooltip\", \"placement\", \"content\"], [1, \"ng5-slider-span\", \"ng5-slider-tick-legend\", 3, \"innerHTML\"]],\n  template: function SliderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0, 1);\n      ɵngcc0.ɵɵelement(2, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(3, \"span\", 3, 4);\n      ɵngcc0.ɵɵelement(5, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(6, \"span\", 5, 6);\n      ɵngcc0.ɵɵelement(8, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(9, \"span\", 7, 8);\n      ɵngcc0.ɵɵelement(11, \"span\", 9);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(12, \"span\", 10, 11)(14, \"span\", 12, 13)(16, \"span\", 14, 15)(18, \"span\", 16, 17)(20, \"span\", 18, 19)(22, \"span\", 20, 21)(24, \"span\", 22, 23);\n      ɵngcc0.ɵɵelementStart(26, \"span\", 24, 25);\n      ɵngcc0.ɵɵtemplate(28, SliderComponent_span_28_Template, 4, 9, \"span\", 26);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(6);\n      ɵngcc0.ɵɵclassProp(\"ng5-slider-transparent\", ctx.fullBarTransparentClass);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵclassProp(\"ng5-slider-draggable\", ctx.selectionBarDraggableClass);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.barStyle);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.minPointerStyle);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵstyleProp(\"display\", ctx.range ? \"inherit\" : \"none\");\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.maxPointerStyle);\n      ɵngcc0.ɵɵadvance(12);\n      ɵngcc0.ɵɵclassProp(\"ng5-slider-ticks-values-under\", ctx.ticksUnderValuesClass);\n      ɵngcc0.ɵɵproperty(\"hidden\", !ctx.showTicks);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n    }\n  },\n  dependencies: function () {\n    return [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgStyle, SliderElementDirective, SliderHandleDirective, SliderLabelDirective, TooltipWrapperComponent];\n  },\n  styles: [\".ng5-slider{display:inline-block;position:relative;height:4px;width:100%;margin:35px 0 15px;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y}  .ng5-slider.with-legend{margin-bottom:40px}  .ng5-slider[disabled]{cursor:not-allowed}  .ng5-slider[disabled] .ng5-slider-pointer{cursor:not-allowed;background-color:#d8e0f3}  .ng5-slider[disabled] .ng5-slider-draggable{cursor:not-allowed}  .ng5-slider[disabled] .ng5-slider-selection{background:#8b91a2}  .ng5-slider[disabled] .ng5-slider-tick{cursor:not-allowed}  .ng5-slider[disabled] .ng5-slider-tick.ng5-slider-selected{background:#8b91a2}  .ng5-slider .ng5-slider-span{white-space:nowrap;position:absolute;display:inline-block}  .ng5-slider .ng5-slider-base{width:100%;height:100%;padding:0}  .ng5-slider .ng5-slider-bar-wrapper{left:0;-webkit-box-sizing:border-box;box-sizing:border-box;margin-top:-16px;padding-top:16px;width:100%;height:32px;z-index:1}  .ng5-slider .ng5-slider-draggable{cursor:move}  .ng5-slider .ng5-slider-bar{left:0;width:100%;height:4px;z-index:1;background:#d8e0f3;border-radius:2px}  .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-transparent .ng5-slider-bar{background:0 0}  .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-left-out-selection .ng5-slider-bar{background:#df002d}  .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-right-out-selection .ng5-slider-bar{background:#03a688}  .ng5-slider .ng5-slider-selection{z-index:2;background:#0db9f0;border-radius:2px}  .ng5-slider .ng5-slider-pointer{cursor:pointer;width:32px;height:32px;top:-14px;background-color:#0db9f0;z-index:3;border-radius:16px}  .ng5-slider .ng5-slider-pointer:after{content:'';width:8px;height:8px;position:absolute;top:12px;left:12px;border-radius:4px;background:#fff}  .ng5-slider .ng5-slider-pointer:hover:after{background-color:#fff}  .ng5-slider .ng5-slider-pointer.ng5-slider-active{z-index:4}  .ng5-slider .ng5-slider-pointer.ng5-slider-active:after{background-color:#451aff}  .ng5-slider .ng5-slider-bubble{cursor:default;bottom:16px;padding:1px 3px;color:#55637d;font-size:16px}  .ng5-slider .ng5-slider-bubble.ng5-slider-limit{color:#55637d}  .ng5-slider .ng5-slider-ticks{-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;height:0;position:absolute;left:0;top:-3px;margin:0;z-index:1;list-style:none}  .ng5-slider .ng5-slider-ticks-values-under .ng5-slider-tick-value{top:auto;bottom:-36px}  .ng5-slider .ng5-slider-tick{text-align:center;cursor:pointer;width:10px;height:10px;background:#d8e0f3;border-radius:50%;position:absolute;top:0;left:0;margin-left:11px}  .ng5-slider .ng5-slider-tick.ng5-slider-selected{background:#0db9f0}  .ng5-slider .ng5-slider-tick-value{position:absolute;top:-34px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0)}  .ng5-slider .ng5-slider-tick-legend{position:absolute;top:24px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);max-width:50px;white-space:normal}  .ng5-slider.vertical{position:relative;width:4px;height:100%;margin:0 20px;padding:0;vertical-align:baseline;-ms-touch-action:pan-x;touch-action:pan-x}  .ng5-slider.vertical .ng5-slider-base{width:100%;height:100%;padding:0}  .ng5-slider.vertical .ng5-slider-bar-wrapper{top:auto;left:0;margin:0 0 0 -16px;padding:0 0 0 16px;height:100%;width:32px}  .ng5-slider.vertical .ng5-slider-bar{bottom:0;left:auto;width:4px;height:100%}  .ng5-slider.vertical .ng5-slider-pointer{left:-14px!important;top:auto;bottom:0}  .ng5-slider.vertical .ng5-slider-bubble{left:16px!important;bottom:0}  .ng5-slider.vertical .ng5-slider-ticks{height:100%;width:0;left:-3px;top:0;z-index:1}  .ng5-slider.vertical .ng5-slider-tick{vertical-align:middle;margin-left:auto;margin-top:11px}  .ng5-slider.vertical .ng5-slider-tick-value{left:24px;top:auto;-webkit-transform:translate(0,-28%);transform:translate(0,-28%)}  .ng5-slider.vertical .ng5-slider-tick-legend{top:auto;right:24px;-webkit-transform:translate(0,-28%);transform:translate(0,-28%);max-width:none;white-space:nowrap}  .ng5-slider.vertical .ng5-slider-ticks-values-under .ng5-slider-tick-value{bottom:auto;left:auto;right:24px}  .ng5-slider *{-webkit-transition:none;transition:none}  .ng5-slider.animate .ng5-slider-bar-wrapper{-webkit-transition:all linear .3s;transition:all linear .3s}  .ng5-slider.animate .ng5-slider-selection{-webkit-transition:background-color linear .3s;transition:background-color linear .3s}  .ng5-slider.animate .ng5-slider-pointer{-webkit-transition:all linear .3s;transition:all linear .3s}  .ng5-slider.animate .ng5-slider-bubble{-webkit-transition:all linear .3s;transition:all linear .3s}  .ng5-slider.animate .ng5-slider-bubble.ng5-slider-limit{-webkit-transition:opacity linear .3s;transition:opacity linear .3s}  .ng5-slider.animate .ng5-slider-bubble.ng5-slider-combined{-webkit-transition:opacity linear .3s;transition:opacity linear .3s}  .ng5-slider.animate .ng5-slider-tick{-webkit-transition:background-color linear .3s;transition:background-color linear .3s}\"]\n});\n/** @nocollapse */\n\nSliderComponent.ctorParameters = () => [{\n  type: Renderer2\n}, {\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: NgZone\n}];\n\nSliderComponent.propDecorators = {\n  \"value\": [{\n    type: Input\n  }],\n  \"valueChange\": [{\n    type: Output\n  }],\n  \"highValue\": [{\n    type: Input\n  }],\n  \"highValueChange\": [{\n    type: Output\n  }],\n  \"options\": [{\n    type: Input\n  }],\n  \"userChangeStart\": [{\n    type: Output\n  }],\n  \"userChange\": [{\n    type: Output\n  }],\n  \"userChangeEnd\": [{\n    type: Output\n  }],\n  \"manualRefresh\": [{\n    type: Input\n  }],\n  \"triggerFocus\": [{\n    type: Input\n  }],\n  \"leftOuterSelectionBarElement\": [{\n    type: ViewChild,\n    args: ['leftOuterSelectionBar', {\n      read: SliderElementDirective\n    }]\n  }],\n  \"rightOuterSelectionBarElement\": [{\n    type: ViewChild,\n    args: ['rightOuterSelectionBar', {\n      read: SliderElementDirective\n    }]\n  }],\n  \"fullBarElement\": [{\n    type: ViewChild,\n    args: ['fullBar', {\n      read: SliderElementDirective\n    }]\n  }],\n  \"selectionBarElement\": [{\n    type: ViewChild,\n    args: ['selectionBar', {\n      read: SliderElementDirective\n    }]\n  }],\n  \"minHandleElement\": [{\n    type: ViewChild,\n    args: ['minHandle', {\n      read: SliderHandleDirective\n    }]\n  }],\n  \"maxHandleElement\": [{\n    type: ViewChild,\n    args: ['maxHandle', {\n      read: SliderHandleDirective\n    }]\n  }],\n  \"floorLabelElement\": [{\n    type: ViewChild,\n    args: ['floorLabel', {\n      read: SliderLabelDirective\n    }]\n  }],\n  \"ceilLabelElement\": [{\n    type: ViewChild,\n    args: ['ceilLabel', {\n      read: SliderLabelDirective\n    }]\n  }],\n  \"minHandleLabelElement\": [{\n    type: ViewChild,\n    args: ['minHandleLabel', {\n      read: SliderLabelDirective\n    }]\n  }],\n  \"maxHandleLabelElement\": [{\n    type: ViewChild,\n    args: ['maxHandleLabel', {\n      read: SliderLabelDirective\n    }]\n  }],\n  \"combinedLabelElement\": [{\n    type: ViewChild,\n    args: ['combinedLabel', {\n      read: SliderLabelDirective\n    }]\n  }],\n  \"ticksElement\": [{\n    type: ViewChild,\n    args: ['ticksElement', {\n      read: SliderElementDirective\n    }]\n  }],\n  \"tooltipTemplate\": [{\n    type: ContentChild,\n    args: ['tooltipTemplate']\n  }],\n  \"sliderElementVerticalClass\": [{\n    type: HostBinding,\n    args: ['class.vertical']\n  }],\n  \"sliderElementAnimateClass\": [{\n    type: HostBinding,\n    args: ['class.animate']\n  }],\n  \"sliderElementDisabledAttr\": [{\n    type: HostBinding,\n    args: ['attr.disabled']\n  }],\n  \"onResize\": [{\n    type: HostListener,\n    args: ['window:resize', ['$event']]\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng5-slider',\n      template: `<!-- // 0 Left selection bar outside two handles -->\n<span ng5SliderElement #leftOuterSelectionBar class=\"ng5-slider-span ng5-slider-bar-wrapper ng5-slider-left-out-selection\">\n  <span class=\"ng5-slider-span ng5-slider-bar\"></span>\n</span>\n<!-- // 1 Right selection bar outside two handles -->\n<span ng5SliderElement #rightOuterSelectionBar class=\"ng5-slider-span ng5-slider-bar-wrapper ng5-slider-right-out-selection\">\n  <span class=\"ng5-slider-span ng5-slider-bar\"></span>\n</span>\n<!-- // 2 The whole slider bar -->\n<span ng5SliderElement #fullBar [class.ng5-slider-transparent]=\"fullBarTransparentClass\" class=\"ng5-slider-span ng5-slider-bar-wrapper ng5-slider-full-bar\">\n  <span class=\"ng5-slider-span ng5-slider-bar\"></span>\n</span>\n<!-- // 3 Selection bar between two handles -->\n<span ng5SliderElement #selectionBar [class.ng5-slider-draggable]=\"selectionBarDraggableClass\" class=\"ng5-slider-span ng5-slider-bar-wrapper ng5-slider-selection-bar\">\n  <span class=\"ng5-slider-span ng5-slider-bar ng5-slider-selection\" [ngStyle]=\"barStyle\"></span>\n</span>\n<!-- // 4 Low slider handle -->\n<span ng5SliderHandle #minHandle class=\"ng5-slider-span ng5-slider-pointer ng5-slider-pointer-min\" [ngStyle]=minPointerStyle></span>\n<!-- // 5 High slider handle -->\n<span ng5SliderHandle #maxHandle [style.display]=\"range ? 'inherit' : 'none'\" class=\"ng5-slider-span ng5-slider-pointer ng5-slider-pointer-max\" [ngStyle]=maxPointerStyle></span>\n<!-- // 6 Floor label -->\n<span ng5SliderLabel #floorLabel class=\"ng5-slider-span ng5-slider-bubble ng5-slider-limit ng5-slider-floor\"></span>\n<!-- // 7 Ceiling label -->\n<span ng5SliderLabel #ceilLabel class=\"ng5-slider-span ng5-slider-bubble ng5-slider-limit ng5-slider-ceil\"></span>\n<!-- // 8 Label above the low slider handle -->\n<span ng5SliderLabel #minHandleLabel class=\"ng5-slider-span ng5-slider-bubble ng5-slider-model-value\"></span>\n<!-- // 9 Label above the high slider handle -->\n<span ng5SliderLabel #maxHandleLabel class=\"ng5-slider-span ng5-slider-bubble ng5-slider-model-high\"></span>\n<!-- // 10 Combined range label when the slider handles are close ex. 15 - 17 -->\n<span ng5SliderLabel #combinedLabel class=\"ng5-slider-span ng5-slider-bubble ng5-slider-combined\"></span>\n<!-- // 11 The ticks -->\n<span ng5SliderElement #ticksElement [hidden]=\"!showTicks\" [class.ng5-slider-ticks-values-under]=\"ticksUnderValuesClass\" class=\"ng5-slider-ticks\">\n  <span *ngFor=\"let t of ticks\" class=\"ng5-slider-tick\" [ngClass]=\"{'ng5-slider-selected': t.selected}\" [ngStyle]=\"t.style\">\n    <ng5-slider-tooltip-wrapper [template]=\"tooltipTemplate\" [tooltip]=\"t.tooltip\" [placement]=\"t.tooltipPlacement\"></ng5-slider-tooltip-wrapper>\n    <ng5-slider-tooltip-wrapper *ngIf=\"t.value != null\" class=\"ng5-slider-span ng5-slider-tick-value\"\n        [template]=\"tooltipTemplate\" [tooltip]=\"t.valueTooltip\" [placement]=\"t.valueTooltipPlacement\" [content]=\"t.value\"></ng5-slider-tooltip-wrapper>\n    <span *ngIf=\"t.legend != null\" class=\"ng5-slider-span ng5-slider-tick-legend\" [innerHTML]=\"t.legend\"></span>\n  </span>\n</span>`,\n      host: {\n        class: 'ng5-slider'\n      },\n      providers: [NG5_SLIDER_CONTROL_VALUE_ACCESSOR],\n      styles: [\"::ng-deep .ng5-slider{display:inline-block;position:relative;height:4px;width:100%;margin:35px 0 15px;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y}::ng-deep .ng5-slider.with-legend{margin-bottom:40px}::ng-deep .ng5-slider[disabled]{cursor:not-allowed}::ng-deep .ng5-slider[disabled] .ng5-slider-pointer{cursor:not-allowed;background-color:#d8e0f3}::ng-deep .ng5-slider[disabled] .ng5-slider-draggable{cursor:not-allowed}::ng-deep .ng5-slider[disabled] .ng5-slider-selection{background:#8b91a2}::ng-deep .ng5-slider[disabled] .ng5-slider-tick{cursor:not-allowed}::ng-deep .ng5-slider[disabled] .ng5-slider-tick.ng5-slider-selected{background:#8b91a2}::ng-deep .ng5-slider .ng5-slider-span{white-space:nowrap;position:absolute;display:inline-block}::ng-deep .ng5-slider .ng5-slider-base{width:100%;height:100%;padding:0}::ng-deep .ng5-slider .ng5-slider-bar-wrapper{left:0;-webkit-box-sizing:border-box;box-sizing:border-box;margin-top:-16px;padding-top:16px;width:100%;height:32px;z-index:1}::ng-deep .ng5-slider .ng5-slider-draggable{cursor:move}::ng-deep .ng5-slider .ng5-slider-bar{left:0;width:100%;height:4px;z-index:1;background:#d8e0f3;border-radius:2px}::ng-deep .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-transparent .ng5-slider-bar{background:0 0}::ng-deep .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-left-out-selection .ng5-slider-bar{background:#df002d}::ng-deep .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-right-out-selection .ng5-slider-bar{background:#03a688}::ng-deep .ng5-slider .ng5-slider-selection{z-index:2;background:#0db9f0;border-radius:2px}::ng-deep .ng5-slider .ng5-slider-pointer{cursor:pointer;width:32px;height:32px;top:-14px;background-color:#0db9f0;z-index:3;border-radius:16px}::ng-deep .ng5-slider .ng5-slider-pointer:after{content:'';width:8px;height:8px;position:absolute;top:12px;left:12px;border-radius:4px;background:#fff}::ng-deep .ng5-slider .ng5-slider-pointer:hover:after{background-color:#fff}::ng-deep .ng5-slider .ng5-slider-pointer.ng5-slider-active{z-index:4}::ng-deep .ng5-slider .ng5-slider-pointer.ng5-slider-active:after{background-color:#451aff}::ng-deep .ng5-slider .ng5-slider-bubble{cursor:default;bottom:16px;padding:1px 3px;color:#55637d;font-size:16px}::ng-deep .ng5-slider .ng5-slider-bubble.ng5-slider-limit{color:#55637d}::ng-deep .ng5-slider .ng5-slider-ticks{-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;height:0;position:absolute;left:0;top:-3px;margin:0;z-index:1;list-style:none}::ng-deep .ng5-slider .ng5-slider-ticks-values-under .ng5-slider-tick-value{top:auto;bottom:-36px}::ng-deep .ng5-slider .ng5-slider-tick{text-align:center;cursor:pointer;width:10px;height:10px;background:#d8e0f3;border-radius:50%;position:absolute;top:0;left:0;margin-left:11px}::ng-deep .ng5-slider .ng5-slider-tick.ng5-slider-selected{background:#0db9f0}::ng-deep .ng5-slider .ng5-slider-tick-value{position:absolute;top:-34px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0)}::ng-deep .ng5-slider .ng5-slider-tick-legend{position:absolute;top:24px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);max-width:50px;white-space:normal}::ng-deep .ng5-slider.vertical{position:relative;width:4px;height:100%;margin:0 20px;padding:0;vertical-align:baseline;-ms-touch-action:pan-x;touch-action:pan-x}::ng-deep .ng5-slider.vertical .ng5-slider-base{width:100%;height:100%;padding:0}::ng-deep .ng5-slider.vertical .ng5-slider-bar-wrapper{top:auto;left:0;margin:0 0 0 -16px;padding:0 0 0 16px;height:100%;width:32px}::ng-deep .ng5-slider.vertical .ng5-slider-bar{bottom:0;left:auto;width:4px;height:100%}::ng-deep .ng5-slider.vertical .ng5-slider-pointer{left:-14px!important;top:auto;bottom:0}::ng-deep .ng5-slider.vertical .ng5-slider-bubble{left:16px!important;bottom:0}::ng-deep .ng5-slider.vertical .ng5-slider-ticks{height:100%;width:0;left:-3px;top:0;z-index:1}::ng-deep .ng5-slider.vertical .ng5-slider-tick{vertical-align:middle;margin-left:auto;margin-top:11px}::ng-deep .ng5-slider.vertical .ng5-slider-tick-value{left:24px;top:auto;-webkit-transform:translate(0,-28%);transform:translate(0,-28%)}::ng-deep .ng5-slider.vertical .ng5-slider-tick-legend{top:auto;right:24px;-webkit-transform:translate(0,-28%);transform:translate(0,-28%);max-width:none;white-space:nowrap}::ng-deep .ng5-slider.vertical .ng5-slider-ticks-values-under .ng5-slider-tick-value{bottom:auto;left:auto;right:24px}::ng-deep .ng5-slider *{-webkit-transition:none;transition:none}::ng-deep .ng5-slider.animate .ng5-slider-bar-wrapper{-webkit-transition:all linear .3s;transition:all linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-selection{-webkit-transition:background-color linear .3s;transition:background-color linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-pointer{-webkit-transition:all linear .3s;transition:all linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-bubble{-webkit-transition:all linear .3s;transition:all linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-bubble.ng5-slider-limit{-webkit-transition:opacity linear .3s;transition:opacity linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-bubble.ng5-slider-combined{-webkit-transition:opacity linear .3s;transition:opacity linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-tick{-webkit-transition:background-color linear .3s;transition:background-color linear .3s}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    highValue: [{\n      type: Input\n    }],\n    highValueChange: [{\n      type: Output\n    }],\n    options: [{\n      type: Input\n    }],\n    userChangeStart: [{\n      type: Output\n    }],\n    userChange: [{\n      type: Output\n    }],\n    userChangeEnd: [{\n      type: Output\n    }],\n    sliderElementVerticalClass: [{\n      type: HostBinding,\n      args: ['class.vertical']\n    }],\n    sliderElementAnimateClass: [{\n      type: HostBinding,\n      args: ['class.animate']\n    }],\n    sliderElementDisabledAttr: [{\n      type: HostBinding,\n      args: ['attr.disabled']\n    }],\n    manualRefresh: [{\n      type: Input\n    }],\n    triggerFocus: [{\n      type: Input\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onResize: [{\n      type: HostListener,\n      args: ['window:resize', ['$event']]\n    }],\n    leftOuterSelectionBarElement: [{\n      type: ViewChild,\n      args: ['leftOuterSelectionBar', {\n        read: SliderElementDirective\n      }]\n    }],\n    rightOuterSelectionBarElement: [{\n      type: ViewChild,\n      args: ['rightOuterSelectionBar', {\n        read: SliderElementDirective\n      }]\n    }],\n    fullBarElement: [{\n      type: ViewChild,\n      args: ['fullBar', {\n        read: SliderElementDirective\n      }]\n    }],\n    selectionBarElement: [{\n      type: ViewChild,\n      args: ['selectionBar', {\n        read: SliderElementDirective\n      }]\n    }],\n    minHandleElement: [{\n      type: ViewChild,\n      args: ['minHandle', {\n        read: SliderHandleDirective\n      }]\n    }],\n    maxHandleElement: [{\n      type: ViewChild,\n      args: ['maxHandle', {\n        read: SliderHandleDirective\n      }]\n    }],\n    floorLabelElement: [{\n      type: ViewChild,\n      args: ['floorLabel', {\n        read: SliderLabelDirective\n      }]\n    }],\n    ceilLabelElement: [{\n      type: ViewChild,\n      args: ['ceilLabel', {\n        read: SliderLabelDirective\n      }]\n    }],\n    minHandleLabelElement: [{\n      type: ViewChild,\n      args: ['minHandleLabel', {\n        read: SliderLabelDirective\n      }]\n    }],\n    maxHandleLabelElement: [{\n      type: ViewChild,\n      args: ['maxHandleLabel', {\n        read: SliderLabelDirective\n      }]\n    }],\n    combinedLabelElement: [{\n      type: ViewChild,\n      args: ['combinedLabel', {\n        read: SliderLabelDirective\n      }]\n    }],\n    ticksElement: [{\n      type: ViewChild,\n      args: ['ticksElement', {\n        read: SliderElementDirective\n      }]\n    }],\n    tooltipTemplate: [{\n      type: ContentChild,\n      args: ['tooltipTemplate']\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nclass TooltipWrapperComponent {}\n\nTooltipWrapperComponent.ɵfac = function TooltipWrapperComponent_Factory(t) {\n  return new (t || TooltipWrapperComponent)();\n};\n\nTooltipWrapperComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: TooltipWrapperComponent,\n  selectors: [[\"ng5-slider-tooltip-wrapper\"]],\n  inputs: {\n    template: \"template\",\n    tooltip: \"tooltip\",\n    placement: \"placement\",\n    content: \"content\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"ng5-slider-inner-tooltip\"]],\n  template: function TooltipWrapperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, TooltipWrapperComponent_ng_container_0_Template, 2, 6, \"ng-container\", 0);\n      ɵngcc0.ɵɵtemplate(1, TooltipWrapperComponent_ng_container_1_Template, 3, 3, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.template);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.template);\n    }\n  },\n  dependencies: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  styles: [\".ng5-slider-inner-tooltip[_ngcontent-%COMP%]{height:100%}\"]\n});\n/** @nocollapse */\n\nTooltipWrapperComponent.ctorParameters = () => [];\n\nTooltipWrapperComponent.propDecorators = {\n  \"template\": [{\n    type: Input\n  }],\n  \"tooltip\": [{\n    type: Input\n  }],\n  \"placement\": [{\n    type: Input\n  }],\n  \"content\": [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TooltipWrapperComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng5-slider-tooltip-wrapper',\n      template: `<ng-container *ngIf=\"template\">\n  <ng-template *ngTemplateOutlet=\"template; context: {tooltip: tooltip, placement: placement, content: content}\"></ng-template>\n</ng-container>\n\n<ng-container *ngIf=\"!template\">\n  <div class=\"ng5-slider-inner-tooltip\" [attr.title]=\"tooltip\" [attr.data-tooltip-placement]=\"placement\">\n    {{content}}\n  </div>\n</ng-container>`,\n      styles: [\".ng5-slider-inner-tooltip{height:100%}\"]\n    }]\n  }], null, {\n    template: [{\n      type: Input\n    }],\n    tooltip: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    content: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Ng5Slider module\n *\n * The module exports the slider component\n */\n\n\nclass Ng5SliderModule {}\n\nNg5SliderModule.ɵfac = function Ng5SliderModule_Factory(t) {\n  return new (t || Ng5SliderModule)();\n};\n\nNg5SliderModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: Ng5SliderModule\n});\nNg5SliderModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n/** @nocollapse */\n\nNg5SliderModule.ctorParameters = () => [];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng5SliderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [SliderComponent, SliderElementDirective, SliderHandleDirective, SliderLabelDirective, TooltipWrapperComponent],\n      exports: [SliderComponent]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng5SliderModule, {\n    declarations: function () {\n      return [SliderComponent, SliderElementDirective, SliderHandleDirective, SliderLabelDirective, TooltipWrapperComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [SliderComponent];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Ng5SliderModule, ChangeContext, PointerType, LabelType, Options, SliderElementDirective as ɵb, SliderHandleDirective as ɵc, SliderLabelDirective as ɵd, SliderComponent as ɵa, TooltipWrapperComponent as ɵe };","map":{"version":3,"names":["Subject","Renderer2","Directive","ElementRef","HostBinding","ChangeDetectorRef","Component","ViewChild","HostListener","Input","EventEmitter","Output","ContentChild","forwardRef","NgZone","NgModule","throttleTime","tap","distinctUntilChanged","filter","detectPassiveEvents","NG_VALUE_ACCESSOR","CommonModule","ɵngcc0","ɵngcc1","_c0","_c1","_c2","_c3","_c4","_c5","_c6","_c7","_c8","_c9","_c10","_c11","_c12","SliderComponent_span_28_ng5_slider_tooltip_wrapper_2_Template","rf","ctx","ɵɵelement","t_r13","ɵɵnextContext","$implicit","ctx_r14","ɵɵproperty","tooltipTemplate","valueTooltip","valueTooltipPlacement","value","SliderComponent_span_28_span_3_Template","legend","ɵɵsanitizeHtml","_c13","a0","SliderComponent_span_28_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ctx_r12","ɵɵpureFunction1","selected","style","ɵɵadvance","tooltip","tooltipPlacement","TooltipWrapperComponent_ng_container_0_1_ng_template_0_Template","TooltipWrapperComponent_ng_container_0_1_Template","_c14","a1","a2","placement","content","TooltipWrapperComponent_ng_container_0_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","ctx_r0","template","ɵɵpureFunction3","TooltipWrapperComponent_ng_container_1_Template","ɵɵtext","ctx_r1","ɵɵattribute","ɵɵtextInterpolate1","PointerType","Min","Max","LabelType","Low","High","Floor","Ceil","TickValue","Options","constructor","floor","ceil","step","minRange","maxRange","pushRange","minLimit","maxLimit","translate","combineLabels","getLegend","stepsArray","bindIndexForStepsArray","draggableRange","draggableRangeOnly","showSelectionBar","showSelectionBarEnd","showSelectionBarFromValue","showOuterSelectionBars","hidePointerLabels","hideLimitLabels","autoHideLimitLabels","readOnly","disabled","mouseEventsInterval","touchEventsInterval","inputEventsInterval","outputEventsInterval","showTicks","showTicksValues","tickStep","tickValueStep","ticksArray","ticksTooltip","ticksValuesTooltip","vertical","getSelectionBarColor","getTickColor","getPointerColor","keyboardSupport","scale","enforceStep","enforceRange","noSwitching","onlyBindHandles","rightToLeft","reversedControls","boundPointerLabels","logScale","customValueToPosition","customPositionToValue","precisionLimit","selectionBarGradient","ariaLabel","ariaLabelledBy","ariaLabelHigh","ariaLabelledByHigh","handleDimension","barDimension","animate","ChangeContext","ValueHelper","isNullOrUndefined","undefined","linearValueToPosition","val","minVal","maxVal","range","logValueToPosition","Math","log","linearPositionToValue","percent","logPositionToValue","exp","findStepIndex","modelValue","differences","map","abs","minDifferenceIndex","index","length","CompatibilityHelper","isTouchEvent","event","window","TouchEvent","touches","isResizeObserverAvailable","ResizeObserver","MathHelper","roundToPrecisionLimit","toPrecision","clampToRange","min","max","EventListener","eventName","events","eventsSubscription","teardownCallback","EventListenerHelper","renderer","attachPassiveEventListener","nativeElement","callback","throttleInterval","hasSupport","attachEventListener","listener","observerCallback","next","addEventListener","passive","capture","removeEventListener","pipe","leading","trailing","subscribe","detachEventListener","eventListener","unsubscribe","complete","listen","SliderElementDirective","elemRef","changeDetectionRef","_position","_dimension","_alwaysHide","_vertical","_scale","opacity","visibility","left","bottom","height","width","eventListeners","eventListenerHelper","position","dimension","alwaysHide","setAlwaysHide","hide","show","isVisible","setVertical","setScale","setPosition","pos","isRefDestroyed","markForCheck","round","calculateDimension","getBoundingClientRect","top","right","setDimension","dim","on","debounceInterval","push","onPassive","off","listenersToKeep","listenersToRemove","ɵfac","SliderElementDirective_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","hostVars","hostBindings","SliderElementDirective_HostBindings","ɵɵstyleProp","ctorParameters","propDecorators","args","ngDevMode","ɵsetClassMetadata","selector","SliderHandleDirective","active","role","tabindex","ariaOrientation","ariaValueNow","ariaValueText","ariaValueMin","ariaValueMax","focus","SliderHandleDirective_Factory","SliderHandleDirective_HostBindings","ɵɵclassProp","features","ɵɵInheritDefinitionFeature","SliderLabelDirective","_value","setValue","recalculateDimension","innerHTML","SliderLabelDirective_Factory","Tick","Dragging","difference","lowLimit","highLimit","ModelValues","compare","x","y","highValue","ModelChange","forceChange","NG5_SLIDER_CONTROL_VALUE_ACCESSOR","provide","useExisting","SliderComponent","multi","elementRef","zone","valueChange","highValueChange","options","userChangeStart","userChange","userChangeEnd","initHasRun","inputModelChangeSubject","inputModelChangeSubscription","outputModelChangeSubject","outputModelChangeSubscription","viewLowValue","viewHighValue","viewOptions","handleHalfDimension","maxHandlePosition","currentTrackingPointer","currentFocusPointer","firstKeyDown","touchId","dragging","sliderElementVerticalClass","sliderElementAnimateClass","sliderElementDisabledAttr","barStyle","minPointerStyle","maxPointerStyle","fullBarTransparentClass","selectionBarDraggableClass","ticksUnderValuesClass","intermediateTicks","ticks","onMoveEventListener","onEndEventListener","resizeObserver","onTouchedCallback","onChangeCallback","manualRefresh","unsubscribeManualRefresh","manualRefreshSubscription","setTimeout","calculateViewDimensionsAndDetectChanges","triggerFocus","unsubscribeTriggerFocus","triggerFocusSubscription","pointerType","focusPointer","ngOnInit","Object","assign","updateDisabledState","updateVerticalState","ngAfterViewInit","applyOptions","subscribeInputModelChangeSubject","subscribeOutputModelChangeSubject","renormaliseModelValues","modelValueToViewValue","manageElementsStyle","calculateViewDimensions","addAccessibility","updateCeilLabel","updateFloorLabel","initHandles","manageEventsBindings","subscribeResizeObserver","detectChanges","ngOnChanges","changes","onChangeOptions","internalChange","ngOnDestroy","unbindEvents","unsubscribeResizeObserver","unsubscribeInputModelChangeSubject","unsubscribeOutputModelChangeSubject","writeValue","obj","Array","registerOnChange","registerOnTouched","setDisabledState","isDisabled","onResize","interval","modelChange","applyInputModelChange","publishOutputModelChange","observe","disconnect","unsubscribeOnMove","unsubscribeOnEnd","getPointerElement","minHandleElement","maxHandleElement","getCurrentTrackingValue","NaN","viewValueToModelValue","viewValue","getStepValue","sliderValue","applyViewChange","userEventInitiated","normalisedModelChange","normaliseModelValues","normalisationChange","updateLowHandle","valueToPosition","updateHighHandle","updateSelectionBar","updateTicksScale","updateAriaAttributes","updateCombinedLabel","emitOutputs","emit","getChangeContext","input","normalisedInput","roundStep","tempValue","previousModelValues","normalisedModelValues","previousInputEventsInterval","previousOutputEventsInterval","resetSlider","applyStepsArrayOptions","applyFloorCeilOptions","minValue","maxValue","Error","String","refocusPointerIfNeeded","onPointerFocus","element","updateScale","floorLabelElement","ceilLabelElement","hideLabelsForTicks","minHandleLabelElement","maxHandleLabelElement","combinedLabelElement","selectionBarElement","leftOuterSelectionBarElement","rightOuterSelectionBarElement","bindEvents","getAllSliderElements","fullBarElement","ticksElement","toString","handleWidth","getTicksArray","reverse","newTicks","translation","tick","isTickSelected","transform","getDisplayValue","i","center","updateHandles","which","newPos","getHandleLabelPos","labelType","labelDimension","nearHandlePos","endOfBarPos","backgroundColor","updateFloorAndCeilLabelsVisibility","floorLabelHidden","ceilLabelHidden","isMinLabelAtFloor","isLabelBelowFloorLabel","isMinLabelAtCeil","isLabelAboveCeilLabel","isMaxLabelAtCeil","isCombinedLabelAtFloor","isCombinedLabelAtCeil","hideCeil","hideFloor","label","floorPos","floorDim","ceilPos","ceilDim","isSelectionBarFromRight","positionForRange","centerPosition","isModelGreaterThanCenter","color","offset","reversed","direction","backgroundImage","from","to","backgroundPosition","backgroundSize","isLabelOverlap","lowDisplayValue","highDisplayValue","combinedLabelValue","customStep","steppedDifference","fn","positionToValue","getEventXY","targetTouchId","MouseEvent","clientY","clientX","touchIndex","identifier","getEventPosition","sliderElementBoundingRect","sliderPos","eventPos","getNearestHandle","distanceMin","distanceMax","onBarStart","onStart","bindMove","bindEnd","simulateImmediateMove","simulateImmediateEnd","onDragStart","stopPropagation","preventDefault","pointerElement","onMoveCallback","e","onDragMove","onMove","document","onEndCallback","onEnd","changedTouches","fromTick","touchForThisSlider","newValue","ceilValue","floorValue","positionTrackingHandle","onPointerBlur","onKeyboardEvent","onKeyUp","pointer","getKeyActions","currentValue","valueRange","increaseStep","decreaseStep","increasePage","decreasePage","actions","UP","DOWN","LEFT","RIGHT","PAGEUP","PAGEDOWN","HOME","END","keyCode","keys","key","action","actionValue","newMinValue","newMaxValue","positionTrackingBar","getMinValue","outOfBounds","isAbove","isRTL","getMaxValue","ceilLimit","floorLimit","floorHandleElement","ceilHandleElement","isUnderFloorLimit","isOverCeilLimit","applyMinMaxLimit","applyPushRange","applyMinMaxRange","oppositeValue","changeContext","SliderComponent_Factory","ɵcmp","ɵɵdefineComponent","contentQueries","SliderComponent_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","SliderComponent_Query","ɵɵviewQuery","hostAttrs","SliderComponent_HostBindings","ɵɵlistener","SliderComponent_resize_HostBindingHandler","$event","ɵɵresolveWindow","inputs","outputs","ɵɵProvidersFeature","ɵɵNgOnChangesFeature","decls","vars","consts","SliderComponent_Template","dependencies","NgClass","NgForOf","NgIf","NgStyle","TooltipWrapperComponent","styles","read","host","class","providers","TooltipWrapperComponent_Factory","TooltipWrapperComponent_Template","NgTemplateOutlet","Ng5SliderModule","Ng5SliderModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope","ɵb","ɵc","ɵd","ɵa","ɵe"],"sources":["C:/Users/ISHAGARW/Desktop/weather-app/node_modules/ng5-slider/__ivy_ngcc__/esm2015/ng5-slider.js"],"sourcesContent":["import { Subject } from 'rxjs';\nimport { Renderer2, Directive, ElementRef, HostBinding, ChangeDetectorRef, Component, ViewChild, HostListener, Input, EventEmitter, Output, ContentChild, forwardRef, NgZone, NgModule } from '@angular/core';\nimport { throttleTime, tap, distinctUntilChanged, filter } from 'rxjs/operators';\nimport detectPassiveEvents from 'detect-passive-events';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"tooltipTemplate\"];\nconst _c1 = [\"leftOuterSelectionBar\"];\nconst _c2 = [\"rightOuterSelectionBar\"];\nconst _c3 = [\"fullBar\"];\nconst _c4 = [\"selectionBar\"];\nconst _c5 = [\"minHandle\"];\nconst _c6 = [\"maxHandle\"];\nconst _c7 = [\"floorLabel\"];\nconst _c8 = [\"ceilLabel\"];\nconst _c9 = [\"minHandleLabel\"];\nconst _c10 = [\"maxHandleLabel\"];\nconst _c11 = [\"combinedLabel\"];\nconst _c12 = [\"ticksElement\"];\nfunction SliderComponent_span_28_ng5_slider_tooltip_wrapper_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ng5-slider-tooltip-wrapper\", 31);\n} if (rf & 2) {\n    const t_r13 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r14 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"template\", ctx_r14.tooltipTemplate)(\"tooltip\", t_r13.valueTooltip)(\"placement\", t_r13.valueTooltipPlacement)(\"content\", t_r13.value);\n} }\nfunction SliderComponent_span_28_span_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 32);\n} if (rf & 2) {\n    const t_r13 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"innerHTML\", t_r13.legend, ɵngcc0.ɵɵsanitizeHtml);\n} }\nconst _c13 = function (a0) { return { \"ng5-slider-selected\": a0 }; };\nfunction SliderComponent_span_28_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 27);\n    ɵngcc0.ɵɵelement(1, \"ng5-slider-tooltip-wrapper\", 28);\n    ɵngcc0.ɵɵtemplate(2, SliderComponent_span_28_ng5_slider_tooltip_wrapper_2_Template, 1, 4, \"ng5-slider-tooltip-wrapper\", 29);\n    ɵngcc0.ɵɵtemplate(3, SliderComponent_span_28_span_3_Template, 1, 1, \"span\", 30);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const t_r13 = ctx.$implicit;\n    const ctx_r12 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(7, _c13, t_r13.selected))(\"ngStyle\", t_r13.style);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"template\", ctx_r12.tooltipTemplate)(\"tooltip\", t_r13.tooltip)(\"placement\", t_r13.tooltipPlacement);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", t_r13.value != null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", t_r13.legend != null);\n} }\nfunction TooltipWrapperComponent_ng_container_0_1_ng_template_0_Template(rf, ctx) { }\nfunction TooltipWrapperComponent_ng_container_0_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TooltipWrapperComponent_ng_container_0_1_ng_template_0_Template, 0, 0, \"ng-template\");\n} }\nconst _c14 = function (a0, a1, a2) { return { tooltip: a0, placement: a1, content: a2 }; };\nfunction TooltipWrapperComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TooltipWrapperComponent_ng_container_0_1_Template, 1, 0, null, 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.template)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(2, _c14, ctx_r0.tooltip, ctx_r0.placement, ctx_r0.content));\n} }\nfunction TooltipWrapperComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"title\", ctx_r1.tooltip)(\"data-tooltip-placement\", ctx_r1.placement);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.content, \" \");\n} }\nconst PointerType = {\n    /** Low pointer */\n    Min: 0,\n    /** High pointer */\n    Max: 1,\n};\nPointerType[PointerType.Min] = \"Min\";\nPointerType[PointerType.Max] = \"Max\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nconst LabelType = {\n    /** Label above low pointer */\n    Low: 0,\n    /** Label above high pointer */\n    High: 1,\n    /** Label for minimum slider value */\n    Floor: 2,\n    /** Label for maximum slider value */\n    Ceil: 3,\n    /** Label below legend tick */\n    TickValue: 4,\n};\nLabelType[LabelType.Low] = \"Low\";\nLabelType[LabelType.High] = \"High\";\nLabelType[LabelType.Floor] = \"Floor\";\nLabelType[LabelType.Ceil] = \"Ceil\";\nLabelType[LabelType.TickValue] = \"TickValue\";\n/**\n * Custom step definition\n *\n * This can be used to specify custom values and legend values for slider ticks\n * @record\n */\n\n/**\n * Slider options\n */\nclass Options {\n    constructor() {\n        /**\n         * Minimum value for a slider.\n         * Not applicable when using stepsArray.\n         */\n        this.floor = 0;\n        /**\n         * Maximum value for a slider.\n         * Not applicable when using stepsArray.\n         */\n        this.ceil = null;\n        /**\n         * Step between each value.\n         * Not applicable when using stepsArray.\n         */\n        this.step = 1;\n        /**\n         * The minimum range authorized on the slider.\n         * Applies to range slider only.\n         * When using stepsArray, expressed as index into stepsArray.\n         */\n        this.minRange = null;\n        /**\n         * The maximum range authorized on the slider.\n         * Applies to range slider only.\n         * When using stepsArray, expressed as index into stepsArray.\n         */\n        this.maxRange = null;\n        /**\n         * Set to true to have a push behavior. When the min handle goes above the max,\n         * the max is moved as well (and vice-versa). The range between min and max is\n         * defined by the step option (defaults to 1) and can also be overriden by\n         * the minRange option. Applies to range slider only.\n         */\n        this.pushRange = false;\n        /**\n         * The minimum value authorized on the slider.\n         * When using stepsArray, expressed as index into stepsArray.\n         */\n        this.minLimit = null;\n        /**\n         * The maximum value authorized on the slider.\n         * When using stepsArray, expressed as index into stepsArray.\n         */\n        this.maxLimit = null;\n        /**\n         * Custom translate function. Use this if you want to translate values displayed\n         * on the slider.\n         */\n        this.translate = null;\n        /**\n         * Custom function for combining overlapping labels in range slider.\n         * It takes the min and max values (already translated with translate fuction)\n         * and should return how these two values should be combined.\n         * If not provided, the default function will join the two values with\n         * ' - ' as separator.\n         */\n        this.combineLabels = null;\n        /**\n         * Use to display legend under ticks (thus, it needs to be used along with\n         * showTicks or showTicksValues). The function will be called with each tick\n         * value and returned content will be displayed under the tick as a legend.\n         * If the returned value is null, then no legend is displayed under\n         * the corresponding tick.You can also directly provide the legend values\n         * in the stepsArray option.\n         */\n        this.getLegend = null;\n        /**\n         * If you want to display a slider with non linear/number steps.\n         * Just pass an array with each slider value and that's it; the floor, ceil and step settings\n         * of the slider will be computed automatically.\n         * By default, the value model and valueHigh model values will be the value of the selected item\n         * in the stepsArray.\n         * They can also be bound to the index of the selected item by setting the bindIndexForStepsArray\n         * option to true.\n         */\n        this.stepsArray = null;\n        /**\n         * Set to true to bind the index of the selected item to value model and valueHigh model.\n         */\n        this.bindIndexForStepsArray = false;\n        /**\n         * When set to true and using a range slider, the range can be dragged by the selection bar.\n         * Applies to range slider only.\n         */\n        this.draggableRange = false;\n        /**\n         * Same as draggableRange but the slider range can't be changed.\n         * Applies to range slider only.\n         */\n        this.draggableRangeOnly = false;\n        /**\n         * Set to true to always show the selection bar before the slider handle.\n         */\n        this.showSelectionBar = false;\n        /**\n         * Set to true to always show the selection bar after the slider handle.\n         */\n        this.showSelectionBarEnd = false;\n        /**\n         * Set a number to draw the selection bar between this value and the slider handle.\n         * When using stepsArray, expressed as index into stepsArray.\n         */\n        this.showSelectionBarFromValue = null;\n        /**\n         * Only for range slider. Set to true to visualize in different colour the areas\n         * on the left/right (top/bottom for vertical range slider) of selection bar between the handles.\n         */\n        this.showOuterSelectionBars = false;\n        /**\n         * Set to true to hide pointer labels\n         */\n        this.hidePointerLabels = false;\n        /**\n         * Set to true to hide min / max labels\n         */\n        this.hideLimitLabels = false;\n        /**\n         * Set to false to disable the auto-hiding behavior of the limit labels.\n         */\n        this.autoHideLimitLabels = true;\n        /**\n         * Set to true to make the slider read-only.\n         */\n        this.readOnly = false;\n        /**\n         * Set to true to disable the slider.\n         */\n        this.disabled = false;\n        /**\n         * Throttle interval for mouse events in milliseconds.\n         * This is provided to avoid a flood of events when moving the slider with mouse.\n         */\n        this.mouseEventsInterval = 50;\n        /**\n         * Throttle interval for touch events in milliseconds.\n         * This is provided to avoid a flood of events when moving the slider with touch gesture.\n         */\n        this.touchEventsInterval = 50;\n        /**\n         * Throttle interval for input changes (changes to bindings or reactive form inputs)\n         * This is provided to avoid a flood of events on frequent input binding changes affecting performance.\n         */\n        this.inputEventsInterval = 100;\n        /**\n         * Throttle interval for output changes (signalling changes to output bindings and user callbacks)\n         * This is provided to avoid a flood of outgoing events affecting Angular app performance.\n         */\n        this.outputEventsInterval = 100;\n        /**\n         * Set to true to display a tick for each step of the slider.\n         */\n        this.showTicks = false;\n        /**\n         * Set to true to display a tick and the step value for each step of the slider..\n         */\n        this.showTicksValues = false;\n        /* The step between each tick to display. If not set, the step value is used.\n            Not used when ticksArray is specified. */\n        this.tickStep = null;\n        /* The step between displaying each tick step value. */\n        this.tickValueStep = 1;\n        /**\n         * Use to display ticks at specific positions.\n         * The array contains the index of the ticks that should be displayed.\n         * For example, [0, 1, 5] will display a tick for the first, second and sixth values.\n         */\n        this.ticksArray = null;\n        /**\n         * Used to display a tooltip when a tick is hovered.\n         * Set to a function that returns the tooltip content for a given value.\n         */\n        this.ticksTooltip = null;\n        /**\n         * Same as ticksTooltip but for ticks values.\n         */\n        this.ticksValuesTooltip = null;\n        /**\n         * Set to true to display the slider vertically.\n         * The slider will take the full height of its parent.\n         * Changing this value at runtime is not currently supported.\n         */\n        this.vertical = false;\n        /**\n         * Function that returns the current color of the selection bar.\n         * If your color won't change, don't use this option but set it through CSS.\n         * If the returned color depends on a model value (either value or valueHigh),\n         * you should use the argument passed to the function.\n         * Indeed, when the function is called, there is no certainty that the model\n         * has already been updated.\n         */\n        this.getSelectionBarColor = null;\n        /**\n         * Function that returns the color of a tick. showTicks must be enabled.\n         */\n        this.getTickColor = null;\n        /**\n         * Function that returns the current color of a pointer.\n         * If your color won't change, don't use this option but set it through CSS.\n         * If the returned color depends on a model value (either value or valueHigh),\n         * you should use the argument passed to the function.\n         * Indeed, when the function is called, there is no certainty that the model has already been updated.\n         * To handle range slider pointers independently, you should evaluate pointerType within the given\n         * function where \"min\" stands for value model and \"max\" for valueHigh model values.\n         */\n        this.getPointerColor = null;\n        /**\n         * Handles are focusable (on click or with tab) and can be modified using the following keyboard controls:\n         * Left/bottom arrows: -1\n         * Right/top arrows: +1\n         * Page-down: -10%\n         * Page-up: +10%\n         * Home: minimum value\n         * End: maximum value\n         */\n        this.keyboardSupport = true;\n        /**\n         * If you display the slider in an element that uses transform: scale(0.5), set the scale value to 2\n         * so that the slider is rendered properly and the events are handled correctly.\n         */\n        this.scale = 1;\n        /**\n         * Set to true to force the value to be rounded to the step, even when modified from the outside.\n         * When set to false, if the model values are modified from outside the slider, they are not rounded\n         * and can be between two steps.\n         */\n        this.enforceStep = true;\n        /**\n         * Set to true to force the value to be normalised to allowed range (floor to ceil), even when modified from the outside.\n         * When set to false, if the model values are modified from outside the slider, and they are outside allowed range,\n         * the slider may be rendered incorrectly. However, setting this to false may be useful if you want to perform custom normalisation.\n         */\n        this.enforceRange = true;\n        /**\n         * Set to true to prevent to user from switching the min and max handles. Applies to range slider only.\n         */\n        this.noSwitching = false;\n        /**\n         * Set to true to only bind events on slider handles.\n         */\n        this.onlyBindHandles = false;\n        /**\n         * Set to true to show graphs right to left.\n         * If vertical is true it will be from top to bottom and left / right arrow functions reversed.\n         */\n        this.rightToLeft = false;\n        /**\n         * Set to true to reverse keyboard navigation:\n         * Right/top arrows: -1\n         * Left/bottom arrows: +1\n         * Page-up: -10%\n         * Page-down: +10%\n         * End: minimum value\n         * Home: maximum value\n         */\n        this.reversedControls = false;\n        /**\n         * Set to true to keep the slider labels inside the slider bounds.\n         */\n        this.boundPointerLabels = true;\n        /**\n         * Set to true to use a logarithmic scale to display the slider.\n         */\n        this.logScale = false;\n        /**\n         * Function that returns the position on the slider for a given value.\n         * The position must be a percentage between 0 and 1.\n         * The function should be monotonically increasing or decreasing; otherwise the slider may behave incorrectly.\n         */\n        this.customValueToPosition = null;\n        /**\n         * Function that returns the value for a given position on the slider.\n         * The position is a percentage between 0 and 1.\n         * The function should be monotonically increasing or decreasing; otherwise the slider may behave incorrectly.\n         */\n        this.customPositionToValue = null;\n        /**\n         * Precision limit for calculated values.\n         * Values used in calculations will be rounded to this number of significant digits\n         * to prevent accumulating small floating-point errors.\n         */\n        this.precisionLimit = 12;\n        /**\n         * Use to display the selection bar as a gradient.\n         * The given object must contain from and to properties which are colors.\n         */\n        this.selectionBarGradient = null;\n        /**\n         * Use to add a label directly to the slider for accessibility. Adds the aria-label attribute.\n         */\n        this.ariaLabel = null;\n        /**\n         * Use instead of ariaLabel to reference the id of an element which will be used to label the slider.\n         * Adds the aria-labelledby attribute.\n         */\n        this.ariaLabelledBy = null;\n        /**\n         * Use to add a label directly to the slider range for accessibility. Adds the aria-label attribute.\n         */\n        this.ariaLabelHigh = null;\n        /**\n         * Use instead of ariaLabelHigh to reference the id of an element which will be used to label the slider range.\n         * Adds the aria-labelledby attribute.\n         */\n        this.ariaLabelledByHigh = null;\n        /**\n         * Use to increase rendering performance. If the value is not provided, the slider calculates the with/height of the handle\n         */\n        this.handleDimension = null;\n        /**\n         * Use to increase rendering performance. If the value is not provided, the slider calculates the with/height of the bar\n         */\n        this.barDimension = null;\n        /**\n         * Enable/disable CSS animations\n         */\n        this.animate = true;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass ChangeContext {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n *  Collection of functions to handle conversions/lookups of values\n */\nclass ValueHelper {\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    static isNullOrUndefined(value) {\n        return value === undefined || value === null;\n    }\n    /**\n     * @param {?} val\n     * @param {?} minVal\n     * @param {?} maxVal\n     * @return {?}\n     */\n    static linearValueToPosition(val, minVal, maxVal) {\n        const /** @type {?} */ range = maxVal - minVal;\n        return (val - minVal) / range;\n    }\n    /**\n     * @param {?} val\n     * @param {?} minVal\n     * @param {?} maxVal\n     * @return {?}\n     */\n    static logValueToPosition(val, minVal, maxVal) {\n        val = Math.log(val);\n        minVal = Math.log(minVal);\n        maxVal = Math.log(maxVal);\n        const /** @type {?} */ range = maxVal - minVal;\n        return (val - minVal) / range;\n    }\n    /**\n     * @param {?} percent\n     * @param {?} minVal\n     * @param {?} maxVal\n     * @return {?}\n     */\n    static linearPositionToValue(percent, minVal, maxVal) {\n        return percent * (maxVal - minVal) + minVal;\n    }\n    /**\n     * @param {?} percent\n     * @param {?} minVal\n     * @param {?} maxVal\n     * @return {?}\n     */\n    static logPositionToValue(percent, minVal, maxVal) {\n        minVal = Math.log(minVal);\n        maxVal = Math.log(maxVal);\n        const /** @type {?} */ value = percent * (maxVal - minVal) + minVal;\n        return Math.exp(value);\n    }\n    /**\n     * @param {?} modelValue\n     * @param {?} stepsArray\n     * @return {?}\n     */\n    static findStepIndex(modelValue, stepsArray) {\n        const /** @type {?} */ differences = stepsArray.map((step) => Math.abs(modelValue - step.value));\n        let /** @type {?} */ minDifferenceIndex = 0;\n        for (let /** @type {?} */ index = 0; index < stepsArray.length; index++) {\n            if (differences[index] !== differences[minDifferenceIndex] && differences[index] < differences[minDifferenceIndex]) {\n                minDifferenceIndex = index;\n            }\n        }\n        return minDifferenceIndex;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Helper with compatibility functions to support different browsers\n */\nclass CompatibilityHelper {\n    /**\n     * Workaround for TouchEvent constructor sadly not being available on all browsers (e.g. Firefox, Safari)\n     * @param {?} event\n     * @return {?}\n     */\n    static isTouchEvent(event) {\n        if ((/** @type {?} */ (window)).TouchEvent !== undefined) {\n            return event instanceof TouchEvent;\n        }\n        return event.touches !== undefined;\n    }\n    /**\n     * Detect presence of ResizeObserver API\n     * @return {?}\n     */\n    static isResizeObserverAvailable() {\n        return (/** @type {?} */ (window)).ResizeObserver !== undefined;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Helper with mathematical functions\n */\nclass MathHelper {\n    /**\n     * @param {?} value\n     * @param {?} precisionLimit\n     * @return {?}\n     */\n    static roundToPrecisionLimit(value, precisionLimit) {\n        return +(value.toPrecision(precisionLimit));\n    }\n    /**\n     * @param {?} value\n     * @param {?} floor\n     * @param {?} ceil\n     * @return {?}\n     */\n    static clampToRange(value, floor, ceil) {\n        return Math.min(Math.max(value, floor), ceil);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass EventListener {\n    constructor() {\n        this.eventName = null;\n        this.events = null;\n        this.eventsSubscription = null;\n        this.teardownCallback = null;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Helper class to attach event listeners to DOM elements with debounce support using rxjs\n */\nclass EventListenerHelper {\n    /**\n     * @param {?} renderer\n     */\n    constructor(renderer) {\n        this.renderer = renderer;\n    }\n    /**\n     * @param {?} nativeElement\n     * @param {?} eventName\n     * @param {?} callback\n     * @param {?=} throttleInterval\n     * @return {?}\n     */\n    attachPassiveEventListener(nativeElement, eventName, callback, throttleInterval) {\n        // Only use passive event listeners if the browser supports it\n        if (detectPassiveEvents.hasSupport !== true) {\n            return this.attachEventListener(nativeElement, eventName, callback, throttleInterval);\n        }\n        // Angular doesn't support passive event handlers (yet), so we need to roll our own code using native functions\n        const /** @type {?} */ listener = new EventListener();\n        listener.eventName = eventName;\n        listener.events = new Subject();\n        const /** @type {?} */ observerCallback = (event) => {\n            listener.events.next(event);\n        };\n        nativeElement.addEventListener(eventName, observerCallback, { passive: true, capture: false });\n        listener.teardownCallback = () => {\n            nativeElement.removeEventListener(eventName, observerCallback, { passive: true, capture: false });\n        };\n        listener.eventsSubscription = listener.events\n            .pipe((!ValueHelper.isNullOrUndefined(throttleInterval))\n            ? throttleTime(throttleInterval, undefined, { leading: true, trailing: true })\n            : tap(() => { }) // no-op\n        )\n            .subscribe((event) => {\n            callback(event);\n        });\n        return listener;\n    }\n    /**\n     * @param {?} eventListener\n     * @return {?}\n     */\n    detachEventListener(eventListener) {\n        if (!ValueHelper.isNullOrUndefined(eventListener.eventsSubscription)) {\n            eventListener.eventsSubscription.unsubscribe();\n            eventListener.eventsSubscription = null;\n        }\n        if (!ValueHelper.isNullOrUndefined(eventListener.events)) {\n            eventListener.events.complete();\n            eventListener.events = null;\n        }\n        if (!ValueHelper.isNullOrUndefined(eventListener.teardownCallback)) {\n            eventListener.teardownCallback();\n            eventListener.teardownCallback = null;\n        }\n    }\n    /**\n     * @param {?} nativeElement\n     * @param {?} eventName\n     * @param {?} callback\n     * @param {?=} throttleInterval\n     * @return {?}\n     */\n    attachEventListener(nativeElement, eventName, callback, throttleInterval) {\n        const /** @type {?} */ listener = new EventListener();\n        listener.eventName = eventName;\n        listener.events = new Subject();\n        const /** @type {?} */ observerCallback = (event) => {\n            listener.events.next(event);\n        };\n        listener.teardownCallback = this.renderer.listen(nativeElement, eventName, observerCallback);\n        listener.eventsSubscription = listener.events\n            .pipe((!ValueHelper.isNullOrUndefined(throttleInterval))\n            ? throttleTime(throttleInterval, undefined, { leading: true, trailing: true })\n            : tap(() => { }) // no-op\n        )\n            .subscribe((event) => { callback(event); });\n        return listener;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass SliderElementDirective {\n    /**\n     * @param {?} elemRef\n     * @param {?} renderer\n     * @param {?} changeDetectionRef\n     */\n    constructor(elemRef, renderer, changeDetectionRef) {\n        this.elemRef = elemRef;\n        this.renderer = renderer;\n        this.changeDetectionRef = changeDetectionRef;\n        this._position = 0;\n        this._dimension = 0;\n        this._alwaysHide = false;\n        this._vertical = false;\n        this._scale = 1;\n        this.opacity = 1;\n        this.visibility = 'visible';\n        this.left = '';\n        this.bottom = '';\n        this.height = '';\n        this.width = '';\n        this.eventListeners = [];\n        this.eventListenerHelper = new EventListenerHelper(this.renderer);\n    }\n    /**\n     * @return {?}\n     */\n    get position() {\n        return this._position;\n    }\n    /**\n     * @return {?}\n     */\n    get dimension() {\n        return this._dimension;\n    }\n    /**\n     * @return {?}\n     */\n    get alwaysHide() {\n        return this._alwaysHide;\n    }\n    /**\n     * @return {?}\n     */\n    get vertical() {\n        return this._vertical;\n    }\n    /**\n     * @return {?}\n     */\n    get scale() {\n        return this._scale;\n    }\n    /**\n     * @param {?} hide\n     * @return {?}\n     */\n    setAlwaysHide(hide) {\n        this._alwaysHide = hide;\n        if (hide) {\n            this.visibility = 'hidden';\n        }\n        else {\n            this.visibility = 'visible';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    hide() {\n        this.opacity = 0;\n    }\n    /**\n     * @return {?}\n     */\n    show() {\n        if (this.alwaysHide) {\n            return;\n        }\n        this.opacity = 1;\n    }\n    /**\n     * @return {?}\n     */\n    isVisible() {\n        if (this.alwaysHide) {\n            return false;\n        }\n        return this.opacity !== 0;\n    }\n    /**\n     * @param {?} vertical\n     * @return {?}\n     */\n    setVertical(vertical) {\n        this._vertical = vertical;\n        if (this._vertical) {\n            this.left = '';\n            this.width = '';\n        }\n        else {\n            this.bottom = '';\n            this.height = '';\n        }\n    }\n    /**\n     * @param {?} scale\n     * @return {?}\n     */\n    setScale(scale) {\n        this._scale = scale;\n    }\n    /**\n     * @param {?} pos\n     * @return {?}\n     */\n    setPosition(pos) {\n        if (this._position !== pos && !this.isRefDestroyed()) {\n            this.changeDetectionRef.markForCheck();\n        }\n        this._position = pos;\n        if (this._vertical) {\n            this.bottom = Math.round(pos) + 'px';\n        }\n        else {\n            this.left = Math.round(pos) + 'px';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    calculateDimension() {\n        const /** @type {?} */ val = this.getBoundingClientRect();\n        if (this.vertical) {\n            this._dimension = (val.bottom - val.top) * this.scale;\n        }\n        else {\n            this._dimension = (val.right - val.left) * this.scale;\n        }\n    }\n    /**\n     * @param {?} dim\n     * @return {?}\n     */\n    setDimension(dim) {\n        if (this._dimension !== dim && !this.isRefDestroyed()) {\n            this.changeDetectionRef.markForCheck();\n        }\n        this._dimension = dim;\n        if (this._vertical) {\n            this.height = Math.round(dim) + 'px';\n        }\n        else {\n            this.width = Math.round(dim) + 'px';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getBoundingClientRect() {\n        return this.elemRef.nativeElement.getBoundingClientRect();\n    }\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @param {?=} debounceInterval\n     * @return {?}\n     */\n    on(eventName, callback, debounceInterval) {\n        const /** @type {?} */ listener = this.eventListenerHelper.attachEventListener(this.elemRef.nativeElement, eventName, callback, debounceInterval);\n        this.eventListeners.push(listener);\n    }\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @param {?=} debounceInterval\n     * @return {?}\n     */\n    onPassive(eventName, callback, debounceInterval) {\n        const /** @type {?} */ listener = this.eventListenerHelper.attachPassiveEventListener(this.elemRef.nativeElement, eventName, callback, debounceInterval);\n        this.eventListeners.push(listener);\n    }\n    /**\n     * @param {?=} eventName\n     * @return {?}\n     */\n    off(eventName) {\n        let /** @type {?} */ listenersToKeep;\n        let /** @type {?} */ listenersToRemove;\n        if (!ValueHelper.isNullOrUndefined(eventName)) {\n            listenersToKeep = this.eventListeners.filter((event) => event.eventName !== eventName);\n            listenersToRemove = this.eventListeners.filter((event) => event.eventName === eventName);\n        }\n        else {\n            listenersToKeep = [];\n            listenersToRemove = this.eventListeners;\n        }\n        for (const /** @type {?} */ listener of listenersToRemove) {\n            this.eventListenerHelper.detachEventListener(listener);\n        }\n        this.eventListeners = listenersToKeep;\n    }\n    /**\n     * @return {?}\n     */\n    isRefDestroyed() {\n        return ValueHelper.isNullOrUndefined(this.changeDetectionRef) || this.changeDetectionRef['destroyed'];\n    }\n}\nSliderElementDirective.ɵfac = function SliderElementDirective_Factory(t) { return new (t || SliderElementDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nSliderElementDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: SliderElementDirective, selectors: [[\"\", \"ng5SliderElement\", \"\"]], hostVars: 12, hostBindings: function SliderElementDirective_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"opacity\", ctx.opacity)(\"visibility\", ctx.visibility)(\"left\", ctx.left)(\"bottom\", ctx.bottom)(\"height\", ctx.height)(\"width\", ctx.width);\n    } } });\n/** @nocollapse */\nSliderElementDirective.ctorParameters = () => [\n    { type: ElementRef, },\n    { type: Renderer2, },\n    { type: ChangeDetectorRef, },\n];\nSliderElementDirective.propDecorators = {\n    \"opacity\": [{ type: HostBinding, args: ['style.opacity',] },],\n    \"visibility\": [{ type: HostBinding, args: ['style.visibility',] },],\n    \"left\": [{ type: HostBinding, args: ['style.left',] },],\n    \"bottom\": [{ type: HostBinding, args: ['style.bottom',] },],\n    \"height\": [{ type: HostBinding, args: ['style.height',] },],\n    \"width\": [{ type: HostBinding, args: ['style.width',] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderElementDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ng5SliderElement]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }]; }, { opacity: [{\n            type: HostBinding,\n            args: ['style.opacity']\n        }], visibility: [{\n            type: HostBinding,\n            args: ['style.visibility']\n        }], left: [{\n            type: HostBinding,\n            args: ['style.left']\n        }], bottom: [{\n            type: HostBinding,\n            args: ['style.bottom']\n        }], height: [{\n            type: HostBinding,\n            args: ['style.height']\n        }], width: [{\n            type: HostBinding,\n            args: ['style.width']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass SliderHandleDirective extends SliderElementDirective {\n    /**\n     * @param {?} elemRef\n     * @param {?} renderer\n     * @param {?} changeDetectionRef\n     */\n    constructor(elemRef, renderer, changeDetectionRef) {\n        super(elemRef, renderer, changeDetectionRef);\n        this.active = false;\n        this.role = '';\n        this.tabindex = '';\n        this.ariaOrientation = '';\n        this.ariaLabel = '';\n        this.ariaLabelledBy = '';\n        this.ariaValueNow = '';\n        this.ariaValueText = '';\n        this.ariaValueMin = '';\n        this.ariaValueMax = '';\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this.elemRef.nativeElement.focus();\n    }\n}\nSliderHandleDirective.ɵfac = function SliderHandleDirective_Factory(t) { return new (t || SliderHandleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nSliderHandleDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: SliderHandleDirective, selectors: [[\"\", \"ng5SliderHandle\", \"\"]], hostVars: 11, hostBindings: function SliderHandleDirective_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx.tabindex)(\"aria-orientation\", ctx.ariaOrientation)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-valuenow\", ctx.ariaValueNow)(\"aria-valuetext\", ctx.ariaValueText)(\"aria-valuemin\", ctx.ariaValueMin)(\"aria-valuemax\", ctx.ariaValueMax);\n        ɵngcc0.ɵɵclassProp(\"ng5-slider-active\", ctx.active);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nSliderHandleDirective.ctorParameters = () => [\n    { type: ElementRef, },\n    { type: Renderer2, },\n    { type: ChangeDetectorRef, },\n];\nSliderHandleDirective.propDecorators = {\n    \"active\": [{ type: HostBinding, args: ['class.ng5-slider-active',] },],\n    \"role\": [{ type: HostBinding, args: ['attr.role',] },],\n    \"tabindex\": [{ type: HostBinding, args: ['attr.tabindex',] },],\n    \"ariaOrientation\": [{ type: HostBinding, args: ['attr.aria-orientation',] },],\n    \"ariaLabel\": [{ type: HostBinding, args: ['attr.aria-label',] },],\n    \"ariaLabelledBy\": [{ type: HostBinding, args: ['attr.aria-labelledby',] },],\n    \"ariaValueNow\": [{ type: HostBinding, args: ['attr.aria-valuenow',] },],\n    \"ariaValueText\": [{ type: HostBinding, args: ['attr.aria-valuetext',] },],\n    \"ariaValueMin\": [{ type: HostBinding, args: ['attr.aria-valuemin',] },],\n    \"ariaValueMax\": [{ type: HostBinding, args: ['attr.aria-valuemax',] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderHandleDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ng5SliderHandle]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }]; }, { active: [{\n            type: HostBinding,\n            args: ['class.ng5-slider-active']\n        }], role: [{\n            type: HostBinding,\n            args: ['attr.role']\n        }], tabindex: [{\n            type: HostBinding,\n            args: ['attr.tabindex']\n        }], ariaOrientation: [{\n            type: HostBinding,\n            args: ['attr.aria-orientation']\n        }], ariaLabel: [{\n            type: HostBinding,\n            args: ['attr.aria-label']\n        }], ariaLabelledBy: [{\n            type: HostBinding,\n            args: ['attr.aria-labelledby']\n        }], ariaValueNow: [{\n            type: HostBinding,\n            args: ['attr.aria-valuenow']\n        }], ariaValueText: [{\n            type: HostBinding,\n            args: ['attr.aria-valuetext']\n        }], ariaValueMin: [{\n            type: HostBinding,\n            args: ['attr.aria-valuemin']\n        }], ariaValueMax: [{\n            type: HostBinding,\n            args: ['attr.aria-valuemax']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass SliderLabelDirective extends SliderElementDirective {\n    /**\n     * @param {?} elemRef\n     * @param {?} renderer\n     * @param {?} changeDetectionRef\n     */\n    constructor(elemRef, renderer, changeDetectionRef) {\n        super(elemRef, renderer, changeDetectionRef);\n        this._value = null;\n    }\n    /**\n     * @return {?}\n     */\n    get value() {\n        return this._value;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    setValue(value) {\n        let /** @type {?} */ recalculateDimension = false;\n        if (!this.alwaysHide &&\n            (ValueHelper.isNullOrUndefined(this.value) ||\n                this.value.length !== value.length ||\n                (this.value.length > 0 && this.dimension === 0))) {\n            recalculateDimension = true;\n        }\n        this._value = value;\n        this.elemRef.nativeElement.innerHTML = value;\n        // Update dimension only when length of the label have changed\n        if (recalculateDimension) {\n            this.calculateDimension();\n        }\n    }\n}\nSliderLabelDirective.ɵfac = function SliderLabelDirective_Factory(t) { return new (t || SliderLabelDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nSliderLabelDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: SliderLabelDirective, selectors: [[\"\", \"ng5SliderLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nSliderLabelDirective.ctorParameters = () => [\n    { type: ElementRef, },\n    { type: Renderer2, },\n    { type: ChangeDetectorRef, },\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderLabelDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ng5SliderLabel]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass Tick {\n    constructor() {\n        this.selected = false;\n        this.style = {};\n        this.tooltip = null;\n        this.tooltipPlacement = null;\n        this.value = null;\n        this.valueTooltip = null;\n        this.valueTooltipPlacement = null;\n        this.legend = null;\n    }\n}\nclass Dragging {\n    constructor() {\n        this.active = false;\n        this.value = 0;\n        this.difference = 0;\n        this.position = 0;\n        this.lowLimit = 0;\n        this.highLimit = 0;\n    }\n}\nclass ModelValues {\n    /**\n     * @param {?=} x\n     * @param {?=} y\n     * @return {?}\n     */\n    static compare(x, y) {\n        if (ValueHelper.isNullOrUndefined(x) && ValueHelper.isNullOrUndefined(y)) {\n            return false;\n        }\n        if (ValueHelper.isNullOrUndefined(x) !== ValueHelper.isNullOrUndefined(y)) {\n            return false;\n        }\n        return x.value === y.value && x.highValue === y.highValue;\n    }\n}\nclass ModelChange extends ModelValues {\n    /**\n     * @param {?=} x\n     * @param {?=} y\n     * @return {?}\n     */\n    static compare(x, y) {\n        if (ValueHelper.isNullOrUndefined(x) && ValueHelper.isNullOrUndefined(y)) {\n            return false;\n        }\n        if (ValueHelper.isNullOrUndefined(x) !== ValueHelper.isNullOrUndefined(y)) {\n            return false;\n        }\n        return x.value === y.value &&\n            x.highValue === y.highValue &&\n            x.forceChange === y.forceChange;\n    }\n}\nconst NG5_SLIDER_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    /* tslint:disable-next-line: no-use-before-declare */\n    useExisting: forwardRef(() => SliderComponent),\n    multi: true,\n};\nclass SliderComponent {\n    /**\n     * @param {?} renderer\n     * @param {?} elementRef\n     * @param {?} changeDetectionRef\n     * @param {?} zone\n     */\n    constructor(renderer, elementRef, changeDetectionRef, zone) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.changeDetectionRef = changeDetectionRef;\n        this.zone = zone;\n        // Model for low value of slider. For simple slider, this is the only input. For range slider, this is the low value.\n        this.value = null;\n        // Output for low value slider to support two-way bindings\n        this.valueChange = new EventEmitter();\n        // Model for high value of slider. Not used in simple slider. For range slider, this is the high value.\n        this.highValue = null;\n        // Output for high value slider to support two-way bindings\n        this.highValueChange = new EventEmitter();\n        // An object with all the other options of the slider.\n        // Each option can be updated at runtime and the slider will automatically be re-rendered.\n        this.options = new Options();\n        // Event emitted when user starts interaction with the slider\n        this.userChangeStart = new EventEmitter();\n        // Event emitted on each change coming from user interaction\n        this.userChange = new EventEmitter();\n        // Event emitted when user finishes interaction with the slider\n        this.userChangeEnd = new EventEmitter();\n        this.initHasRun = false;\n        this.inputModelChangeSubject = new Subject();\n        this.inputModelChangeSubscription = null;\n        this.outputModelChangeSubject = new Subject();\n        this.outputModelChangeSubscription = null;\n        this.viewLowValue = null;\n        this.viewHighValue = null;\n        this.viewOptions = new Options();\n        this.handleHalfDimension = 0;\n        this.maxHandlePosition = 0;\n        this.currentTrackingPointer = null;\n        this.currentFocusPointer = null;\n        this.firstKeyDown = false;\n        this.touchId = null;\n        this.dragging = new Dragging();\n        // Host element class bindings\n        this.sliderElementVerticalClass = false;\n        this.sliderElementAnimateClass = false;\n        this.sliderElementDisabledAttr = null;\n        this.barStyle = {};\n        this.minPointerStyle = {};\n        this.maxPointerStyle = {};\n        this.fullBarTransparentClass = false;\n        this.selectionBarDraggableClass = false;\n        this.ticksUnderValuesClass = false;\n        this.intermediateTicks = false;\n        this.ticks = [];\n        this.eventListenerHelper = null;\n        this.onMoveEventListener = null;\n        this.onEndEventListener = null;\n        this.resizeObserver = null;\n        this.onTouchedCallback = null;\n        this.onChangeCallback = null;\n        this.eventListenerHelper = new EventListenerHelper(this.renderer);\n    }\n    /**\n     * @param {?} manualRefresh\n     * @return {?}\n     */\n    set manualRefresh(manualRefresh) {\n        this.unsubscribeManualRefresh();\n        this.manualRefreshSubscription = manualRefresh.subscribe(() => {\n            setTimeout(() => this.calculateViewDimensionsAndDetectChanges());\n        });\n    }\n    /**\n     * @param {?} triggerFocus\n     * @return {?}\n     */\n    set triggerFocus(triggerFocus) {\n        this.unsubscribeTriggerFocus();\n        this.triggerFocusSubscription = triggerFocus.subscribe((pointerType) => {\n            this.focusPointer(pointerType);\n        });\n    }\n    /**\n     * @return {?}\n     */\n    get range() {\n        return !ValueHelper.isNullOrUndefined(this.value) && !ValueHelper.isNullOrUndefined(this.highValue);\n    }\n    /**\n     * @return {?}\n     */\n    get showTicks() {\n        return this.viewOptions.showTicks;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.viewOptions = new Options();\n        Object.assign(this.viewOptions, this.options);\n        // We need to run these two things first, before the rest of the init in ngAfterViewInit(),\n        // because these two settings are set through @HostBinding and Angular change detection\n        // mechanism doesn't like them changing in ngAfterViewInit()\n        this.updateDisabledState();\n        this.updateVerticalState();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.applyOptions();\n        this.subscribeInputModelChangeSubject(this.viewOptions.inputEventsInterval);\n        this.subscribeOutputModelChangeSubject(this.viewOptions.outputEventsInterval);\n        // Once we apply options, we need to normalise model values for the first time\n        this.renormaliseModelValues();\n        this.viewLowValue = this.modelValueToViewValue(this.value);\n        if (this.range) {\n            this.viewHighValue = this.modelValueToViewValue(this.highValue);\n        }\n        else {\n            this.viewHighValue = null;\n        }\n        this.updateVerticalState(); // need to run this again to cover changes to slider elements\n        this.manageElementsStyle();\n        this.updateDisabledState();\n        this.calculateViewDimensions();\n        this.addAccessibility();\n        this.updateCeilLabel();\n        this.updateFloorLabel();\n        this.initHandles();\n        this.manageEventsBindings();\n        this.subscribeResizeObserver();\n        this.initHasRun = true;\n        // Run change detection manually to resolve some issues when init procedure changes values used in the view\n        if (!this.isRefDestroyed()) {\n            this.changeDetectionRef.detectChanges();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Always apply options first\n        if (!ValueHelper.isNullOrUndefined(changes[\"options\"])) {\n            this.onChangeOptions();\n        }\n        // Then value changes\n        if (!ValueHelper.isNullOrUndefined(changes[\"value\"]) ||\n            !ValueHelper.isNullOrUndefined(changes[\"highValue\"])) {\n            this.inputModelChangeSubject.next({\n                value: this.value,\n                highValue: this.highValue,\n                forceChange: false,\n                internalChange: false\n            });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.unbindEvents();\n        this.unsubscribeResizeObserver();\n        this.unsubscribeInputModelChangeSubject();\n        this.unsubscribeOutputModelChangeSubject();\n        this.unsubscribeManualRefresh();\n        this.unsubscribeTriggerFocus();\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    writeValue(obj) {\n        if (obj instanceof Array) {\n            this.value = obj[0];\n            this.highValue = obj[1];\n        }\n        else {\n            this.value = obj;\n        }\n        // ngOnChanges() is not called in this instance, so we need to communicate the change manually\n        this.inputModelChangeSubject.next({\n            value: this.value,\n            highValue: this.highValue,\n            forceChange: false,\n            internalChange: false\n        });\n    }\n    /**\n     * @param {?} onChangeCallback\n     * @return {?}\n     */\n    registerOnChange(onChangeCallback) {\n        this.onChangeCallback = onChangeCallback;\n    }\n    /**\n     * @param {?} onTouchedCallback\n     * @return {?}\n     */\n    registerOnTouched(onTouchedCallback) {\n        this.onTouchedCallback = onTouchedCallback;\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.viewOptions.disabled = isDisabled;\n        this.updateDisabledState();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onResize(event) {\n        this.calculateViewDimensionsAndDetectChanges();\n    }\n    /**\n     * @param {?=} interval\n     * @return {?}\n     */\n    subscribeInputModelChangeSubject(interval) {\n        this.inputModelChangeSubscription = this.inputModelChangeSubject\n            .pipe(distinctUntilChanged(ModelChange.compare),\n        // Hack to reset the status of the distinctUntilChanged() - if a \"fake\" event comes through with forceChange=true,\n        // we forcefully by-pass distinctUntilChanged(), but otherwise drop the event\n        filter((modelChange) => !modelChange.forceChange && !modelChange.internalChange), (!ValueHelper.isNullOrUndefined(interval))\n            ? throttleTime(interval, undefined, { leading: true, trailing: true })\n            : tap(() => { }) // no-op\n        )\n            .subscribe((modelChange) => this.applyInputModelChange(modelChange));\n    }\n    /**\n     * @param {?=} interval\n     * @return {?}\n     */\n    subscribeOutputModelChangeSubject(interval) {\n        this.outputModelChangeSubscription = this.outputModelChangeSubject\n            .pipe(distinctUntilChanged(ModelChange.compare), (!ValueHelper.isNullOrUndefined(interval))\n            ? throttleTime(interval, undefined, { leading: true, trailing: true })\n            : tap(() => { }) // no-op\n        )\n            .subscribe((modelChange) => this.publishOutputModelChange(modelChange));\n    }\n    /**\n     * @return {?}\n     */\n    subscribeResizeObserver() {\n        if (CompatibilityHelper.isResizeObserverAvailable()) {\n            this.resizeObserver = new ResizeObserver(() => this.calculateViewDimensionsAndDetectChanges());\n            this.resizeObserver.observe(this.elementRef.nativeElement);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribeResizeObserver() {\n        if (CompatibilityHelper.isResizeObserverAvailable() && this.resizeObserver !== null) {\n            this.resizeObserver.disconnect();\n            this.resizeObserver = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribeOnMove() {\n        if (!ValueHelper.isNullOrUndefined(this.onMoveEventListener)) {\n            this.eventListenerHelper.detachEventListener(this.onMoveEventListener);\n            this.onMoveEventListener = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribeOnEnd() {\n        if (!ValueHelper.isNullOrUndefined(this.onEndEventListener)) {\n            this.eventListenerHelper.detachEventListener(this.onEndEventListener);\n            this.onEndEventListener = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribeInputModelChangeSubject() {\n        if (!ValueHelper.isNullOrUndefined(this.inputModelChangeSubscription)) {\n            this.inputModelChangeSubscription.unsubscribe();\n            this.inputModelChangeSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribeOutputModelChangeSubject() {\n        if (!ValueHelper.isNullOrUndefined(this.outputModelChangeSubscription)) {\n            this.outputModelChangeSubscription.unsubscribe();\n            this.outputModelChangeSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribeManualRefresh() {\n        if (!ValueHelper.isNullOrUndefined(this.manualRefreshSubscription)) {\n            this.manualRefreshSubscription.unsubscribe();\n            this.manualRefreshSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribeTriggerFocus() {\n        if (!ValueHelper.isNullOrUndefined(this.triggerFocusSubscription)) {\n            this.triggerFocusSubscription.unsubscribe();\n            this.triggerFocusSubscription = null;\n        }\n    }\n    /**\n     * @param {?} pointerType\n     * @return {?}\n     */\n    getPointerElement(pointerType) {\n        if (pointerType === PointerType.Min) {\n            return this.minHandleElement;\n        }\n        else if (pointerType === PointerType.Max) {\n            return this.maxHandleElement;\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getCurrentTrackingValue() {\n        if (this.currentTrackingPointer === PointerType.Min) {\n            return this.viewLowValue;\n        }\n        else if (this.currentTrackingPointer === PointerType.Max) {\n            return this.viewHighValue;\n        }\n        return null;\n    }\n    /**\n     * @param {?} modelValue\n     * @return {?}\n     */\n    modelValueToViewValue(modelValue) {\n        if (ValueHelper.isNullOrUndefined(modelValue)) {\n            return NaN;\n        }\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n            return ValueHelper.findStepIndex(+modelValue, this.viewOptions.stepsArray);\n        }\n        return +modelValue;\n    }\n    /**\n     * @param {?} viewValue\n     * @return {?}\n     */\n    viewValueToModelValue(viewValue) {\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n            return this.getStepValue(viewValue);\n        }\n        return viewValue;\n    }\n    /**\n     * @param {?} sliderValue\n     * @return {?}\n     */\n    getStepValue(sliderValue) {\n        const /** @type {?} */ step = this.viewOptions.stepsArray[sliderValue];\n        return (!ValueHelper.isNullOrUndefined(step)) ? step.value : NaN;\n    }\n    /**\n     * @return {?}\n     */\n    applyViewChange() {\n        this.value = this.viewValueToModelValue(this.viewLowValue);\n        if (this.range) {\n            this.highValue = this.viewValueToModelValue(this.viewHighValue);\n        }\n        this.outputModelChangeSubject.next({\n            value: this.value,\n            highValue: this.highValue,\n            userEventInitiated: true,\n            forceChange: false\n        });\n        // At this point all changes are applied and outputs are emitted, so we should be done.\n        // However, input changes are communicated in different stream and we need to be ready to\n        // act on the next input change even if it is exactly the same as last input change.\n        // Therefore, we send a special event to reset the stream.\n        this.inputModelChangeSubject.next({\n            value: this.value,\n            highValue: this.highValue,\n            forceChange: false,\n            internalChange: true\n        });\n    }\n    /**\n     * @param {?} modelChange\n     * @return {?}\n     */\n    applyInputModelChange(modelChange) {\n        const /** @type {?} */ normalisedModelChange = this.normaliseModelValues(modelChange);\n        // If normalised model change is different, apply the change to the model values\n        const /** @type {?} */ normalisationChange = !ModelValues.compare(modelChange, normalisedModelChange);\n        if (normalisationChange) {\n            this.value = normalisedModelChange.value;\n            this.highValue = normalisedModelChange.highValue;\n        }\n        this.viewLowValue = this.modelValueToViewValue(normalisedModelChange.value);\n        if (this.range) {\n            this.viewHighValue = this.modelValueToViewValue(normalisedModelChange.highValue);\n        }\n        else {\n            this.viewHighValue = null;\n        }\n        this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n        if (this.range) {\n            this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n        }\n        this.updateSelectionBar();\n        this.updateTicksScale();\n        this.updateAriaAttributes();\n        if (this.range) {\n            this.updateCombinedLabel();\n        }\n        // At the end, we need to communicate the model change to the outputs as well\n        // Normalisation changes are also always forced out to ensure that subscribers always end up in correct state\n        this.outputModelChangeSubject.next({\n            value: normalisedModelChange.value,\n            highValue: normalisedModelChange.highValue,\n            forceChange: normalisationChange,\n            userEventInitiated: false\n        });\n    }\n    /**\n     * @param {?} modelChange\n     * @return {?}\n     */\n    publishOutputModelChange(modelChange) {\n        const /** @type {?} */ emitOutputs = () => {\n            this.valueChange.emit(modelChange.value);\n            if (this.range) {\n                this.highValueChange.emit(modelChange.highValue);\n            }\n            if (!ValueHelper.isNullOrUndefined(this.onChangeCallback)) {\n                if (this.range) {\n                    this.onChangeCallback([modelChange.value, modelChange.highValue]);\n                }\n                else {\n                    this.onChangeCallback(modelChange.value);\n                }\n            }\n            if (!ValueHelper.isNullOrUndefined(this.onTouchedCallback)) {\n                if (this.range) {\n                    this.onTouchedCallback([modelChange.value, modelChange.highValue]);\n                }\n                else {\n                    this.onTouchedCallback(modelChange.value);\n                }\n            }\n        };\n        if (modelChange.userEventInitiated) {\n            // If this change was initiated by a user event, we can emit outputs in the same tick\n            emitOutputs();\n            this.userChange.emit(this.getChangeContext());\n        }\n        else {\n            // But, if the change was initated by something else like a change in input bindings,\n            // we need to wait until next tick to emit the outputs to keep Angular change detection happy\n            setTimeout(() => { emitOutputs(); });\n        }\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    normaliseModelValues(input) {\n        const /** @type {?} */ normalisedInput = new ModelValues();\n        normalisedInput.value = input.value;\n        normalisedInput.highValue = input.highValue;\n        if (this.viewOptions.enforceStep) {\n            normalisedInput.value = this.roundStep(normalisedInput.value);\n            if (this.range) {\n                normalisedInput.highValue = this.roundStep(normalisedInput.highValue);\n            }\n        }\n        // Don't attempt to normalise further when using steps array (steps may be out of order and that is perfectly fine)\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) || !this.viewOptions.enforceRange) {\n            return normalisedInput;\n        }\n        normalisedInput.value = MathHelper.clampToRange(normalisedInput.value, this.viewOptions.floor, this.viewOptions.ceil);\n        if (this.range) {\n            normalisedInput.highValue = MathHelper.clampToRange(normalisedInput.highValue, this.viewOptions.floor, this.viewOptions.ceil);\n        }\n        // Make sure that range slider invariant (value <= highValue) is always satisfied\n        if (this.range && input.value > input.highValue) {\n            // We know that both values are now clamped correctly, they may just be in the wrong order\n            // So the easy solution is to swap them... except swapping is sometimes disabled in options, so we make the two values the same\n            if (this.viewOptions.noSwitching) {\n                normalisedInput.value = normalisedInput.highValue;\n            }\n            else {\n                const /** @type {?} */ tempValue = input.value;\n                normalisedInput.value = input.highValue;\n                normalisedInput.highValue = tempValue;\n            }\n        }\n        return normalisedInput;\n    }\n    /**\n     * @return {?}\n     */\n    renormaliseModelValues() {\n        const /** @type {?} */ previousModelValues = {\n            value: this.value,\n            highValue: this.highValue\n        };\n        const /** @type {?} */ normalisedModelValues = this.normaliseModelValues(previousModelValues);\n        if (!ModelValues.compare(normalisedModelValues, previousModelValues)) {\n            this.value = normalisedModelValues.value;\n            this.highValue = normalisedModelValues.highValue;\n            this.outputModelChangeSubject.next({\n                value: this.value,\n                highValue: this.highValue,\n                forceChange: true,\n                userEventInitiated: false\n            });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onChangeOptions() {\n        if (!this.initHasRun) {\n            return;\n        }\n        const /** @type {?} */ previousInputEventsInterval = this.viewOptions.inputEventsInterval;\n        const /** @type {?} */ previousOutputEventsInterval = this.viewOptions.outputEventsInterval;\n        this.applyOptions();\n        if (previousInputEventsInterval !== this.viewOptions.inputEventsInterval) {\n            this.unsubscribeInputModelChangeSubject();\n            this.subscribeInputModelChangeSubject(this.viewOptions.inputEventsInterval);\n        }\n        if (previousOutputEventsInterval !== this.viewOptions.outputEventsInterval) {\n            this.unsubscribeInputModelChangeSubject();\n            this.subscribeInputModelChangeSubject(this.viewOptions.outputEventsInterval);\n        }\n        // With new options, we need to re-normalise model values if necessary\n        this.renormaliseModelValues();\n        this.viewLowValue = this.modelValueToViewValue(this.value);\n        if (this.range) {\n            this.viewHighValue = this.modelValueToViewValue(this.highValue);\n        }\n        else {\n            this.viewHighValue = null;\n        }\n        this.resetSlider();\n    }\n    /**\n     * @return {?}\n     */\n    applyOptions() {\n        this.viewOptions = new Options();\n        Object.assign(this.viewOptions, this.options);\n        this.viewOptions.draggableRange = this.range && this.viewOptions.draggableRange;\n        this.viewOptions.draggableRangeOnly = this.range && this.viewOptions.draggableRangeOnly;\n        if (this.viewOptions.draggableRangeOnly) {\n            this.viewOptions.draggableRange = true;\n        }\n        this.viewOptions.showTicks = this.viewOptions.showTicks ||\n            this.viewOptions.showTicksValues ||\n            !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray);\n        if (this.viewOptions.showTicks &&\n            (!ValueHelper.isNullOrUndefined(this.viewOptions.tickStep) || !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray))) {\n            this.intermediateTicks = true;\n        }\n        this.viewOptions.showSelectionBar = this.viewOptions.showSelectionBar ||\n            this.viewOptions.showSelectionBarEnd ||\n            !ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue);\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray)) {\n            this.applyStepsArrayOptions();\n        }\n        else {\n            this.applyFloorCeilOptions();\n        }\n        if (ValueHelper.isNullOrUndefined(this.viewOptions.combineLabels)) {\n            this.viewOptions.combineLabels = (minValue, maxValue) => {\n                return minValue + ' - ' + maxValue;\n            };\n        }\n        if (this.viewOptions.logScale && this.viewOptions.floor === 0) {\n            throw Error('Can\\'t use floor=0 with logarithmic scale');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    applyStepsArrayOptions() {\n        this.viewOptions.floor = 0;\n        this.viewOptions.ceil = this.viewOptions.stepsArray.length - 1;\n        this.viewOptions.step = 1;\n        if (ValueHelper.isNullOrUndefined(this.viewOptions.translate)) {\n            this.viewOptions.translate = (modelValue) => {\n                if (this.viewOptions.bindIndexForStepsArray) {\n                    return String(this.getStepValue(modelValue));\n                }\n                return String(modelValue);\n            };\n        }\n        this.viewOptions.getLegend = (index) => {\n            const /** @type {?} */ step = this.viewOptions.stepsArray[index];\n            return step.legend;\n        };\n    }\n    /**\n     * @return {?}\n     */\n    applyFloorCeilOptions() {\n        if (ValueHelper.isNullOrUndefined(this.viewOptions.step)) {\n            this.viewOptions.step = 1;\n        }\n        else {\n            this.viewOptions.step = +this.viewOptions.step;\n            if (this.viewOptions.step <= 0) {\n                this.viewOptions.step = 1;\n            }\n        }\n        if (ValueHelper.isNullOrUndefined(this.viewOptions.ceil) ||\n            ValueHelper.isNullOrUndefined(this.viewOptions.floor)) {\n            throw Error('floor and ceil options must be supplied');\n        }\n        this.viewOptions.ceil = +this.viewOptions.ceil;\n        this.viewOptions.floor = +this.viewOptions.floor;\n        if (ValueHelper.isNullOrUndefined(this.viewOptions.translate)) {\n            this.viewOptions.translate = (value) => String(value);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    resetSlider() {\n        this.manageElementsStyle();\n        this.addAccessibility();\n        this.updateCeilLabel();\n        this.updateFloorLabel();\n        this.unbindEvents();\n        this.manageEventsBindings();\n        this.updateDisabledState();\n        this.calculateViewDimensions();\n        this.refocusPointerIfNeeded();\n    }\n    /**\n     * @param {?} pointerType\n     * @return {?}\n     */\n    focusPointer(pointerType) {\n        // If not supplied, use min pointer as default\n        if (pointerType !== PointerType.Min && pointerType !== PointerType.Max) {\n            pointerType = PointerType.Min;\n        }\n        if (pointerType === PointerType.Min) {\n            this.minHandleElement.focus();\n        }\n        else if (this.range && pointerType === PointerType.Max) {\n            this.maxHandleElement.focus();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    refocusPointerIfNeeded() {\n        if (!ValueHelper.isNullOrUndefined(this.currentFocusPointer)) {\n            this.onPointerFocus(this.currentFocusPointer);\n            const /** @type {?} */ element = this.getPointerElement(this.currentFocusPointer);\n            element.focus();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    manageElementsStyle() {\n        this.updateScale();\n        this.floorLabelElement.setAlwaysHide(this.viewOptions.showTicksValues || this.viewOptions.hideLimitLabels);\n        this.ceilLabelElement.setAlwaysHide(this.viewOptions.showTicksValues || this.viewOptions.hideLimitLabels);\n        const /** @type {?} */ hideLabelsForTicks = this.viewOptions.showTicksValues && !this.intermediateTicks;\n        this.minHandleLabelElement.setAlwaysHide(hideLabelsForTicks || this.viewOptions.hidePointerLabels);\n        this.maxHandleLabelElement.setAlwaysHide(hideLabelsForTicks || !this.range || this.viewOptions.hidePointerLabels);\n        this.combinedLabelElement.setAlwaysHide(hideLabelsForTicks || !this.range || this.viewOptions.hidePointerLabels);\n        this.selectionBarElement.setAlwaysHide(!this.range && !this.viewOptions.showSelectionBar);\n        this.leftOuterSelectionBarElement.setAlwaysHide(!this.range || !this.viewOptions.showOuterSelectionBars);\n        this.rightOuterSelectionBarElement.setAlwaysHide(!this.range || !this.viewOptions.showOuterSelectionBars);\n        this.fullBarTransparentClass = this.range && this.viewOptions.showOuterSelectionBars;\n        this.selectionBarDraggableClass = this.viewOptions.draggableRange && !this.viewOptions.onlyBindHandles;\n        this.ticksUnderValuesClass = this.intermediateTicks && this.options.showTicksValues;\n        if (this.sliderElementVerticalClass !== this.viewOptions.vertical) {\n            this.updateVerticalState();\n            // The above change in host component class will not be applied until the end of this cycle\n            // However, functions calculating the slider position expect the slider to be already styled as vertical\n            // So as a workaround, we need to reset the slider once again to compute the correct values\n            setTimeout(() => { this.resetSlider(); });\n        }\n        // Changing animate class may interfere with slider reset/initialisation, so we should set it separately,\n        // after all is properly set up\n        if (this.sliderElementAnimateClass !== this.viewOptions.animate) {\n            setTimeout(() => { this.sliderElementAnimateClass = this.viewOptions.animate; });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    manageEventsBindings() {\n        if (this.viewOptions.disabled || this.viewOptions.readOnly) {\n            this.unbindEvents();\n        }\n        else {\n            this.bindEvents();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    updateDisabledState() {\n        this.sliderElementDisabledAttr = this.viewOptions.disabled ? 'disabled' : null;\n    }\n    /**\n     * @return {?}\n     */\n    updateVerticalState() {\n        this.sliderElementVerticalClass = this.viewOptions.vertical;\n        for (const /** @type {?} */ element of this.getAllSliderElements()) {\n            // This is also called before ngAfterInit, so need to check that view child bindings work\n            if (!ValueHelper.isNullOrUndefined(element)) {\n                element.setVertical(this.viewOptions.vertical);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    updateScale() {\n        for (const /** @type {?} */ element of this.getAllSliderElements()) {\n            element.setScale(this.viewOptions.scale);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getAllSliderElements() {\n        return [this.leftOuterSelectionBarElement,\n            this.rightOuterSelectionBarElement,\n            this.fullBarElement,\n            this.selectionBarElement,\n            this.minHandleElement,\n            this.maxHandleElement,\n            this.floorLabelElement,\n            this.ceilLabelElement,\n            this.minHandleLabelElement,\n            this.maxHandleLabelElement,\n            this.combinedLabelElement,\n            this.ticksElement\n        ];\n    }\n    /**\n     * @return {?}\n     */\n    initHandles() {\n        this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n        /*\n           the order here is important since the selection bar should be\n           updated after the high handle but before the combined label\n           */\n        if (this.range) {\n            this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n        }\n        this.updateSelectionBar();\n        if (this.range) {\n            this.updateCombinedLabel();\n        }\n        this.updateTicksScale();\n    }\n    /**\n     * @return {?}\n     */\n    addAccessibility() {\n        this.updateAriaAttributes();\n        this.minHandleElement.role = 'slider';\n        if (this.viewOptions.keyboardSupport &&\n            !(this.viewOptions.readOnly || this.viewOptions.disabled)) {\n            this.minHandleElement.tabindex = '0';\n        }\n        else {\n            this.minHandleElement.tabindex = '';\n        }\n        if (this.viewOptions.vertical) {\n            this.minHandleElement.ariaOrientation = 'vertical';\n        }\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabel)) {\n            this.minHandleElement.ariaLabel = this.viewOptions.ariaLabel;\n        }\n        else if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelledBy)) {\n            this.minHandleElement.ariaLabelledBy = this.viewOptions.ariaLabelledBy;\n        }\n        if (this.range) {\n            this.maxHandleElement.role = 'slider';\n            if (this.viewOptions.keyboardSupport &&\n                !(this.viewOptions.readOnly || this.viewOptions.disabled)) {\n                this.maxHandleElement.tabindex = '0';\n            }\n            else {\n                this.maxHandleElement.tabindex = '';\n            }\n            this.maxHandleElement.ariaOrientation = this.viewOptions.vertical ? 'vertical' : 'horizontal';\n            if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelHigh)) {\n                this.maxHandleElement.ariaLabel = this.viewOptions.ariaLabelHigh;\n            }\n            else if (!ValueHelper.isNullOrUndefined(this.viewOptions.ariaLabelledByHigh)) {\n                this.maxHandleElement.ariaLabelledBy = this.viewOptions.ariaLabelledByHigh;\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    updateAriaAttributes() {\n        this.minHandleElement.ariaValueNow = (+this.value).toString();\n        this.minHandleElement.ariaValueText = this.viewOptions.translate(+this.value, LabelType.Low);\n        this.minHandleElement.ariaValueMin = this.viewOptions.floor.toString();\n        this.minHandleElement.ariaValueMax = this.viewOptions.ceil.toString();\n        if (this.range) {\n            this.maxHandleElement.ariaValueNow = (+this.highValue).toString();\n            this.maxHandleElement.ariaValueText = this.viewOptions.translate(+this.highValue, LabelType.High);\n            this.maxHandleElement.ariaValueMin = this.viewOptions.floor.toString();\n            this.maxHandleElement.ariaValueMax = this.viewOptions.ceil.toString();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    calculateViewDimensions() {\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.handleDimension)) {\n            this.minHandleElement.setDimension(this.viewOptions.handleDimension);\n        }\n        else {\n            this.minHandleElement.calculateDimension();\n        }\n        const /** @type {?} */ handleWidth = this.minHandleElement.dimension;\n        this.handleHalfDimension = handleWidth / 2;\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.barDimension)) {\n            this.fullBarElement.setDimension(this.viewOptions.barDimension);\n        }\n        else {\n            this.fullBarElement.calculateDimension();\n        }\n        this.maxHandlePosition = this.fullBarElement.dimension - handleWidth;\n        if (this.initHasRun) {\n            this.updateFloorLabel();\n            this.updateCeilLabel();\n            this.initHandles();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    calculateViewDimensionsAndDetectChanges() {\n        this.calculateViewDimensions();\n        if (!this.isRefDestroyed()) {\n            this.changeDetectionRef.detectChanges();\n        }\n    }\n    /**\n     * If the slider reference is already destroyed\n     * @return {?} boolean - true if ref is destroyed\n     */\n    isRefDestroyed() {\n        return this.changeDetectionRef['destroyed'];\n    }\n    /**\n     * @return {?}\n     */\n    updateTicksScale() {\n        if (!this.viewOptions.showTicks) {\n            return;\n        }\n        const /** @type {?} */ ticksArray = !ValueHelper.isNullOrUndefined(this.viewOptions.ticksArray)\n            ? this.viewOptions.ticksArray\n            : this.getTicksArray();\n        const /** @type {?} */ translate = this.viewOptions.vertical ? 'translateY' : 'translateX';\n        if (this.viewOptions.rightToLeft) {\n            ticksArray.reverse();\n        }\n        const /** @type {?} */ newTicks = ticksArray.map((value) => {\n            let /** @type {?} */ position = this.valueToPosition(value);\n            if (this.viewOptions.vertical) {\n                position = this.maxHandlePosition - position;\n            }\n            const /** @type {?} */ translation = translate + '(' + Math.round(position) + 'px)';\n            const /** @type {?} */ tick = new Tick();\n            tick.selected = this.isTickSelected(value);\n            tick.style = {\n                '-webkit-transform': translation,\n                '-moz-transform': translation,\n                '-o-transform': translation,\n                '-ms-transform': translation,\n                transform: translation,\n            };\n            if (tick.selected && !ValueHelper.isNullOrUndefined(this.viewOptions.getSelectionBarColor)) {\n                tick.style['background-color'] = this.getSelectionBarColor();\n            }\n            if (!tick.selected && !ValueHelper.isNullOrUndefined(this.viewOptions.getTickColor)) {\n                tick.style['background-color'] = this.getTickColor(value);\n            }\n            if (!ValueHelper.isNullOrUndefined(this.viewOptions.ticksTooltip)) {\n                tick.tooltip = this.viewOptions.ticksTooltip(value);\n                tick.tooltipPlacement = this.viewOptions.vertical ? 'right' : 'top';\n            }\n            if (this.viewOptions.showTicksValues && (value % this.viewOptions.tickValueStep === 0)) {\n                tick.value = this.getDisplayValue(value, LabelType.TickValue);\n                if (!ValueHelper.isNullOrUndefined(this.viewOptions.ticksValuesTooltip)) {\n                    tick.valueTooltip = this.viewOptions.ticksValuesTooltip(value);\n                    tick.valueTooltipPlacement = this.viewOptions.vertical\n                        ? 'right'\n                        : 'top';\n                }\n            }\n            if (!ValueHelper.isNullOrUndefined(this.viewOptions.getLegend)) {\n                const /** @type {?} */ legend = this.viewOptions.getLegend(value);\n                if (!ValueHelper.isNullOrUndefined(legend)) {\n                    tick.legend = legend;\n                }\n            }\n            return tick;\n        });\n        // We should avoid re-creating the ticks array if possible\n        // This both improves performance and makes CSS animations work correctly\n        if (!ValueHelper.isNullOrUndefined(this.ticks) && this.ticks.length === newTicks.length) {\n            for (let /** @type {?} */ i = 0; i < newTicks.length; ++i) {\n                Object.assign(this.ticks[i], newTicks[i]);\n            }\n        }\n        else {\n            this.ticks = newTicks;\n        }\n        if (!this.isRefDestroyed()) {\n            this.changeDetectionRef.detectChanges();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getTicksArray() {\n        const /** @type {?} */ step = (!ValueHelper.isNullOrUndefined(this.viewOptions.tickStep)) ? this.viewOptions.tickStep : this.viewOptions.step;\n        const /** @type {?} */ ticksArray = [];\n        for (let /** @type {?} */ value = this.viewOptions.floor; value <= this.viewOptions.ceil; value += step) {\n            ticksArray.push(value);\n        }\n        return ticksArray;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isTickSelected(value) {\n        if (!this.range) {\n            if (!ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue)) {\n                const /** @type {?} */ center = this.viewOptions.showSelectionBarFromValue;\n                if (this.viewLowValue > center &&\n                    value >= center &&\n                    value <= this.viewLowValue) {\n                    return true;\n                }\n                else if (this.viewLowValue < center &&\n                    value <= center &&\n                    value >= this.viewLowValue) {\n                    return true;\n                }\n            }\n            else if (this.viewOptions.showSelectionBarEnd) {\n                if (value >= this.viewLowValue) {\n                    return true;\n                }\n            }\n            else if (this.viewOptions.showSelectionBar && value <= this.viewLowValue) {\n                return true;\n            }\n        }\n        if (this.range && value >= this.viewLowValue && value <= this.viewHighValue) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @return {?}\n     */\n    updateFloorLabel() {\n        if (!this.floorLabelElement.alwaysHide) {\n            this.floorLabelElement.setValue(this.getDisplayValue(this.viewOptions.floor, LabelType.Floor));\n            this.floorLabelElement.calculateDimension();\n            const /** @type {?} */ position = this.viewOptions.rightToLeft\n                ? this.fullBarElement.dimension - this.floorLabelElement.dimension\n                : 0;\n            this.floorLabelElement.setPosition(position);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    updateCeilLabel() {\n        if (!this.ceilLabelElement.alwaysHide) {\n            this.ceilLabelElement.setValue(this.getDisplayValue(this.viewOptions.ceil, LabelType.Ceil));\n            this.ceilLabelElement.calculateDimension();\n            const /** @type {?} */ position = this.viewOptions.rightToLeft\n                ? 0\n                : this.fullBarElement.dimension - this.ceilLabelElement.dimension;\n            this.ceilLabelElement.setPosition(position);\n        }\n    }\n    /**\n     * @param {?} which\n     * @param {?} newPos\n     * @return {?}\n     */\n    updateHandles(which, newPos) {\n        if (which === PointerType.Min) {\n            this.updateLowHandle(newPos);\n        }\n        else if (which === PointerType.Max) {\n            this.updateHighHandle(newPos);\n        }\n        this.updateSelectionBar();\n        this.updateTicksScale();\n        if (this.range) {\n            this.updateCombinedLabel();\n        }\n    }\n    /**\n     * @param {?} labelType\n     * @param {?} newPos\n     * @return {?}\n     */\n    getHandleLabelPos(labelType, newPos) {\n        const /** @type {?} */ labelDimension = (labelType === PointerType.Min)\n            ? this.minHandleLabelElement.dimension\n            : this.maxHandleLabelElement.dimension;\n        const /** @type {?} */ nearHandlePos = newPos - labelDimension / 2 + this.handleHalfDimension;\n        const /** @type {?} */ endOfBarPos = this.fullBarElement.dimension - labelDimension;\n        if (!this.viewOptions.boundPointerLabels) {\n            return nearHandlePos;\n        }\n        if ((this.viewOptions.rightToLeft && labelType === PointerType.Min) ||\n            (!this.viewOptions.rightToLeft && labelType === PointerType.Max)) {\n            return Math.min(nearHandlePos, endOfBarPos);\n        }\n        else {\n            return Math.min(Math.max(nearHandlePos, 0), endOfBarPos);\n        }\n    }\n    /**\n     * @param {?} newPos\n     * @return {?}\n     */\n    updateLowHandle(newPos) {\n        this.minHandleElement.setPosition(newPos);\n        this.minHandleLabelElement.setValue(this.getDisplayValue(this.viewLowValue, LabelType.Low));\n        this.minHandleLabelElement.setPosition(this.getHandleLabelPos(PointerType.Min, newPos));\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.getPointerColor)) {\n            this.minPointerStyle = {\n                backgroundColor: this.getPointerColor(PointerType.Min),\n            };\n        }\n        if (this.viewOptions.autoHideLimitLabels) {\n            this.updateFloorAndCeilLabelsVisibility();\n        }\n    }\n    /**\n     * @param {?} newPos\n     * @return {?}\n     */\n    updateHighHandle(newPos) {\n        this.maxHandleElement.setPosition(newPos);\n        this.maxHandleLabelElement.setValue(this.getDisplayValue(this.viewHighValue, LabelType.High));\n        this.maxHandleLabelElement.setPosition(this.getHandleLabelPos(PointerType.Max, newPos));\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.getPointerColor)) {\n            this.maxPointerStyle = {\n                backgroundColor: this.getPointerColor(PointerType.Max),\n            };\n        }\n        if (this.viewOptions.autoHideLimitLabels) {\n            this.updateFloorAndCeilLabelsVisibility();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    updateFloorAndCeilLabelsVisibility() {\n        // Show based only on hideLimitLabels if pointer labels are hidden\n        if (this.viewOptions.hidePointerLabels) {\n            return;\n        }\n        let /** @type {?} */ floorLabelHidden = false;\n        let /** @type {?} */ ceilLabelHidden = false;\n        const /** @type {?} */ isMinLabelAtFloor = this.isLabelBelowFloorLabel(this.minHandleLabelElement);\n        const /** @type {?} */ isMinLabelAtCeil = this.isLabelAboveCeilLabel(this.minHandleLabelElement);\n        const /** @type {?} */ isMaxLabelAtCeil = this.isLabelAboveCeilLabel(this.maxHandleLabelElement);\n        const /** @type {?} */ isCombinedLabelAtFloor = this.isLabelBelowFloorLabel(this.combinedLabelElement);\n        const /** @type {?} */ isCombinedLabelAtCeil = this.isLabelAboveCeilLabel(this.combinedLabelElement);\n        if (isMinLabelAtFloor) {\n            floorLabelHidden = true;\n            this.floorLabelElement.hide();\n        }\n        else {\n            floorLabelHidden = false;\n            this.floorLabelElement.show();\n        }\n        if (isMinLabelAtCeil) {\n            ceilLabelHidden = true;\n            this.ceilLabelElement.hide();\n        }\n        else {\n            ceilLabelHidden = false;\n            this.ceilLabelElement.show();\n        }\n        if (this.range) {\n            const /** @type {?} */ hideCeil = this.combinedLabelElement.isVisible() ? isCombinedLabelAtCeil : isMaxLabelAtCeil;\n            const /** @type {?} */ hideFloor = this.combinedLabelElement.isVisible() ? isCombinedLabelAtFloor : isMinLabelAtFloor;\n            if (hideCeil) {\n                this.ceilLabelElement.hide();\n            }\n            else if (!ceilLabelHidden) {\n                this.ceilLabelElement.show();\n            }\n            // Hide or show floor label\n            if (hideFloor) {\n                this.floorLabelElement.hide();\n            }\n            else if (!floorLabelHidden) {\n                this.floorLabelElement.show();\n            }\n        }\n    }\n    /**\n     * @param {?} label\n     * @return {?}\n     */\n    isLabelBelowFloorLabel(label) {\n        const /** @type {?} */ pos = label.position;\n        const /** @type {?} */ dim = label.dimension;\n        const /** @type {?} */ floorPos = this.floorLabelElement.position;\n        const /** @type {?} */ floorDim = this.floorLabelElement.dimension;\n        return this.viewOptions.rightToLeft\n            ? pos + dim >= floorPos - 2\n            : pos <= floorPos + floorDim + 2;\n    }\n    /**\n     * @param {?} label\n     * @return {?}\n     */\n    isLabelAboveCeilLabel(label) {\n        const /** @type {?} */ pos = label.position;\n        const /** @type {?} */ dim = label.dimension;\n        const /** @type {?} */ ceilPos = this.ceilLabelElement.position;\n        const /** @type {?} */ ceilDim = this.ceilLabelElement.dimension;\n        return this.viewOptions.rightToLeft\n            ? pos <= ceilPos + ceilDim + 2\n            : pos + dim >= ceilPos - 2;\n    }\n    /**\n     * @return {?}\n     */\n    updateSelectionBar() {\n        let /** @type {?} */ position = 0;\n        let /** @type {?} */ dimension = 0;\n        const /** @type {?} */ isSelectionBarFromRight = this.viewOptions.rightToLeft\n            ? !this.viewOptions.showSelectionBarEnd\n            : this.viewOptions.showSelectionBarEnd;\n        const /** @type {?} */ positionForRange = this.viewOptions.rightToLeft\n            ? this.maxHandleElement.position + this.handleHalfDimension\n            : this.minHandleElement.position + this.handleHalfDimension;\n        if (this.range) {\n            dimension = Math.abs(this.maxHandleElement.position - this.minHandleElement.position);\n            position = positionForRange;\n        }\n        else {\n            if (!ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue)) {\n                const /** @type {?} */ center = this.viewOptions.showSelectionBarFromValue;\n                const /** @type {?} */ centerPosition = this.valueToPosition(center);\n                const /** @type {?} */ isModelGreaterThanCenter = this.viewOptions.rightToLeft\n                    ? this.viewLowValue <= center\n                    : this.viewLowValue > center;\n                if (isModelGreaterThanCenter) {\n                    dimension = this.minHandleElement.position - centerPosition;\n                    position = centerPosition + this.handleHalfDimension;\n                }\n                else {\n                    dimension = centerPosition - this.minHandleElement.position;\n                    position = this.minHandleElement.position + this.handleHalfDimension;\n                }\n            }\n            else if (isSelectionBarFromRight) {\n                dimension = Math.ceil(Math.abs(this.maxHandlePosition - this.minHandleElement.position) + this.handleHalfDimension);\n                position = Math.floor(this.minHandleElement.position + this.handleHalfDimension);\n            }\n            else {\n                dimension = this.minHandleElement.position + this.handleHalfDimension;\n                position = 0;\n            }\n        }\n        this.selectionBarElement.setDimension(dimension);\n        this.selectionBarElement.setPosition(position);\n        if (this.range && this.viewOptions.showOuterSelectionBars) {\n            if (this.viewOptions.rightToLeft) {\n                this.rightOuterSelectionBarElement.setDimension(position);\n                this.rightOuterSelectionBarElement.setPosition(0);\n                this.fullBarElement.calculateDimension();\n                this.leftOuterSelectionBarElement.setDimension(this.fullBarElement.dimension - (position + dimension));\n                this.leftOuterSelectionBarElement.setPosition(position + dimension);\n            }\n            else {\n                this.leftOuterSelectionBarElement.setDimension(position);\n                this.leftOuterSelectionBarElement.setPosition(0);\n                this.fullBarElement.calculateDimension();\n                this.rightOuterSelectionBarElement.setDimension(this.fullBarElement.dimension - (position + dimension));\n                this.rightOuterSelectionBarElement.setPosition(position + dimension);\n            }\n        }\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.getSelectionBarColor)) {\n            const /** @type {?} */ color = this.getSelectionBarColor();\n            this.barStyle = {\n                backgroundColor: color,\n            };\n        }\n        else if (!ValueHelper.isNullOrUndefined(this.viewOptions.selectionBarGradient)) {\n            const /** @type {?} */ offset = (!ValueHelper.isNullOrUndefined(this.viewOptions.showSelectionBarFromValue))\n                ? this.valueToPosition(this.viewOptions.showSelectionBarFromValue)\n                : 0;\n            const /** @type {?} */ reversed = (offset - position > 0 && !isSelectionBarFromRight) || (offset - position <= 0 && isSelectionBarFromRight);\n            const /** @type {?} */ direction = this.viewOptions.vertical\n                ? reversed ? 'bottom' : 'top'\n                : reversed ? 'left' : 'right';\n            this.barStyle = {\n                backgroundImage: 'linear-gradient(to ' +\n                    direction +\n                    ', ' +\n                    this.viewOptions.selectionBarGradient.from +\n                    ' 0%,' +\n                    this.viewOptions.selectionBarGradient.to +\n                    ' 100%)',\n            };\n            if (this.viewOptions.vertical) {\n                this.barStyle.backgroundPosition =\n                    'center ' +\n                        (offset +\n                            dimension +\n                            position +\n                            (reversed ? -this.handleHalfDimension : 0)) +\n                        'px';\n                this.barStyle.backgroundSize =\n                    '100% ' + (this.fullBarElement.dimension - this.handleHalfDimension) + 'px';\n            }\n            else {\n                this.barStyle.backgroundPosition =\n                    offset -\n                        position +\n                        (reversed ? this.handleHalfDimension : 0) +\n                        'px center';\n                this.barStyle.backgroundSize =\n                    this.fullBarElement.dimension - this.handleHalfDimension + 'px 100%';\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getSelectionBarColor() {\n        if (this.range) {\n            return this.viewOptions.getSelectionBarColor(this.value, this.highValue);\n        }\n        return this.viewOptions.getSelectionBarColor(this.value);\n    }\n    /**\n     * @param {?} pointerType\n     * @return {?}\n     */\n    getPointerColor(pointerType) {\n        if (pointerType === PointerType.Max) {\n            return this.viewOptions.getPointerColor(this.highValue, pointerType);\n        }\n        return this.viewOptions.getPointerColor(this.value, pointerType);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    getTickColor(value) {\n        return this.viewOptions.getTickColor(value);\n    }\n    /**\n     * @return {?}\n     */\n    updateCombinedLabel() {\n        let /** @type {?} */ isLabelOverlap = null;\n        if (this.viewOptions.rightToLeft) {\n            isLabelOverlap =\n                this.minHandleLabelElement.position - this.minHandleLabelElement.dimension - 10 <= this.maxHandleLabelElement.position;\n        }\n        else {\n            isLabelOverlap =\n                this.minHandleLabelElement.position + this.minHandleLabelElement.dimension + 10 >= this.maxHandleLabelElement.position;\n        }\n        if (isLabelOverlap) {\n            const /** @type {?} */ lowDisplayValue = this.getDisplayValue(this.viewLowValue, LabelType.Low);\n            const /** @type {?} */ highDisplayValue = this.getDisplayValue(this.viewHighValue, LabelType.High);\n            const /** @type {?} */ combinedLabelValue = this.viewOptions.rightToLeft\n                ? this.viewOptions.combineLabels(highDisplayValue, lowDisplayValue)\n                : this.viewOptions.combineLabels(lowDisplayValue, highDisplayValue);\n            this.combinedLabelElement.setValue(combinedLabelValue);\n            const /** @type {?} */ pos = this.viewOptions.boundPointerLabels\n                ? Math.min(Math.max(this.selectionBarElement.position +\n                    this.selectionBarElement.dimension / 2 -\n                    this.combinedLabelElement.dimension / 2, 0), this.fullBarElement.dimension - this.combinedLabelElement.dimension)\n                : this.selectionBarElement.position + this.selectionBarElement.dimension / 2 - this.combinedLabelElement.dimension / 2;\n            this.combinedLabelElement.setPosition(pos);\n            this.minHandleLabelElement.hide();\n            this.maxHandleLabelElement.hide();\n            this.combinedLabelElement.show();\n        }\n        else {\n            this.updateHighHandle(this.valueToPosition(this.viewHighValue));\n            this.updateLowHandle(this.valueToPosition(this.viewLowValue));\n            this.maxHandleLabelElement.show();\n            this.minHandleLabelElement.show();\n            this.combinedLabelElement.hide();\n        }\n        if (this.viewOptions.autoHideLimitLabels) {\n            this.updateFloorAndCeilLabelsVisibility();\n        }\n    }\n    /**\n     * @param {?} value\n     * @param {?} which\n     * @return {?}\n     */\n    getDisplayValue(value, which) {\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.stepsArray) && !this.viewOptions.bindIndexForStepsArray) {\n            value = this.getStepValue(value);\n        }\n        return this.viewOptions.translate(value, which);\n    }\n    /**\n     * @param {?} value\n     * @param {?=} customStep\n     * @return {?}\n     */\n    roundStep(value, customStep) {\n        const /** @type {?} */ step = !ValueHelper.isNullOrUndefined(customStep) ? customStep : this.viewOptions.step;\n        let /** @type {?} */ steppedDifference = MathHelper.roundToPrecisionLimit((value - this.viewOptions.floor) / step, this.viewOptions.precisionLimit);\n        steppedDifference = Math.round(steppedDifference) * step;\n        return MathHelper.roundToPrecisionLimit(this.viewOptions.floor + steppedDifference, this.viewOptions.precisionLimit);\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    valueToPosition(val) {\n        let /** @type {?} */ fn = ValueHelper.linearValueToPosition;\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.customValueToPosition)) {\n            fn = this.viewOptions.customValueToPosition;\n        }\n        else if (this.viewOptions.logScale) {\n            fn = ValueHelper.logValueToPosition;\n        }\n        val = MathHelper.clampToRange(val, this.viewOptions.floor, this.viewOptions.ceil);\n        let /** @type {?} */ percent = fn(val, this.viewOptions.floor, this.viewOptions.ceil);\n        if (ValueHelper.isNullOrUndefined(percent)) {\n            percent = 0;\n        }\n        if (this.viewOptions.rightToLeft) {\n            percent = 1 - percent;\n        }\n        return percent * this.maxHandlePosition;\n    }\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    positionToValue(position) {\n        let /** @type {?} */ percent = position / this.maxHandlePosition;\n        if (this.viewOptions.rightToLeft) {\n            percent = 1 - percent;\n        }\n        let /** @type {?} */ fn = ValueHelper.linearPositionToValue;\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.customPositionToValue)) {\n            fn = this.viewOptions.customPositionToValue;\n        }\n        else if (this.viewOptions.logScale) {\n            fn = ValueHelper.logPositionToValue;\n        }\n        const /** @type {?} */ value = fn(percent, this.viewOptions.floor, this.viewOptions.ceil);\n        return !ValueHelper.isNullOrUndefined(value) ? value : 0;\n    }\n    /**\n     * @param {?} event\n     * @param {?=} targetTouchId\n     * @return {?}\n     */\n    getEventXY(event, targetTouchId) {\n        if (event instanceof MouseEvent) {\n            return this.viewOptions.vertical ? event.clientY : event.clientX;\n        }\n        let /** @type {?} */ touchIndex = 0;\n        const /** @type {?} */ touches = event.touches;\n        if (!ValueHelper.isNullOrUndefined(targetTouchId)) {\n            for (let /** @type {?} */ i = 0; i < touches.length; i++) {\n                if (touches[i].identifier === targetTouchId) {\n                    touchIndex = i;\n                    break;\n                }\n            }\n        }\n        // Return the target touch or if the target touch was not found in the event\n        // returns the coordinates of the first touch\n        return this.viewOptions.vertical ? touches[touchIndex].clientY : touches[touchIndex].clientX;\n    }\n    /**\n     * @param {?} event\n     * @param {?=} targetTouchId\n     * @return {?}\n     */\n    getEventPosition(event, targetTouchId) {\n        const /** @type {?} */ sliderElementBoundingRect = this.elementRef.nativeElement.getBoundingClientRect();\n        const /** @type {?} */ sliderPos = this.viewOptions.vertical ?\n            sliderElementBoundingRect.bottom : sliderElementBoundingRect.left;\n        let /** @type {?} */ eventPos = 0;\n        if (this.viewOptions.vertical) {\n            eventPos = -this.getEventXY(event, targetTouchId) + sliderPos;\n        }\n        else {\n            eventPos = this.getEventXY(event, targetTouchId) - sliderPos;\n        }\n        return eventPos * this.viewOptions.scale - this.handleHalfDimension;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    getNearestHandle(event) {\n        if (!this.range) {\n            return PointerType.Min;\n        }\n        const /** @type {?} */ position = this.getEventPosition(event);\n        const /** @type {?} */ distanceMin = Math.abs(position - this.minHandleElement.position);\n        const /** @type {?} */ distanceMax = Math.abs(position - this.maxHandleElement.position);\n        if (distanceMin < distanceMax) {\n            return PointerType.Min;\n        }\n        else if (distanceMin > distanceMax) {\n            return PointerType.Max;\n        }\n        else if (!this.viewOptions.rightToLeft) {\n            // if event is at the same distance from min/max then if it's at left of minH, we return minH else maxH\n            return position < this.minHandleElement.position ? PointerType.Min : PointerType.Max;\n        }\n        // reverse in rtl\n        return position > this.minHandleElement.position ? PointerType.Min : PointerType.Max;\n    }\n    /**\n     * @return {?}\n     */\n    bindEvents() {\n        const /** @type {?} */ draggableRange = this.viewOptions.draggableRange;\n        if (!this.viewOptions.onlyBindHandles) {\n            this.selectionBarElement.on('mousedown', (event) => this.onBarStart(null, draggableRange, event, true, true, true));\n        }\n        if (this.viewOptions.draggableRangeOnly) {\n            this.minHandleElement.on('mousedown', (event) => this.onBarStart(PointerType.Min, draggableRange, event, true, true));\n            this.maxHandleElement.on('mousedown', (event) => this.onBarStart(PointerType.Max, draggableRange, event, true, true));\n        }\n        else {\n            this.minHandleElement.on('mousedown', (event) => this.onStart(PointerType.Min, event, true, true));\n            if (this.range) {\n                this.maxHandleElement.on('mousedown', (event) => this.onStart(PointerType.Max, event, true, true));\n            }\n            if (!this.viewOptions.onlyBindHandles) {\n                this.fullBarElement.on('mousedown', (event) => this.onStart(null, event, true, true, true));\n                this.ticksElement.on('mousedown', (event) => this.onStart(null, event, true, true, true, true));\n            }\n        }\n        if (!this.viewOptions.onlyBindHandles) {\n            this.selectionBarElement.onPassive('touchstart', (event) => this.onBarStart(null, draggableRange, event, true, true, true));\n        }\n        if (this.viewOptions.draggableRangeOnly) {\n            this.minHandleElement.onPassive('touchstart', (event) => this.onBarStart(PointerType.Min, draggableRange, event, true, true));\n            this.maxHandleElement.onPassive('touchstart', (event) => this.onBarStart(PointerType.Max, draggableRange, event, true, true));\n        }\n        else {\n            this.minHandleElement.onPassive('touchstart', (event) => this.onStart(PointerType.Min, event, true, true));\n            if (this.range) {\n                this.maxHandleElement.onPassive('touchstart', (event) => this.onStart(PointerType.Max, event, true, true));\n            }\n            if (!this.viewOptions.onlyBindHandles) {\n                this.fullBarElement.onPassive('touchstart', (event) => this.onStart(null, event, true, true, true));\n                this.ticksElement.onPassive('touchstart', (event) => this.onStart(null, event, false, false, true, true));\n            }\n        }\n        if (this.viewOptions.keyboardSupport) {\n            this.minHandleElement.on('focus', () => this.onPointerFocus(PointerType.Min));\n            if (this.range) {\n                this.maxHandleElement.on('focus', () => this.onPointerFocus(PointerType.Max));\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unbindEvents() {\n        this.unsubscribeOnMove();\n        this.unsubscribeOnEnd();\n        for (const /** @type {?} */ element of this.getAllSliderElements()) {\n            if (!ValueHelper.isNullOrUndefined(element)) {\n                element.off();\n            }\n        }\n    }\n    /**\n     * @param {?} pointerType\n     * @param {?} draggableRange\n     * @param {?} event\n     * @param {?} bindMove\n     * @param {?} bindEnd\n     * @param {?=} simulateImmediateMove\n     * @param {?=} simulateImmediateEnd\n     * @return {?}\n     */\n    onBarStart(pointerType, draggableRange, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd) {\n        if (draggableRange) {\n            this.onDragStart(pointerType, event, bindMove, bindEnd);\n        }\n        else {\n            this.onStart(pointerType, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd);\n        }\n    }\n    /**\n     * @param {?} pointerType\n     * @param {?} event\n     * @param {?} bindMove\n     * @param {?} bindEnd\n     * @param {?=} simulateImmediateMove\n     * @param {?=} simulateImmediateEnd\n     * @return {?}\n     */\n    onStart(pointerType, event, bindMove, bindEnd, simulateImmediateMove, simulateImmediateEnd) {\n        event.stopPropagation();\n        // Only call preventDefault() when handling non-passive events (passive events don't need it)\n        if (!CompatibilityHelper.isTouchEvent(event) || !detectPassiveEvents.hasSupport) {\n            event.preventDefault();\n        }\n        // We have to do this in case the HTML where the sliders are on\n        // have been animated into view.\n        this.calculateViewDimensions();\n        if (ValueHelper.isNullOrUndefined(pointerType)) {\n            pointerType = this.getNearestHandle(event);\n        }\n        this.currentTrackingPointer = pointerType;\n        const /** @type {?} */ pointerElement = this.getPointerElement(pointerType);\n        pointerElement.active = true;\n        if (this.viewOptions.keyboardSupport) {\n            pointerElement.focus();\n        }\n        if (bindMove) {\n            this.unsubscribeOnMove();\n            const /** @type {?} */ onMoveCallback = (e) => this.dragging.active ? this.onDragMove(e) : this.onMove(e);\n            if (CompatibilityHelper.isTouchEvent(event)) {\n                this.onMoveEventListener = this.eventListenerHelper.attachPassiveEventListener(document, 'touchmove', onMoveCallback, this.viewOptions.touchEventsInterval);\n            }\n            else {\n                this.onMoveEventListener = this.eventListenerHelper.attachEventListener(document, 'mousemove', onMoveCallback, this.viewOptions.mouseEventsInterval);\n            }\n        }\n        if (bindEnd) {\n            this.unsubscribeOnEnd();\n            const /** @type {?} */ onEndCallback = (e) => this.onEnd(e);\n            if (CompatibilityHelper.isTouchEvent(event)) {\n                this.onEndEventListener = this.eventListenerHelper.attachPassiveEventListener(document, 'touchend', onEndCallback);\n            }\n            else {\n                this.onEndEventListener = this.eventListenerHelper.attachEventListener(document, 'mouseup', onEndCallback);\n            }\n        }\n        this.userChangeStart.emit(this.getChangeContext());\n        if (CompatibilityHelper.isTouchEvent(event) && !ValueHelper.isNullOrUndefined((/** @type {?} */ (event)).changedTouches)) {\n            // Store the touch identifier\n            if (ValueHelper.isNullOrUndefined(this.touchId)) {\n                this.touchId = (/** @type {?} */ (event)).changedTouches[0].identifier;\n            }\n        }\n        // Click events, either with mouse or touch gesture are weird. Sometimes they result in full\n        // start, move, end sequence, and sometimes, they don't - they only invoke mousedown\n        // As a workaround, we simulate the first move event and the end event if it's necessary\n        if (simulateImmediateMove) {\n            this.onMove(event, true);\n        }\n        if (simulateImmediateEnd) {\n            this.onEnd(event);\n        }\n    }\n    /**\n     * @param {?} event\n     * @param {?=} fromTick\n     * @return {?}\n     */\n    onMove(event, fromTick) {\n        let /** @type {?} */ touchForThisSlider = null;\n        if (CompatibilityHelper.isTouchEvent(event)) {\n            const /** @type {?} */ changedTouches = (/** @type {?} */ (event)).changedTouches;\n            for (let /** @type {?} */ i = 0; i < changedTouches.length; i++) {\n                if (changedTouches[i].identifier === this.touchId) {\n                    touchForThisSlider = changedTouches[i];\n                    break;\n                }\n            }\n            if (ValueHelper.isNullOrUndefined(touchForThisSlider)) {\n                return;\n            }\n        }\n        const /** @type {?} */ newPos = !ValueHelper.isNullOrUndefined(touchForThisSlider)\n            ? this.getEventPosition(event, touchForThisSlider.identifier)\n            : this.getEventPosition(event);\n        let /** @type {?} */ newValue;\n        const /** @type {?} */ ceilValue = this.viewOptions.rightToLeft\n            ? this.viewOptions.floor\n            : this.viewOptions.ceil;\n        const /** @type {?} */ floorValue = this.viewOptions.rightToLeft ? this.viewOptions.ceil : this.viewOptions.floor;\n        if (newPos <= 0) {\n            newValue = floorValue;\n        }\n        else if (newPos >= this.maxHandlePosition) {\n            newValue = ceilValue;\n        }\n        else {\n            newValue = this.positionToValue(newPos);\n            if (fromTick && !ValueHelper.isNullOrUndefined(this.viewOptions.tickStep)) {\n                newValue = this.roundStep(newValue, this.viewOptions.tickStep);\n            }\n            else {\n                newValue = this.roundStep(newValue);\n            }\n        }\n        this.positionTrackingHandle(newValue);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onEnd(event) {\n        if (CompatibilityHelper.isTouchEvent(event)) {\n            const /** @type {?} */ changedTouches = (/** @type {?} */ (event)).changedTouches;\n            if (changedTouches[0].identifier !== this.touchId) {\n                return;\n            }\n        }\n        this.touchId = null;\n        if (!this.viewOptions.keyboardSupport) {\n            this.minHandleElement.active = false;\n            this.maxHandleElement.active = false;\n            this.currentTrackingPointer = null;\n        }\n        this.dragging.active = false;\n        this.unsubscribeOnMove();\n        this.unsubscribeOnEnd();\n        this.userChangeEnd.emit(this.getChangeContext());\n    }\n    /**\n     * @param {?} pointerType\n     * @return {?}\n     */\n    onPointerFocus(pointerType) {\n        const /** @type {?} */ pointerElement = this.getPointerElement(pointerType);\n        pointerElement.on('blur', () => this.onPointerBlur(pointerElement));\n        pointerElement.on('keydown', (event) => this.onKeyboardEvent(event));\n        pointerElement.on('keyup', () => this.onKeyUp());\n        pointerElement.active = true;\n        this.currentTrackingPointer = pointerType;\n        this.currentFocusPointer = pointerType;\n        this.firstKeyDown = true;\n    }\n    /**\n     * @return {?}\n     */\n    onKeyUp() {\n        this.firstKeyDown = true;\n        this.userChangeEnd.emit(this.getChangeContext());\n    }\n    /**\n     * @param {?} pointer\n     * @return {?}\n     */\n    onPointerBlur(pointer) {\n        pointer.off('blur');\n        pointer.off('keydown');\n        pointer.off('keyup');\n        pointer.active = false;\n        if (ValueHelper.isNullOrUndefined(this.touchId)) {\n            this.currentTrackingPointer = null;\n            this.currentFocusPointer = null;\n        }\n    }\n    /**\n     * @param {?} currentValue\n     * @return {?}\n     */\n    getKeyActions(currentValue) {\n        const /** @type {?} */ valueRange = this.viewOptions.ceil - this.viewOptions.floor;\n        let /** @type {?} */ increaseStep = currentValue + this.viewOptions.step;\n        let /** @type {?} */ decreaseStep = currentValue - this.viewOptions.step;\n        let /** @type {?} */ increasePage = currentValue + valueRange / 10;\n        let /** @type {?} */ decreasePage = currentValue - valueRange / 10;\n        if (this.viewOptions.reversedControls) {\n            increaseStep = currentValue - this.viewOptions.step;\n            decreaseStep = currentValue + this.viewOptions.step;\n            increasePage = currentValue - valueRange / 10;\n            decreasePage = currentValue + valueRange / 10;\n        }\n        // Left to right default actions\n        const /** @type {?} */ actions = {\n            UP: increaseStep,\n            DOWN: decreaseStep,\n            LEFT: decreaseStep,\n            RIGHT: increaseStep,\n            PAGEUP: increasePage,\n            PAGEDOWN: decreasePage,\n            HOME: this.viewOptions.reversedControls ? this.viewOptions.ceil : this.viewOptions.floor,\n            END: this.viewOptions.reversedControls ? this.viewOptions.floor : this.viewOptions.ceil,\n        };\n        // right to left means swapping right and left arrows\n        if (this.viewOptions.rightToLeft) {\n            actions[\"LEFT\"] = increaseStep;\n            actions[\"RIGHT\"] = decreaseStep;\n            // right to left and vertical means we also swap up and down\n            if (this.viewOptions.vertical) {\n                actions[\"UP\"] = decreaseStep;\n                actions[\"DOWN\"] = increaseStep;\n            }\n        }\n        return actions;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyboardEvent(event) {\n        const /** @type {?} */ currentValue = this.getCurrentTrackingValue();\n        const /** @type {?} */ keyCode = !ValueHelper.isNullOrUndefined(event.keyCode)\n            ? event.keyCode\n            : event.which;\n        const /** @type {?} */ keys = {\n            38: 'UP',\n            40: 'DOWN',\n            37: 'LEFT',\n            39: 'RIGHT',\n            33: 'PAGEUP',\n            34: 'PAGEDOWN',\n            36: 'HOME',\n            35: 'END',\n        };\n        const /** @type {?} */ actions = this.getKeyActions(currentValue);\n        const /** @type {?} */ key = keys[keyCode];\n        const /** @type {?} */ action = actions[key];\n        if (ValueHelper.isNullOrUndefined(action) || ValueHelper.isNullOrUndefined(this.currentTrackingPointer)) {\n            return;\n        }\n        event.preventDefault();\n        if (this.firstKeyDown) {\n            this.firstKeyDown = false;\n            this.userChangeStart.emit(this.getChangeContext());\n        }\n        const /** @type {?} */ actionValue = MathHelper.clampToRange(action, this.viewOptions.floor, this.viewOptions.ceil);\n        const /** @type {?} */ newValue = this.roundStep(actionValue);\n        if (!this.viewOptions.draggableRangeOnly) {\n            this.positionTrackingHandle(newValue);\n        }\n        else {\n            const /** @type {?} */ difference = this.viewHighValue - this.viewLowValue;\n            let /** @type {?} */ newMinValue;\n            let /** @type {?} */ newMaxValue;\n            if (this.currentTrackingPointer === PointerType.Min) {\n                newMinValue = newValue;\n                newMaxValue = newValue + difference;\n                if (newMaxValue > this.viewOptions.ceil) {\n                    newMaxValue = this.viewOptions.ceil;\n                    newMinValue = newMaxValue - difference;\n                }\n            }\n            else if (this.currentTrackingPointer === PointerType.Max) {\n                newMaxValue = newValue;\n                newMinValue = newValue - difference;\n                if (newMinValue < this.viewOptions.floor) {\n                    newMinValue = this.viewOptions.floor;\n                    newMaxValue = newMinValue + difference;\n                }\n            }\n            this.positionTrackingBar(newMinValue, newMaxValue);\n        }\n    }\n    /**\n     * @param {?} pointerType\n     * @param {?} event\n     * @param {?} bindMove\n     * @param {?} bindEnd\n     * @return {?}\n     */\n    onDragStart(pointerType, event, bindMove, bindEnd) {\n        const /** @type {?} */ position = this.getEventPosition(event);\n        this.dragging = new Dragging();\n        this.dragging.active = true;\n        this.dragging.value = this.positionToValue(position);\n        this.dragging.difference = this.viewHighValue - this.viewLowValue;\n        this.dragging.lowLimit = this.viewOptions.rightToLeft\n            ? this.minHandleElement.position - position\n            : position - this.minHandleElement.position;\n        this.dragging.highLimit = this.viewOptions.rightToLeft\n            ? position - this.maxHandleElement.position\n            : this.maxHandleElement.position - position;\n        this.onStart(pointerType, event, bindMove, bindEnd);\n    }\n    /**\n     * Get min value depending on whether the newPos is outOfBounds above or below the bar and rightToLeft\n     * @param {?} newPos\n     * @param {?} outOfBounds\n     * @param {?} isAbove\n     * @return {?}\n     */\n    getMinValue(newPos, outOfBounds, isAbove) {\n        const /** @type {?} */ isRTL = this.viewOptions.rightToLeft;\n        let /** @type {?} */ value = null;\n        if (outOfBounds) {\n            if (isAbove) {\n                value = isRTL\n                    ? this.viewOptions.floor\n                    : this.viewOptions.ceil - this.dragging.difference;\n            }\n            else {\n                value = isRTL\n                    ? this.viewOptions.ceil - this.dragging.difference\n                    : this.viewOptions.floor;\n            }\n        }\n        else {\n            value = isRTL\n                ? this.positionToValue(newPos + this.dragging.lowLimit)\n                : this.positionToValue(newPos - this.dragging.lowLimit);\n        }\n        return this.roundStep(value);\n    }\n    /**\n     * Get max value depending on whether the newPos is outOfBounds above or below the bar and rightToLeft\n     * @param {?} newPos\n     * @param {?} outOfBounds\n     * @param {?} isAbove\n     * @return {?}\n     */\n    getMaxValue(newPos, outOfBounds, isAbove) {\n        const /** @type {?} */ isRTL = this.viewOptions.rightToLeft;\n        let /** @type {?} */ value = null;\n        if (outOfBounds) {\n            if (isAbove) {\n                value = isRTL\n                    ? this.viewOptions.floor + this.dragging.difference\n                    : this.viewOptions.ceil;\n            }\n            else {\n                value = isRTL\n                    ? this.viewOptions.ceil\n                    : this.viewOptions.floor + this.dragging.difference;\n            }\n        }\n        else {\n            if (isRTL) {\n                value =\n                    this.positionToValue(newPos + this.dragging.lowLimit) +\n                        this.dragging.difference;\n            }\n            else {\n                value =\n                    this.positionToValue(newPos - this.dragging.lowLimit) +\n                        this.dragging.difference;\n            }\n        }\n        return this.roundStep(value);\n    }\n    /**\n     * @param {?=} event\n     * @return {?}\n     */\n    onDragMove(event) {\n        const /** @type {?} */ newPos = this.getEventPosition(event);\n        let /** @type {?} */ ceilLimit, /** @type {?} */\n        floorLimit, /** @type {?} */\n        floorHandleElement, /** @type {?} */\n        ceilHandleElement;\n        if (this.viewOptions.rightToLeft) {\n            ceilLimit = this.dragging.lowLimit;\n            floorLimit = this.dragging.highLimit;\n            floorHandleElement = this.maxHandleElement;\n            ceilHandleElement = this.minHandleElement;\n        }\n        else {\n            ceilLimit = this.dragging.highLimit;\n            floorLimit = this.dragging.lowLimit;\n            floorHandleElement = this.minHandleElement;\n            ceilHandleElement = this.maxHandleElement;\n        }\n        const /** @type {?} */ isUnderFloorLimit = (newPos <= floorLimit);\n        const /** @type {?} */ isOverCeilLimit = (newPos >= this.maxHandlePosition - ceilLimit);\n        let /** @type {?} */ newMinValue;\n        let /** @type {?} */ newMaxValue;\n        if (isUnderFloorLimit) {\n            if (floorHandleElement.position === 0) {\n                return;\n            }\n            newMinValue = this.getMinValue(newPos, true, false);\n            newMaxValue = this.getMaxValue(newPos, true, false);\n        }\n        else if (isOverCeilLimit) {\n            if (ceilHandleElement.position === this.maxHandlePosition) {\n                return;\n            }\n            newMaxValue = this.getMaxValue(newPos, true, true);\n            newMinValue = this.getMinValue(newPos, true, true);\n        }\n        else {\n            newMinValue = this.getMinValue(newPos, false, false);\n            newMaxValue = this.getMaxValue(newPos, false, false);\n        }\n        this.positionTrackingBar(newMinValue, newMaxValue);\n    }\n    /**\n     * @param {?} newMinValue\n     * @param {?} newMaxValue\n     * @return {?}\n     */\n    positionTrackingBar(newMinValue, newMaxValue) {\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.minLimit) &&\n            newMinValue < this.viewOptions.minLimit) {\n            newMinValue = this.viewOptions.minLimit;\n            newMaxValue = MathHelper.roundToPrecisionLimit(newMinValue + this.dragging.difference, this.viewOptions.precisionLimit);\n        }\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxLimit) &&\n            newMaxValue > this.viewOptions.maxLimit) {\n            newMaxValue = this.viewOptions.maxLimit;\n            newMinValue = MathHelper.roundToPrecisionLimit(newMaxValue - this.dragging.difference, this.viewOptions.precisionLimit);\n        }\n        this.viewLowValue = newMinValue;\n        this.viewHighValue = newMaxValue;\n        this.applyViewChange();\n        this.updateHandles(PointerType.Min, this.valueToPosition(newMinValue));\n        this.updateHandles(PointerType.Max, this.valueToPosition(newMaxValue));\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    positionTrackingHandle(newValue) {\n        newValue = this.applyMinMaxLimit(newValue);\n        if (this.range) {\n            if (this.viewOptions.pushRange) {\n                newValue = this.applyPushRange(newValue);\n            }\n            else {\n                if (this.viewOptions.noSwitching) {\n                    if (this.currentTrackingPointer === PointerType.Min &&\n                        newValue > this.viewHighValue) {\n                        newValue = this.applyMinMaxRange(this.viewHighValue);\n                    }\n                    else if (this.currentTrackingPointer === PointerType.Max &&\n                        newValue < this.viewLowValue) {\n                        newValue = this.applyMinMaxRange(this.viewLowValue);\n                    }\n                }\n                newValue = this.applyMinMaxRange(newValue);\n                /* This is to check if we need to switch the min and max handles */\n                if (this.currentTrackingPointer === PointerType.Min && newValue > this.viewHighValue) {\n                    this.viewLowValue = this.viewHighValue;\n                    this.applyViewChange();\n                    this.updateHandles(PointerType.Min, this.maxHandleElement.position);\n                    this.updateAriaAttributes();\n                    this.currentTrackingPointer = PointerType.Max;\n                    this.minHandleElement.active = false;\n                    this.maxHandleElement.active = true;\n                    if (this.viewOptions.keyboardSupport) {\n                        this.maxHandleElement.focus();\n                    }\n                }\n                else if (this.currentTrackingPointer === PointerType.Max &&\n                    newValue < this.viewLowValue) {\n                    this.viewHighValue = this.viewLowValue;\n                    this.applyViewChange();\n                    this.updateHandles(PointerType.Max, this.minHandleElement.position);\n                    this.updateAriaAttributes();\n                    this.currentTrackingPointer = PointerType.Min;\n                    this.maxHandleElement.active = false;\n                    this.minHandleElement.active = true;\n                    if (this.viewOptions.keyboardSupport) {\n                        this.minHandleElement.focus();\n                    }\n                }\n            }\n        }\n        if (this.getCurrentTrackingValue() !== newValue) {\n            if (this.currentTrackingPointer === PointerType.Min) {\n                this.viewLowValue = newValue;\n                this.applyViewChange();\n            }\n            else if (this.currentTrackingPointer === PointerType.Max) {\n                this.viewHighValue = newValue;\n                this.applyViewChange();\n            }\n            this.updateHandles(this.currentTrackingPointer, this.valueToPosition(newValue));\n            this.updateAriaAttributes();\n        }\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    applyMinMaxLimit(newValue) {\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.minLimit) && newValue < this.viewOptions.minLimit) {\n            return this.viewOptions.minLimit;\n        }\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxLimit) && newValue > this.viewOptions.maxLimit) {\n            return this.viewOptions.maxLimit;\n        }\n        return newValue;\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    applyMinMaxRange(newValue) {\n        const /** @type {?} */ oppositeValue = (this.currentTrackingPointer === PointerType.Min)\n            ? this.viewHighValue\n            : this.viewLowValue;\n        const /** @type {?} */ difference = Math.abs(newValue - oppositeValue);\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.minRange)) {\n            if (difference < this.viewOptions.minRange) {\n                if (this.currentTrackingPointer === PointerType.Min) {\n                    return MathHelper.roundToPrecisionLimit(this.viewHighValue - this.viewOptions.minRange, this.viewOptions.precisionLimit);\n                }\n                else if (this.currentTrackingPointer === PointerType.Max) {\n                    return MathHelper.roundToPrecisionLimit(this.viewLowValue + this.viewOptions.minRange, this.viewOptions.precisionLimit);\n                }\n            }\n        }\n        if (!ValueHelper.isNullOrUndefined(this.viewOptions.maxRange)) {\n            if (difference > this.viewOptions.maxRange) {\n                if (this.currentTrackingPointer === PointerType.Min) {\n                    return MathHelper.roundToPrecisionLimit(this.viewHighValue - this.viewOptions.maxRange, this.viewOptions.precisionLimit);\n                }\n                else if (this.currentTrackingPointer === PointerType.Max) {\n                    return MathHelper.roundToPrecisionLimit(this.viewLowValue + this.viewOptions.maxRange, this.viewOptions.precisionLimit);\n                }\n            }\n        }\n        return newValue;\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    applyPushRange(newValue) {\n        const /** @type {?} */ difference = (this.currentTrackingPointer === PointerType.Min)\n            ? this.viewHighValue - newValue\n            : newValue - this.viewLowValue;\n        const /** @type {?} */ minRange = (!ValueHelper.isNullOrUndefined(this.viewOptions.minRange))\n            ? this.viewOptions.minRange\n            : this.viewOptions.step;\n        const /** @type {?} */ maxRange = this.viewOptions.maxRange;\n        // if smaller than minRange\n        if (difference < minRange) {\n            if (this.currentTrackingPointer === PointerType.Min) {\n                this.viewHighValue = MathHelper.roundToPrecisionLimit(Math.min(newValue + minRange, this.viewOptions.ceil), this.viewOptions.precisionLimit);\n                newValue = MathHelper.roundToPrecisionLimit(this.viewHighValue - minRange, this.viewOptions.precisionLimit);\n                this.applyViewChange();\n                this.updateHandles(PointerType.Max, this.valueToPosition(this.viewHighValue));\n            }\n            else if (this.currentTrackingPointer === PointerType.Max) {\n                this.viewLowValue = MathHelper.roundToPrecisionLimit(Math.max(newValue - minRange, this.viewOptions.floor), this.viewOptions.precisionLimit);\n                newValue = MathHelper.roundToPrecisionLimit(this.viewLowValue + minRange, this.viewOptions.precisionLimit);\n                this.applyViewChange();\n                this.updateHandles(PointerType.Min, this.valueToPosition(this.viewLowValue));\n            }\n            this.updateAriaAttributes();\n        }\n        else if (!ValueHelper.isNullOrUndefined(maxRange) && difference > maxRange) {\n            // if greater than maxRange\n            if (this.currentTrackingPointer === PointerType.Min) {\n                this.viewHighValue = MathHelper.roundToPrecisionLimit(newValue + maxRange, this.viewOptions.precisionLimit);\n                this.applyViewChange();\n                this.updateHandles(PointerType.Max, this.valueToPosition(this.viewHighValue));\n            }\n            else if (this.currentTrackingPointer === PointerType.Max) {\n                this.viewLowValue = MathHelper.roundToPrecisionLimit(newValue - maxRange, this.viewOptions.precisionLimit);\n                this.applyViewChange();\n                this.updateHandles(PointerType.Min, this.valueToPosition(this.viewLowValue));\n            }\n            this.updateAriaAttributes();\n        }\n        return newValue;\n    }\n    /**\n     * @return {?}\n     */\n    getChangeContext() {\n        const /** @type {?} */ changeContext = new ChangeContext();\n        changeContext.pointerType = this.currentTrackingPointer;\n        changeContext.value = +this.value;\n        if (this.range) {\n            changeContext.highValue = +this.highValue;\n        }\n        return changeContext;\n    }\n}\nSliderComponent.ɵfac = function SliderComponent_Factory(t) { return new (t || SliderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nSliderComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SliderComponent, selectors: [[\"ng5-slider\"]], contentQueries: function SliderComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, _c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tooltipTemplate = _t.first);\n    } }, viewQuery: function SliderComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c1, 5, SliderElementDirective);\n        ɵngcc0.ɵɵviewQuery(_c2, 5, SliderElementDirective);\n        ɵngcc0.ɵɵviewQuery(_c3, 5, SliderElementDirective);\n        ɵngcc0.ɵɵviewQuery(_c4, 5, SliderElementDirective);\n        ɵngcc0.ɵɵviewQuery(_c5, 5, SliderHandleDirective);\n        ɵngcc0.ɵɵviewQuery(_c6, 5, SliderHandleDirective);\n        ɵngcc0.ɵɵviewQuery(_c7, 5, SliderLabelDirective);\n        ɵngcc0.ɵɵviewQuery(_c8, 5, SliderLabelDirective);\n        ɵngcc0.ɵɵviewQuery(_c9, 5, SliderLabelDirective);\n        ɵngcc0.ɵɵviewQuery(_c10, 5, SliderLabelDirective);\n        ɵngcc0.ɵɵviewQuery(_c11, 5, SliderLabelDirective);\n        ɵngcc0.ɵɵviewQuery(_c12, 5, SliderElementDirective);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.leftOuterSelectionBarElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.rightOuterSelectionBarElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fullBarElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.selectionBarElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.minHandleElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.maxHandleElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.floorLabelElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ceilLabelElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.minHandleLabelElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.maxHandleLabelElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.combinedLabelElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ticksElement = _t.first);\n    } }, hostAttrs: [1, \"ng5-slider\"], hostVars: 5, hostBindings: function SliderComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"resize\", function SliderComponent_resize_HostBindingHandler($event) { return ctx.onResize($event); }, false, ɵngcc0.ɵɵresolveWindow);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.sliderElementDisabledAttr);\n        ɵngcc0.ɵɵclassProp(\"vertical\", ctx.sliderElementVerticalClass)(\"animate\", ctx.sliderElementAnimateClass);\n    } }, inputs: { value: \"value\", highValue: \"highValue\", options: \"options\", manualRefresh: \"manualRefresh\", triggerFocus: \"triggerFocus\" }, outputs: { valueChange: \"valueChange\", highValueChange: \"highValueChange\", userChangeStart: \"userChangeStart\", userChange: \"userChange\", userChangeEnd: \"userChangeEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([NG5_SLIDER_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 29, vars: 13, consts: [[\"ng5SliderElement\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bar-wrapper\", \"ng5-slider-left-out-selection\"], [\"leftOuterSelectionBar\", \"\"], [1, \"ng5-slider-span\", \"ng5-slider-bar\"], [\"ng5SliderElement\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bar-wrapper\", \"ng5-slider-right-out-selection\"], [\"rightOuterSelectionBar\", \"\"], [\"ng5SliderElement\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bar-wrapper\", \"ng5-slider-full-bar\"], [\"fullBar\", \"\"], [\"ng5SliderElement\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bar-wrapper\", \"ng5-slider-selection-bar\"], [\"selectionBar\", \"\"], [1, \"ng5-slider-span\", \"ng5-slider-bar\", \"ng5-slider-selection\", 3, \"ngStyle\"], [\"ng5SliderHandle\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-pointer\", \"ng5-slider-pointer-min\", 3, \"ngStyle\"], [\"minHandle\", \"\"], [\"ng5SliderHandle\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-pointer\", \"ng5-slider-pointer-max\", 3, \"ngStyle\"], [\"maxHandle\", \"\"], [\"ng5SliderLabel\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bubble\", \"ng5-slider-limit\", \"ng5-slider-floor\"], [\"floorLabel\", \"\"], [\"ng5SliderLabel\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bubble\", \"ng5-slider-limit\", \"ng5-slider-ceil\"], [\"ceilLabel\", \"\"], [\"ng5SliderLabel\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bubble\", \"ng5-slider-model-value\"], [\"minHandleLabel\", \"\"], [\"ng5SliderLabel\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bubble\", \"ng5-slider-model-high\"], [\"maxHandleLabel\", \"\"], [\"ng5SliderLabel\", \"\", 1, \"ng5-slider-span\", \"ng5-slider-bubble\", \"ng5-slider-combined\"], [\"combinedLabel\", \"\"], [\"ng5SliderElement\", \"\", 1, \"ng5-slider-ticks\", 3, \"hidden\"], [\"ticksElement\", \"\"], [\"class\", \"ng5-slider-tick\", 3, \"ngClass\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [1, \"ng5-slider-tick\", 3, \"ngClass\", \"ngStyle\"], [3, \"template\", \"tooltip\", \"placement\"], [\"class\", \"ng5-slider-span ng5-slider-tick-value\", 3, \"template\", \"tooltip\", \"placement\", \"content\", 4, \"ngIf\"], [\"class\", \"ng5-slider-span ng5-slider-tick-legend\", 3, \"innerHTML\", 4, \"ngIf\"], [1, \"ng5-slider-span\", \"ng5-slider-tick-value\", 3, \"template\", \"tooltip\", \"placement\", \"content\"], [1, \"ng5-slider-span\", \"ng5-slider-tick-legend\", 3, \"innerHTML\"]], template: function SliderComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0, 1);\n        ɵngcc0.ɵɵelement(2, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"span\", 3, 4);\n        ɵngcc0.ɵɵelement(5, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"span\", 5, 6);\n        ɵngcc0.ɵɵelement(8, \"span\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"span\", 7, 8);\n        ɵngcc0.ɵɵelement(11, \"span\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(12, \"span\", 10, 11)(14, \"span\", 12, 13)(16, \"span\", 14, 15)(18, \"span\", 16, 17)(20, \"span\", 18, 19)(22, \"span\", 20, 21)(24, \"span\", 22, 23);\n        ɵngcc0.ɵɵelementStart(26, \"span\", 24, 25);\n        ɵngcc0.ɵɵtemplate(28, SliderComponent_span_28_Template, 4, 9, \"span\", 26);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(6);\n        ɵngcc0.ɵɵclassProp(\"ng5-slider-transparent\", ctx.fullBarTransparentClass);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵclassProp(\"ng5-slider-draggable\", ctx.selectionBarDraggableClass);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.barStyle);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.minPointerStyle);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵstyleProp(\"display\", ctx.range ? \"inherit\" : \"none\");\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.maxPointerStyle);\n        ɵngcc0.ɵɵadvance(12);\n        ɵngcc0.ɵɵclassProp(\"ng5-slider-ticks-values-under\", ctx.ticksUnderValuesClass);\n        ɵngcc0.ɵɵproperty(\"hidden\", !ctx.showTicks);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.ticks);\n    } }, dependencies: function () { return [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgStyle, SliderElementDirective, SliderHandleDirective, SliderLabelDirective, TooltipWrapperComponent]; }, styles: [\".ng5-slider{display:inline-block;position:relative;height:4px;width:100%;margin:35px 0 15px;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y}  .ng5-slider.with-legend{margin-bottom:40px}  .ng5-slider[disabled]{cursor:not-allowed}  .ng5-slider[disabled] .ng5-slider-pointer{cursor:not-allowed;background-color:#d8e0f3}  .ng5-slider[disabled] .ng5-slider-draggable{cursor:not-allowed}  .ng5-slider[disabled] .ng5-slider-selection{background:#8b91a2}  .ng5-slider[disabled] .ng5-slider-tick{cursor:not-allowed}  .ng5-slider[disabled] .ng5-slider-tick.ng5-slider-selected{background:#8b91a2}  .ng5-slider .ng5-slider-span{white-space:nowrap;position:absolute;display:inline-block}  .ng5-slider .ng5-slider-base{width:100%;height:100%;padding:0}  .ng5-slider .ng5-slider-bar-wrapper{left:0;-webkit-box-sizing:border-box;box-sizing:border-box;margin-top:-16px;padding-top:16px;width:100%;height:32px;z-index:1}  .ng5-slider .ng5-slider-draggable{cursor:move}  .ng5-slider .ng5-slider-bar{left:0;width:100%;height:4px;z-index:1;background:#d8e0f3;border-radius:2px}  .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-transparent .ng5-slider-bar{background:0 0}  .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-left-out-selection .ng5-slider-bar{background:#df002d}  .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-right-out-selection .ng5-slider-bar{background:#03a688}  .ng5-slider .ng5-slider-selection{z-index:2;background:#0db9f0;border-radius:2px}  .ng5-slider .ng5-slider-pointer{cursor:pointer;width:32px;height:32px;top:-14px;background-color:#0db9f0;z-index:3;border-radius:16px}  .ng5-slider .ng5-slider-pointer:after{content:'';width:8px;height:8px;position:absolute;top:12px;left:12px;border-radius:4px;background:#fff}  .ng5-slider .ng5-slider-pointer:hover:after{background-color:#fff}  .ng5-slider .ng5-slider-pointer.ng5-slider-active{z-index:4}  .ng5-slider .ng5-slider-pointer.ng5-slider-active:after{background-color:#451aff}  .ng5-slider .ng5-slider-bubble{cursor:default;bottom:16px;padding:1px 3px;color:#55637d;font-size:16px}  .ng5-slider .ng5-slider-bubble.ng5-slider-limit{color:#55637d}  .ng5-slider .ng5-slider-ticks{-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;height:0;position:absolute;left:0;top:-3px;margin:0;z-index:1;list-style:none}  .ng5-slider .ng5-slider-ticks-values-under .ng5-slider-tick-value{top:auto;bottom:-36px}  .ng5-slider .ng5-slider-tick{text-align:center;cursor:pointer;width:10px;height:10px;background:#d8e0f3;border-radius:50%;position:absolute;top:0;left:0;margin-left:11px}  .ng5-slider .ng5-slider-tick.ng5-slider-selected{background:#0db9f0}  .ng5-slider .ng5-slider-tick-value{position:absolute;top:-34px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0)}  .ng5-slider .ng5-slider-tick-legend{position:absolute;top:24px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);max-width:50px;white-space:normal}  .ng5-slider.vertical{position:relative;width:4px;height:100%;margin:0 20px;padding:0;vertical-align:baseline;-ms-touch-action:pan-x;touch-action:pan-x}  .ng5-slider.vertical .ng5-slider-base{width:100%;height:100%;padding:0}  .ng5-slider.vertical .ng5-slider-bar-wrapper{top:auto;left:0;margin:0 0 0 -16px;padding:0 0 0 16px;height:100%;width:32px}  .ng5-slider.vertical .ng5-slider-bar{bottom:0;left:auto;width:4px;height:100%}  .ng5-slider.vertical .ng5-slider-pointer{left:-14px!important;top:auto;bottom:0}  .ng5-slider.vertical .ng5-slider-bubble{left:16px!important;bottom:0}  .ng5-slider.vertical .ng5-slider-ticks{height:100%;width:0;left:-3px;top:0;z-index:1}  .ng5-slider.vertical .ng5-slider-tick{vertical-align:middle;margin-left:auto;margin-top:11px}  .ng5-slider.vertical .ng5-slider-tick-value{left:24px;top:auto;-webkit-transform:translate(0,-28%);transform:translate(0,-28%)}  .ng5-slider.vertical .ng5-slider-tick-legend{top:auto;right:24px;-webkit-transform:translate(0,-28%);transform:translate(0,-28%);max-width:none;white-space:nowrap}  .ng5-slider.vertical .ng5-slider-ticks-values-under .ng5-slider-tick-value{bottom:auto;left:auto;right:24px}  .ng5-slider *{-webkit-transition:none;transition:none}  .ng5-slider.animate .ng5-slider-bar-wrapper{-webkit-transition:all linear .3s;transition:all linear .3s}  .ng5-slider.animate .ng5-slider-selection{-webkit-transition:background-color linear .3s;transition:background-color linear .3s}  .ng5-slider.animate .ng5-slider-pointer{-webkit-transition:all linear .3s;transition:all linear .3s}  .ng5-slider.animate .ng5-slider-bubble{-webkit-transition:all linear .3s;transition:all linear .3s}  .ng5-slider.animate .ng5-slider-bubble.ng5-slider-limit{-webkit-transition:opacity linear .3s;transition:opacity linear .3s}  .ng5-slider.animate .ng5-slider-bubble.ng5-slider-combined{-webkit-transition:opacity linear .3s;transition:opacity linear .3s}  .ng5-slider.animate .ng5-slider-tick{-webkit-transition:background-color linear .3s;transition:background-color linear .3s}\"] });\n/** @nocollapse */\nSliderComponent.ctorParameters = () => [\n    { type: Renderer2, },\n    { type: ElementRef, },\n    { type: ChangeDetectorRef, },\n    { type: NgZone, },\n];\nSliderComponent.propDecorators = {\n    \"value\": [{ type: Input },],\n    \"valueChange\": [{ type: Output },],\n    \"highValue\": [{ type: Input },],\n    \"highValueChange\": [{ type: Output },],\n    \"options\": [{ type: Input },],\n    \"userChangeStart\": [{ type: Output },],\n    \"userChange\": [{ type: Output },],\n    \"userChangeEnd\": [{ type: Output },],\n    \"manualRefresh\": [{ type: Input },],\n    \"triggerFocus\": [{ type: Input },],\n    \"leftOuterSelectionBarElement\": [{ type: ViewChild, args: ['leftOuterSelectionBar', { read: SliderElementDirective },] },],\n    \"rightOuterSelectionBarElement\": [{ type: ViewChild, args: ['rightOuterSelectionBar', { read: SliderElementDirective },] },],\n    \"fullBarElement\": [{ type: ViewChild, args: ['fullBar', { read: SliderElementDirective },] },],\n    \"selectionBarElement\": [{ type: ViewChild, args: ['selectionBar', { read: SliderElementDirective },] },],\n    \"minHandleElement\": [{ type: ViewChild, args: ['minHandle', { read: SliderHandleDirective },] },],\n    \"maxHandleElement\": [{ type: ViewChild, args: ['maxHandle', { read: SliderHandleDirective },] },],\n    \"floorLabelElement\": [{ type: ViewChild, args: ['floorLabel', { read: SliderLabelDirective },] },],\n    \"ceilLabelElement\": [{ type: ViewChild, args: ['ceilLabel', { read: SliderLabelDirective },] },],\n    \"minHandleLabelElement\": [{ type: ViewChild, args: ['minHandleLabel', { read: SliderLabelDirective },] },],\n    \"maxHandleLabelElement\": [{ type: ViewChild, args: ['maxHandleLabel', { read: SliderLabelDirective },] },],\n    \"combinedLabelElement\": [{ type: ViewChild, args: ['combinedLabel', { read: SliderLabelDirective },] },],\n    \"ticksElement\": [{ type: ViewChild, args: ['ticksElement', { read: SliderElementDirective },] },],\n    \"tooltipTemplate\": [{ type: ContentChild, args: ['tooltipTemplate',] },],\n    \"sliderElementVerticalClass\": [{ type: HostBinding, args: ['class.vertical',] },],\n    \"sliderElementAnimateClass\": [{ type: HostBinding, args: ['class.animate',] },],\n    \"sliderElementDisabledAttr\": [{ type: HostBinding, args: ['attr.disabled',] },],\n    \"onResize\": [{ type: HostListener, args: ['window:resize', ['$event'],] },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SliderComponent, [{\n        type: Component,\n        args: [{ selector: 'ng5-slider', template: `<!-- // 0 Left selection bar outside two handles -->\n<span ng5SliderElement #leftOuterSelectionBar class=\"ng5-slider-span ng5-slider-bar-wrapper ng5-slider-left-out-selection\">\n  <span class=\"ng5-slider-span ng5-slider-bar\"></span>\n</span>\n<!-- // 1 Right selection bar outside two handles -->\n<span ng5SliderElement #rightOuterSelectionBar class=\"ng5-slider-span ng5-slider-bar-wrapper ng5-slider-right-out-selection\">\n  <span class=\"ng5-slider-span ng5-slider-bar\"></span>\n</span>\n<!-- // 2 The whole slider bar -->\n<span ng5SliderElement #fullBar [class.ng5-slider-transparent]=\"fullBarTransparentClass\" class=\"ng5-slider-span ng5-slider-bar-wrapper ng5-slider-full-bar\">\n  <span class=\"ng5-slider-span ng5-slider-bar\"></span>\n</span>\n<!-- // 3 Selection bar between two handles -->\n<span ng5SliderElement #selectionBar [class.ng5-slider-draggable]=\"selectionBarDraggableClass\" class=\"ng5-slider-span ng5-slider-bar-wrapper ng5-slider-selection-bar\">\n  <span class=\"ng5-slider-span ng5-slider-bar ng5-slider-selection\" [ngStyle]=\"barStyle\"></span>\n</span>\n<!-- // 4 Low slider handle -->\n<span ng5SliderHandle #minHandle class=\"ng5-slider-span ng5-slider-pointer ng5-slider-pointer-min\" [ngStyle]=minPointerStyle></span>\n<!-- // 5 High slider handle -->\n<span ng5SliderHandle #maxHandle [style.display]=\"range ? 'inherit' : 'none'\" class=\"ng5-slider-span ng5-slider-pointer ng5-slider-pointer-max\" [ngStyle]=maxPointerStyle></span>\n<!-- // 6 Floor label -->\n<span ng5SliderLabel #floorLabel class=\"ng5-slider-span ng5-slider-bubble ng5-slider-limit ng5-slider-floor\"></span>\n<!-- // 7 Ceiling label -->\n<span ng5SliderLabel #ceilLabel class=\"ng5-slider-span ng5-slider-bubble ng5-slider-limit ng5-slider-ceil\"></span>\n<!-- // 8 Label above the low slider handle -->\n<span ng5SliderLabel #minHandleLabel class=\"ng5-slider-span ng5-slider-bubble ng5-slider-model-value\"></span>\n<!-- // 9 Label above the high slider handle -->\n<span ng5SliderLabel #maxHandleLabel class=\"ng5-slider-span ng5-slider-bubble ng5-slider-model-high\"></span>\n<!-- // 10 Combined range label when the slider handles are close ex. 15 - 17 -->\n<span ng5SliderLabel #combinedLabel class=\"ng5-slider-span ng5-slider-bubble ng5-slider-combined\"></span>\n<!-- // 11 The ticks -->\n<span ng5SliderElement #ticksElement [hidden]=\"!showTicks\" [class.ng5-slider-ticks-values-under]=\"ticksUnderValuesClass\" class=\"ng5-slider-ticks\">\n  <span *ngFor=\"let t of ticks\" class=\"ng5-slider-tick\" [ngClass]=\"{'ng5-slider-selected': t.selected}\" [ngStyle]=\"t.style\">\n    <ng5-slider-tooltip-wrapper [template]=\"tooltipTemplate\" [tooltip]=\"t.tooltip\" [placement]=\"t.tooltipPlacement\"></ng5-slider-tooltip-wrapper>\n    <ng5-slider-tooltip-wrapper *ngIf=\"t.value != null\" class=\"ng5-slider-span ng5-slider-tick-value\"\n        [template]=\"tooltipTemplate\" [tooltip]=\"t.valueTooltip\" [placement]=\"t.valueTooltipPlacement\" [content]=\"t.value\"></ng5-slider-tooltip-wrapper>\n    <span *ngIf=\"t.legend != null\" class=\"ng5-slider-span ng5-slider-tick-legend\" [innerHTML]=\"t.legend\"></span>\n  </span>\n</span>`, host: { class: 'ng5-slider' }, providers: [NG5_SLIDER_CONTROL_VALUE_ACCESSOR], styles: [\"::ng-deep .ng5-slider{display:inline-block;position:relative;height:4px;width:100%;margin:35px 0 15px;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y}::ng-deep .ng5-slider.with-legend{margin-bottom:40px}::ng-deep .ng5-slider[disabled]{cursor:not-allowed}::ng-deep .ng5-slider[disabled] .ng5-slider-pointer{cursor:not-allowed;background-color:#d8e0f3}::ng-deep .ng5-slider[disabled] .ng5-slider-draggable{cursor:not-allowed}::ng-deep .ng5-slider[disabled] .ng5-slider-selection{background:#8b91a2}::ng-deep .ng5-slider[disabled] .ng5-slider-tick{cursor:not-allowed}::ng-deep .ng5-slider[disabled] .ng5-slider-tick.ng5-slider-selected{background:#8b91a2}::ng-deep .ng5-slider .ng5-slider-span{white-space:nowrap;position:absolute;display:inline-block}::ng-deep .ng5-slider .ng5-slider-base{width:100%;height:100%;padding:0}::ng-deep .ng5-slider .ng5-slider-bar-wrapper{left:0;-webkit-box-sizing:border-box;box-sizing:border-box;margin-top:-16px;padding-top:16px;width:100%;height:32px;z-index:1}::ng-deep .ng5-slider .ng5-slider-draggable{cursor:move}::ng-deep .ng5-slider .ng5-slider-bar{left:0;width:100%;height:4px;z-index:1;background:#d8e0f3;border-radius:2px}::ng-deep .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-transparent .ng5-slider-bar{background:0 0}::ng-deep .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-left-out-selection .ng5-slider-bar{background:#df002d}::ng-deep .ng5-slider .ng5-slider-bar-wrapper.ng5-slider-right-out-selection .ng5-slider-bar{background:#03a688}::ng-deep .ng5-slider .ng5-slider-selection{z-index:2;background:#0db9f0;border-radius:2px}::ng-deep .ng5-slider .ng5-slider-pointer{cursor:pointer;width:32px;height:32px;top:-14px;background-color:#0db9f0;z-index:3;border-radius:16px}::ng-deep .ng5-slider .ng5-slider-pointer:after{content:'';width:8px;height:8px;position:absolute;top:12px;left:12px;border-radius:4px;background:#fff}::ng-deep .ng5-slider .ng5-slider-pointer:hover:after{background-color:#fff}::ng-deep .ng5-slider .ng5-slider-pointer.ng5-slider-active{z-index:4}::ng-deep .ng5-slider .ng5-slider-pointer.ng5-slider-active:after{background-color:#451aff}::ng-deep .ng5-slider .ng5-slider-bubble{cursor:default;bottom:16px;padding:1px 3px;color:#55637d;font-size:16px}::ng-deep .ng5-slider .ng5-slider-bubble.ng5-slider-limit{color:#55637d}::ng-deep .ng5-slider .ng5-slider-ticks{-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;height:0;position:absolute;left:0;top:-3px;margin:0;z-index:1;list-style:none}::ng-deep .ng5-slider .ng5-slider-ticks-values-under .ng5-slider-tick-value{top:auto;bottom:-36px}::ng-deep .ng5-slider .ng5-slider-tick{text-align:center;cursor:pointer;width:10px;height:10px;background:#d8e0f3;border-radius:50%;position:absolute;top:0;left:0;margin-left:11px}::ng-deep .ng5-slider .ng5-slider-tick.ng5-slider-selected{background:#0db9f0}::ng-deep .ng5-slider .ng5-slider-tick-value{position:absolute;top:-34px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0)}::ng-deep .ng5-slider .ng5-slider-tick-legend{position:absolute;top:24px;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);max-width:50px;white-space:normal}::ng-deep .ng5-slider.vertical{position:relative;width:4px;height:100%;margin:0 20px;padding:0;vertical-align:baseline;-ms-touch-action:pan-x;touch-action:pan-x}::ng-deep .ng5-slider.vertical .ng5-slider-base{width:100%;height:100%;padding:0}::ng-deep .ng5-slider.vertical .ng5-slider-bar-wrapper{top:auto;left:0;margin:0 0 0 -16px;padding:0 0 0 16px;height:100%;width:32px}::ng-deep .ng5-slider.vertical .ng5-slider-bar{bottom:0;left:auto;width:4px;height:100%}::ng-deep .ng5-slider.vertical .ng5-slider-pointer{left:-14px!important;top:auto;bottom:0}::ng-deep .ng5-slider.vertical .ng5-slider-bubble{left:16px!important;bottom:0}::ng-deep .ng5-slider.vertical .ng5-slider-ticks{height:100%;width:0;left:-3px;top:0;z-index:1}::ng-deep .ng5-slider.vertical .ng5-slider-tick{vertical-align:middle;margin-left:auto;margin-top:11px}::ng-deep .ng5-slider.vertical .ng5-slider-tick-value{left:24px;top:auto;-webkit-transform:translate(0,-28%);transform:translate(0,-28%)}::ng-deep .ng5-slider.vertical .ng5-slider-tick-legend{top:auto;right:24px;-webkit-transform:translate(0,-28%);transform:translate(0,-28%);max-width:none;white-space:nowrap}::ng-deep .ng5-slider.vertical .ng5-slider-ticks-values-under .ng5-slider-tick-value{bottom:auto;left:auto;right:24px}::ng-deep .ng5-slider *{-webkit-transition:none;transition:none}::ng-deep .ng5-slider.animate .ng5-slider-bar-wrapper{-webkit-transition:all linear .3s;transition:all linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-selection{-webkit-transition:background-color linear .3s;transition:background-color linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-pointer{-webkit-transition:all linear .3s;transition:all linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-bubble{-webkit-transition:all linear .3s;transition:all linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-bubble.ng5-slider-limit{-webkit-transition:opacity linear .3s;transition:opacity linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-bubble.ng5-slider-combined{-webkit-transition:opacity linear .3s;transition:opacity linear .3s}::ng-deep .ng5-slider.animate .ng5-slider-tick{-webkit-transition:background-color linear .3s;transition:background-color linear .3s}\"] }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }]; }, { value: [{\n            type: Input\n        }], valueChange: [{\n            type: Output\n        }], highValue: [{\n            type: Input\n        }], highValueChange: [{\n            type: Output\n        }], options: [{\n            type: Input\n        }], userChangeStart: [{\n            type: Output\n        }], userChange: [{\n            type: Output\n        }], userChangeEnd: [{\n            type: Output\n        }], sliderElementVerticalClass: [{\n            type: HostBinding,\n            args: ['class.vertical']\n        }], sliderElementAnimateClass: [{\n            type: HostBinding,\n            args: ['class.animate']\n        }], sliderElementDisabledAttr: [{\n            type: HostBinding,\n            args: ['attr.disabled']\n        }], manualRefresh: [{\n            type: Input\n        }], triggerFocus: [{\n            type: Input\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onResize: [{\n            type: HostListener,\n            args: ['window:resize', ['$event']]\n        }], leftOuterSelectionBarElement: [{\n            type: ViewChild,\n            args: ['leftOuterSelectionBar', { read: SliderElementDirective }]\n        }], rightOuterSelectionBarElement: [{\n            type: ViewChild,\n            args: ['rightOuterSelectionBar', { read: SliderElementDirective }]\n        }], fullBarElement: [{\n            type: ViewChild,\n            args: ['fullBar', { read: SliderElementDirective }]\n        }], selectionBarElement: [{\n            type: ViewChild,\n            args: ['selectionBar', { read: SliderElementDirective }]\n        }], minHandleElement: [{\n            type: ViewChild,\n            args: ['minHandle', { read: SliderHandleDirective }]\n        }], maxHandleElement: [{\n            type: ViewChild,\n            args: ['maxHandle', { read: SliderHandleDirective }]\n        }], floorLabelElement: [{\n            type: ViewChild,\n            args: ['floorLabel', { read: SliderLabelDirective }]\n        }], ceilLabelElement: [{\n            type: ViewChild,\n            args: ['ceilLabel', { read: SliderLabelDirective }]\n        }], minHandleLabelElement: [{\n            type: ViewChild,\n            args: ['minHandleLabel', { read: SliderLabelDirective }]\n        }], maxHandleLabelElement: [{\n            type: ViewChild,\n            args: ['maxHandleLabel', { read: SliderLabelDirective }]\n        }], combinedLabelElement: [{\n            type: ViewChild,\n            args: ['combinedLabel', { read: SliderLabelDirective }]\n        }], ticksElement: [{\n            type: ViewChild,\n            args: ['ticksElement', { read: SliderElementDirective }]\n        }], tooltipTemplate: [{\n            type: ContentChild,\n            args: ['tooltipTemplate']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass TooltipWrapperComponent {\n}\nTooltipWrapperComponent.ɵfac = function TooltipWrapperComponent_Factory(t) { return new (t || TooltipWrapperComponent)(); };\nTooltipWrapperComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TooltipWrapperComponent, selectors: [[\"ng5-slider-tooltip-wrapper\"]], inputs: { template: \"template\", tooltip: \"tooltip\", placement: \"placement\", content: \"content\" }, decls: 2, vars: 2, consts: [[4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"ng5-slider-inner-tooltip\"]], template: function TooltipWrapperComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TooltipWrapperComponent_ng_container_0_Template, 2, 6, \"ng-container\", 0);\n        ɵngcc0.ɵɵtemplate(1, TooltipWrapperComponent_ng_container_1_Template, 3, 3, \"ng-container\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.template);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.template);\n    } }, dependencies: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet], styles: [\".ng5-slider-inner-tooltip[_ngcontent-%COMP%]{height:100%}\"] });\n/** @nocollapse */\nTooltipWrapperComponent.ctorParameters = () => [];\nTooltipWrapperComponent.propDecorators = {\n    \"template\": [{ type: Input },],\n    \"tooltip\": [{ type: Input },],\n    \"placement\": [{ type: Input },],\n    \"content\": [{ type: Input },],\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TooltipWrapperComponent, [{\n        type: Component,\n        args: [{ selector: 'ng5-slider-tooltip-wrapper', template: `<ng-container *ngIf=\"template\">\n  <ng-template *ngTemplateOutlet=\"template; context: {tooltip: tooltip, placement: placement, content: content}\"></ng-template>\n</ng-container>\n\n<ng-container *ngIf=\"!template\">\n  <div class=\"ng5-slider-inner-tooltip\" [attr.title]=\"tooltip\" [attr.data-tooltip-placement]=\"placement\">\n    {{content}}\n  </div>\n</ng-container>`, styles: [\".ng5-slider-inner-tooltip{height:100%}\"] }]\n    }], null, { template: [{\n            type: Input\n        }], tooltip: [{\n            type: Input\n        }], placement: [{\n            type: Input\n        }], content: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Ng5Slider module\n *\n * The module exports the slider component\n */\nclass Ng5SliderModule {\n}\nNg5SliderModule.ɵfac = function Ng5SliderModule_Factory(t) { return new (t || Ng5SliderModule)(); };\nNg5SliderModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: Ng5SliderModule });\nNg5SliderModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [CommonModule] });\n/** @nocollapse */\nNg5SliderModule.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng5SliderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule\n                ],\n                declarations: [\n                    SliderComponent,\n                    SliderElementDirective,\n                    SliderHandleDirective,\n                    SliderLabelDirective,\n                    TooltipWrapperComponent\n                ],\n                exports: [\n                    SliderComponent\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng5SliderModule, { declarations: function () { return [SliderComponent, SliderElementDirective, SliderHandleDirective, SliderLabelDirective, TooltipWrapperComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SliderComponent]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Ng5SliderModule, ChangeContext, PointerType, LabelType, Options, SliderElementDirective as ɵb, SliderHandleDirective as ɵc, SliderLabelDirective as ɵd, SliderComponent as ɵa, TooltipWrapperComponent as ɵe };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}